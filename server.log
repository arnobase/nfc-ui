Starting frontend...
yarn run v1.22.19
$ react-scripts start
(node:1762903) [DEP_WEBPACK_DEV_SERVER_HTTPS] DeprecationWarning: 'https' option is deprecated. Please use the 'server' option.
(Use `node --trace-deprecation ...` to show where the warning was created)
(node:1762903) [DEP_WEBPACK_DEV_SERVER_ON_AFTER_SETUP_MIDDLEWARE] DeprecationWarning: 'onAfterSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.
(node:1762903) [DEP_WEBPACK_DEV_SERVER_ON_BEFORE_SETUP_MIDDLEWARE] DeprecationWarning: 'onBeforeSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.
Starting the development server...

Starting backend...
Compiled successfully!

You can now view nfc-assoc in the browser.

  Local:            https://localhost:3002
  On Your Network:  https://192.168.1.45:3002

Note that the development build is not optimized.
To create a production build, use yarn build.

webpack compiled successfully
{
  key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 76 67 49 42 41 44 41 4e 42 67 6b 71 68 6b 69 47 39 77 ... 1654 more bytes>,
  cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 36 7a 43 43 41 74 4f 67 41 77 49 42 41 67 49 55 46 4f ... 1369 more bytes>
}
Base de donn√©es SQLite situ√©e √† : /opt/nfc-ui/backend/database.sqlite
Serveur en cours d'ex√©cution sur https://https://192.168.1.45:3001
Client connect√©
{
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  headers: Object [AxiosHeaders] {
    server: [32m'Lyrion Music Server (9.0.0 - 1732822968)'[39m,
    connection: [32m'close'[39m,
    [32m'content-length'[39m: [32m'137'[39m,
    [32m'content-type'[39m: [32m'application/json'[39m,
    [32m'x-time-to-serve'[39m: [32m'0.0443010330200195'[39m
  },
  config: {
    transitional: {
      silentJSONParsing: [33mtrue[39m,
      forcedJSONParsing: [33mtrue[39m,
      clarifyTimeoutError: [33mfalse[39m
    },
    adapter: [ [32m'xhr'[39m, [32m'http'[39m, [32m'fetch'[39m ],
    transformRequest: [ [36m[Function: transformRequest][39m ],
    transformResponse: [ [36m[Function: transformResponse][39m ],
    timeout: [33m0[39m,
    xsrfCookieName: [32m'XSRF-TOKEN'[39m,
    xsrfHeaderName: [32m'X-XSRF-TOKEN'[39m,
    maxContentLength: [33m-1[39m,
    maxBodyLength: [33m-1[39m,
    env: {
      FormData: [Function: FormData] {
        LINE_BREAK: [32m'\r\n'[39m,
        DEFAULT_CONTENT_TYPE: [32m'application/octet-stream'[39m
      },
      Blob: [1mnull[22m
    },
    validateStatus: [36m[Function: validateStatus][39m,
    headers: Object [AxiosHeaders] {
      Accept: [32m'application/json, text/plain, */*'[39m,
      [32m'Content-Type'[39m: [32m'application/json'[39m,
      Origin: [32m'http://192.168.1.16:9000'[39m,
      Referer: [32m'http://192.168.1.16:9000/'[39m,
      Cookie: [32m'Squeezebox-player=b8:27:eb:e4:b0:6e'[39m,
      [32m'User-Agent'[39m: [32m'axios/1.7.7'[39m,
      [32m'Content-Length'[39m: [32m'125'[39m,
      [32m'Accept-Encoding'[39m: [32m'gzip, compress, deflate, br'[39m
    },
    method: [32m'post'[39m,
    url: [32m'http://192.168.1.16:9000/jsonrpc.js'[39m,
    data: [32m'{"id":0,"method":"slim.request","params":["b8:27:eb:e4:b0:6e",["playlist","play","youtube://www.youtube.com/v/HxUAv3hdX_g"]]}'[39m
  },
  request: [36m<ref *1>[39m ClientRequest {
    _events: [Object: null prototype] {
      abort: [36m[Function (anonymous)][39m,
      aborted: [36m[Function (anonymous)][39m,
      connect: [36m[Function (anonymous)][39m,
      error: [36m[Function (anonymous)][39m,
      socket: [36m[Function (anonymous)][39m,
      timeout: [36m[Function (anonymous)][39m,
      finish: [36m[Function: requestOnFinish][39m
    },
    _eventsCount: [33m7[39m,
    _maxListeners: [90mundefined[39m,
    outputData: [],
    outputSize: [33m0[39m,
    writable: [33mtrue[39m,
    destroyed: [33mfalse[39m,
    _last: [33mtrue[39m,
    chunkedEncoding: [33mfalse[39m,
    shouldKeepAlive: [33mfalse[39m,
    maxRequestsOnConnectionReached: [33mfalse[39m,
    _defaultKeepAlive: [33mtrue[39m,
    useChunkedEncodingByDefault: [33mtrue[39m,
    sendDate: [33mfalse[39m,
    _removedConnection: [33mfalse[39m,
    _removedContLen: [33mfalse[39m,
    _removedTE: [33mfalse[39m,
    strictContentLength: [33mfalse[39m,
    _contentLength: [32m'125'[39m,
    _hasBody: [33mtrue[39m,
    _trailer: [32m''[39m,
    finished: [33mtrue[39m,
    _headerSent: [33mtrue[39m,
    _closed: [33mfalse[39m,
    socket: [36m<ref *2>[39m Socket {
      connecting: [33mfalse[39m,
      _hadError: [33mfalse[39m,
      _parent: [1mnull[22m,
      _host: [1mnull[22m,
      _closeAfterHandlingError: [33mfalse[39m,
      _readableState: ReadableState {
        objectMode: [33mfalse[39m,
        highWaterMark: [33m16384[39m,
        buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
        length: [33m0[39m,
        pipes: [],
        flowing: [33mtrue[39m,
        ended: [33mfalse[39m,
        endEmitted: [33mfalse[39m,
        reading: [33mtrue[39m,
        constructed: [33mtrue[39m,
        sync: [33mfalse[39m,
        needReadable: [33mtrue[39m,
        emittedReadable: [33mfalse[39m,
        readableListening: [33mfalse[39m,
        resumeScheduled: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        emitClose: [33mfalse[39m,
        autoDestroy: [33mtrue[39m,
        destroyed: [33mfalse[39m,
        errored: [1mnull[22m,
        closed: [33mfalse[39m,
        closeEmitted: [33mfalse[39m,
        defaultEncoding: [32m'utf8'[39m,
        awaitDrainWriters: [1mnull[22m,
        multiAwaitDrain: [33mfalse[39m,
        readingMore: [33mfalse[39m,
        dataEmitted: [33mtrue[39m,
        decoder: [1mnull[22m,
        encoding: [1mnull[22m,
        [[32mSymbol(kPaused)[39m]: [33mfalse[39m
      },
      _events: [Object: null prototype] {
        end: [36m[Function: onReadableStreamEnd][39m,
        free: [36m[Function: onFree][39m,
        close: [ [36m[Function: onClose][39m, [36m[Function: socketCloseListener][39m ],
        timeout: [36m[Function: onTimeout][39m,
        agentRemove: [36m[Function: onRemove][39m,
        error: [36m[Function: socketErrorListener][39m,
        finish: [Function: bound onceWrapper] { listener: [36m[Function: destroy][39m }
      },
      _eventsCount: [33m7[39m,
      _maxListeners: [90mundefined[39m,
      _writableState: WritableState {
        objectMode: [33mfalse[39m,
        highWaterMark: [33m16384[39m,
        finalCalled: [33mtrue[39m,
        needDrain: [33mfalse[39m,
        ending: [33mtrue[39m,
        ended: [33mtrue[39m,
        finished: [33mfalse[39m,
        destroyed: [33mfalse[39m,
        decodeStrings: [33mfalse[39m,
        defaultEncoding: [32m'utf8'[39m,
        length: [33m0[39m,
        writing: [33mfalse[39m,
        corked: [33m0[39m,
        sync: [33mfalse[39m,
        bufferProcessing: [33mfalse[39m,
        onwrite: [36m[Function: bound onwrite][39m,
        writecb: [1mnull[22m,
        writelen: [33m0[39m,
        afterWriteTickInfo: [1mnull[22m,
        buffered: [],
        bufferedIndex: [33m0[39m,
        allBuffers: [33mtrue[39m,
        allNoop: [33mtrue[39m,
        pendingcb: [33m1[39m,
        constructed: [33mtrue[39m,
        prefinished: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        emitClose: [33mfalse[39m,
        autoDestroy: [33mtrue[39m,
        errored: [1mnull[22m,
        closed: [33mfalse[39m,
        closeEmitted: [33mfalse[39m,
        [[32mSymbol(kOnFinished)[39m]: []
      },
      allowHalfOpen: [33mfalse[39m,
      _sockname: [1mnull[22m,
      _pendingData: [1mnull[22m,
      _pendingEncoding: [32m''[39m,
      server: [1mnull[22m,
      _server: [1mnull[22m,
      parser: [1mnull[22m,
      _httpMessage: [36m[Circular *1][39m,
      [[32mSymbol(async_id_symbol)[39m]: [33m116[39m,
      [[32mSymbol(kHandle)[39m]: TCP {
        reading: [33mtrue[39m,
        onconnection: [1mnull[22m,
        [[32mSymbol(owner_symbol)[39m]: [36m[Circular *2][39m
      },
      [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
      [[32mSymbol(timeout)[39m]: [1mnull[22m,
      [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
      [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
      [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
      [[32mSymbol(kSetNoDelay)[39m]: [33mfalse[39m,
      [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
      [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
      [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
      [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
      [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
    },
    _header: [32m'POST /jsonrpc.js HTTP/1.1\r\n'[39m +
      [32m'Accept: application/json, text/plain, */*\r\n'[39m +
      [32m'Content-Type: application/json\r\n'[39m +
      [32m'Origin: http://192.168.1.16:9000\r\n'[39m +
      [32m'Referer: http://192.168.1.16:9000/\r\n'[39m +
      [32m'Cookie: Squeezebox-player=b8:27:eb:e4:b0:6e\r\n'[39m +
      [32m'User-Agent: axios/1.7.7\r\n'[39m +
      [32m'Content-Length: 125\r\n'[39m +
      [32m'Accept-Encoding: gzip, compress, deflate, br\r\n'[39m +
      [32m'Host: 192.168.1.16:9000\r\n'[39m +
      [32m'Connection: close\r\n'[39m +
      [32m'\r\n'[39m,
    _keepAliveTimeout: [33m0[39m,
    _onPendingData: [36m[Function: nop][39m,
    agent: Agent {
      _events: [Object: null prototype] {
        free: [36m[Function (anonymous)][39m,
        newListener: [36m[Function: maybeEnableKeylog][39m
      },
      _eventsCount: [33m2[39m,
      _maxListeners: [90mundefined[39m,
      defaultPort: [33m80[39m,
      protocol: [32m'http:'[39m,
      options: [Object: null prototype] { path: [1mnull[22m },
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype] {
        [32m'192.168.1.16:9000:'[39m: [
          [36m<ref *2>[39m Socket {
            connecting: [33mfalse[39m,
            _hadError: [33mfalse[39m,
            _parent: [1mnull[22m,
            _host: [1mnull[22m,
            _closeAfterHandlingError: [33mfalse[39m,
            _readableState: ReadableState {
              objectMode: [33mfalse[39m,
              highWaterMark: [33m16384[39m,
              buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
              length: [33m0[39m,
              pipes: [],
              flowing: [33mtrue[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              constructed: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              resumeScheduled: [33mfalse[39m,
              errorEmitted: [33mfalse[39m,
              emitClose: [33mfalse[39m,
              autoDestroy: [33mtrue[39m,
              destroyed: [33mfalse[39m,
              errored: [1mnull[22m,
              closed: [33mfalse[39m,
              closeEmitted: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              awaitDrainWriters: [1mnull[22m,
              multiAwaitDrain: [33mfalse[39m,
              readingMore: [33mfalse[39m,
              dataEmitted: [33mtrue[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m,
              [[32mSymbol(kPaused)[39m]: [33mfalse[39m
            },
            _events: [Object: null prototype] {
              end: [36m[Function: onReadableStreamEnd][39m,
              free: [36m[Function: onFree][39m,
              close: [ [36m[Function: onClose][39m, [36m[Function: socketCloseListener][39m ],
              timeout: [36m[Function: onTimeout][39m,
              agentRemove: [36m[Function: onRemove][39m,
              error: [36m[Function: socketErrorListener][39m,
              finish: [Function: bound onceWrapper] {
                listener: [36m[Function: destroy][39m
              }
            },
            _eventsCount: [33m7[39m,
            _maxListeners: [90mundefined[39m,
            _writableState: WritableState {
              objectMode: [33mfalse[39m,
              highWaterMark: [33m16384[39m,
              finalCalled: [33mtrue[39m,
              needDrain: [33mfalse[39m,
              ending: [33mtrue[39m,
              ended: [33mtrue[39m,
              finished: [33mfalse[39m,
              destroyed: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              corked: [33m0[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function: bound onwrite][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              afterWriteTickInfo: [1mnull[22m,
              buffered: [],
              bufferedIndex: [33m0[39m,
              allBuffers: [33mtrue[39m,
              allNoop: [33mtrue[39m,
              pendingcb: [33m1[39m,
              constructed: [33mtrue[39m,
              prefinished: [33mfalse[39m,
              errorEmitted: [33mfalse[39m,
              emitClose: [33mfalse[39m,
              autoDestroy: [33mtrue[39m,
              errored: [1mnull[22m,
              closed: [33mfalse[39m,
              closeEmitted: [33mfalse[39m,
              [[32mSymbol(kOnFinished)[39m]: []
            },
            allowHalfOpen: [33mfalse[39m,
            _sockname: [1mnull[22m,
            _pendingData: [1mnull[22m,
            _pendingEncoding: [32m''[39m,
            server: [1mnull[22m,
            _server: [1mnull[22m,
            parser: [1mnull[22m,
            _httpMessage: [36m[Circular *1][39m,
            [[32mSymbol(async_id_symbol)[39m]: [33m116[39m,
            [[32mSymbol(kHandle)[39m]: TCP {
              reading: [33mtrue[39m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner_symbol)[39m]: [36m[Circular *2][39m
            },
            [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
            [[32mSymbol(timeout)[39m]: [1mnull[22m,
            [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
            [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
            [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
            [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
            [[32mSymbol(kSetNoDelay)[39m]: [33mfalse[39m,
            [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
            [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
            [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
            [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
            [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
          }
        ]
      },
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: [33m1000[39m,
      keepAlive: [33mfalse[39m,
      maxSockets: [33mInfinity[39m,
      maxFreeSockets: [33m256[39m,
      scheduling: [32m'lifo'[39m,
      maxTotalSockets: [33mInfinity[39m,
      totalSocketCount: [33m1[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m
    },
    socketPath: [90mundefined[39m,
    method: [32m'POST'[39m,
    maxHeaderSize: [90mundefined[39m,
    insecureHTTPParser: [90mundefined[39m,
    path: [32m'/jsonrpc.js'[39m,
    _ended: [33mtrue[39m,
    res: IncomingMessage {
      _readableState: ReadableState {
        objectMode: [33mfalse[39m,
        highWaterMark: [33m16384[39m,
        buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
        length: [33m0[39m,
        pipes: [],
        flowing: [33mtrue[39m,
        ended: [33mtrue[39m,
        endEmitted: [33mtrue[39m,
        reading: [33mfalse[39m,
        constructed: [33mtrue[39m,
        sync: [33mtrue[39m,
        needReadable: [33mfalse[39m,
        emittedReadable: [33mfalse[39m,
        readableListening: [33mfalse[39m,
        resumeScheduled: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        emitClose: [33mtrue[39m,
        autoDestroy: [33mtrue[39m,
        destroyed: [33mtrue[39m,
        errored: [1mnull[22m,
        closed: [33mtrue[39m,
        closeEmitted: [33mtrue[39m,
        defaultEncoding: [32m'utf8'[39m,
        awaitDrainWriters: [1mnull[22m,
        multiAwaitDrain: [33mfalse[39m,
        readingMore: [33mtrue[39m,
        dataEmitted: [33mtrue[39m,
        decoder: [1mnull[22m,
        encoding: [1mnull[22m,
        [[32mSymbol(kPaused)[39m]: [33mfalse[39m
      },
      _events: [Object: null prototype] {
        end: [ [36m[Function: responseOnEnd][39m, [36m[Function: handleStreamEnd][39m ],
        error: [36m[Function: handleStreamError][39m,
        data: [36m[Function: handleStreamData][39m,
        aborted: [36m[Function: handlerStreamAborted][39m
      },
      _eventsCount: [33m4[39m,
      _maxListeners: [90mundefined[39m,
      socket: [36m<ref *2>[39m Socket {
        connecting: [33mfalse[39m,
        _hadError: [33mfalse[39m,
        _parent: [1mnull[22m,
        _host: [1mnull[22m,
        _closeAfterHandlingError: [33mfalse[39m,
        _readableState: ReadableState {
          objectMode: [33mfalse[39m,
          highWaterMark: [33m16384[39m,
          buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
          length: [33m0[39m,
          pipes: [],
          flowing: [33mtrue[39m,
          ended: [33mfalse[39m,
          endEmitted: [33mfalse[39m,
          reading: [33mtrue[39m,
          constructed: [33mtrue[39m,
          sync: [33mfalse[39m,
          needReadable: [33mtrue[39m,
          emittedReadable: [33mfalse[39m,
          readableListening: [33mfalse[39m,
          resumeScheduled: [33mfalse[39m,
          errorEmitted: [33mfalse[39m,
          emitClose: [33mfalse[39m,
          autoDestroy: [33mtrue[39m,
          destroyed: [33mfalse[39m,
          errored: [1mnull[22m,
          closed: [33mfalse[39m,
          closeEmitted: [33mfalse[39m,
          defaultEncoding: [32m'utf8'[39m,
          awaitDrainWriters: [1mnull[22m,
          multiAwaitDrain: [33mfalse[39m,
          readingMore: [33mfalse[39m,
          dataEmitted: [33mtrue[39m,
          decoder: [1mnull[22m,
          encoding: [1mnull[22m,
          [[32mSymbol(kPaused)[39m]: [33mfalse[39m
        },
        _events: [Object: null prototype] {
          end: [36m[Function: onReadableStreamEnd][39m,
          free: [36m[Function: onFree][39m,
          close: [ [36m[Function: onClose][39m, [36m[Function: socketCloseListener][39m ],
          timeout: [36m[Function: onTimeout][39m,
          agentRemove: [36m[Function: onRemove][39m,
          error: [36m[Function: socketErrorListener][39m,
          finish: [Function: bound onceWrapper] {
            listener: [36m[Function: destroy][39m
          }
        },
        _eventsCount: [33m7[39m,
        _maxListeners: [90mundefined[39m,
        _writableState: WritableState {
          objectMode: [33mfalse[39m,
          highWaterMark: [33m16384[39m,
          finalCalled: [33mtrue[39m,
          needDrain: [33mfalse[39m,
          ending: [33mtrue[39m,
          ended: [33mtrue[39m,
          finished: [33mfalse[39m,
          destroyed: [33mfalse[39m,
          decodeStrings: [33mfalse[39m,
          defaultEncoding: [32m'utf8'[39m,
          length: [33m0[39m,
          writing: [33mfalse[39m,
          corked: [33m0[39m,
          sync: [33mfalse[39m,
          bufferProcessing: [33mfalse[39m,
          onwrite: [36m[Function: bound onwrite][39m,
          writecb: [1mnull[22m,
          writelen: [33m0[39m,
          afterWriteTickInfo: [1mnull[22m,
          buffered: [],
          bufferedIndex: [33m0[39m,
          allBuffers: [33mtrue[39m,
          allNoop: [33mtrue[39m,
          pendingcb: [33m1[39m,
          constructed: [33mtrue[39m,
          prefinished: [33mfalse[39m,
          errorEmitted: [33mfalse[39m,
          emitClose: [33mfalse[39m,
          autoDestroy: [33mtrue[39m,
          errored: [1mnull[22m,
          closed: [33mfalse[39m,
          closeEmitted: [33mfalse[39m,
          [[32mSymbol(kOnFinished)[39m]: []
        },
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [1mnull[22m,
        _server: [1mnull[22m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular *1][39m,
        [[32mSymbol(async_id_symbol)[39m]: [33m116[39m,
        [[32mSymbol(kHandle)[39m]: TCP {
          reading: [33mtrue[39m,
          onconnection: [1mnull[22m,
          [[32mSymbol(owner_symbol)[39m]: [36m[Circular *2][39m
        },
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetNoDelay)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
        [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
      },
      httpVersionMajor: [33m1[39m,
      httpVersionMinor: [33m1[39m,
      httpVersion: [32m'1.1'[39m,
      complete: [33mtrue[39m,
      rawHeaders: [
        [32m'Server'[39m,
        [32m'Lyrion Music Server (9.0.0 - 1732822968)'[39m,
        [32m'Connection'[39m,
        [32m'close'[39m,
        [32m'Content-Length'[39m,
        [32m'137'[39m,
        [32m'Content-Type'[39m,
        [32m'application/json'[39m,
        [32m'X-Time-To-Serve'[39m,
        [32m'0.0443010330200195'[39m
      ],
      rawTrailers: [],
      aborted: [33mfalse[39m,
      upgrade: [33mfalse[39m,
      url: [32m''[39m,
      method: [1mnull[22m,
      statusCode: [33m200[39m,
      statusMessage: [32m'OK'[39m,
      client: [36m<ref *2>[39m Socket {
        connecting: [33mfalse[39m,
        _hadError: [33mfalse[39m,
        _parent: [1mnull[22m,
        _host: [1mnull[22m,
        _closeAfterHandlingError: [33mfalse[39m,
        _readableState: ReadableState {
          objectMode: [33mfalse[39m,
          highWaterMark: [33m16384[39m,
          buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
          length: [33m0[39m,
          pipes: [],
          flowing: [33mtrue[39m,
          ended: [33mfalse[39m,
          endEmitted: [33mfalse[39m,
          reading: [33mtrue[39m,
          constructed: [33mtrue[39m,
          sync: [33mfalse[39m,
          needReadable: [33mtrue[39m,
          emittedReadable: [33mfalse[39m,
          readableListening: [33mfalse[39m,
          resumeScheduled: [33mfalse[39m,
          errorEmitted: [33mfalse[39m,
          emitClose: [33mfalse[39m,
          autoDestroy: [33mtrue[39m,
          destroyed: [33mfalse[39m,
          errored: [1mnull[22m,
          closed: [33mfalse[39m,
          closeEmitted: [33mfalse[39m,
          defaultEncoding: [32m'utf8'[39m,
          awaitDrainWriters: [1mnull[22m,
          multiAwaitDrain: [33mfalse[39m,
          readingMore: [33mfalse[39m,
          dataEmitted: [33mtrue[39m,
          decoder: [1mnull[22m,
          encoding: [1mnull[22m,
          [[32mSymbol(kPaused)[39m]: [33mfalse[39m
        },
        _events: [Object: null prototype] {
          end: [36m[Function: onReadableStreamEnd][39m,
          free: [36m[Function: onFree][39m,
          close: [ [36m[Function: onClose][39m, [36m[Function: socketCloseListener][39m ],
          timeout: [36m[Function: onTimeout][39m,
          agentRemove: [36m[Function: onRemove][39m,
          error: [36m[Function: socketErrorListener][39m,
          finish: [Function: bound onceWrapper] {
            listener: [36m[Function: destroy][39m
          }
        },
        _eventsCount: [33m7[39m,
        _maxListeners: [90mundefined[39m,
        _writableState: WritableState {
          objectMode: [33mfalse[39m,
          highWaterMark: [33m16384[39m,
          finalCalled: [33mtrue[39m,
          needDrain: [33mfalse[39m,
          ending: [33mtrue[39m,
          ended: [33mtrue[39m,
          finished: [33mfalse[39m,
          destroyed: [33mfalse[39m,
          decodeStrings: [33mfalse[39m,
          defaultEncoding: [32m'utf8'[39m,
          length: [33m0[39m,
          writing: [33mfalse[39m,
          corked: [33m0[39m,
          sync: [33mfalse[39m,
          bufferProcessing: [33mfalse[39m,
          onwrite: [36m[Function: bound onwrite][39m,
          writecb: [1mnull[22m,
          writelen: [33m0[39m,
          afterWriteTickInfo: [1mnull[22m,
          buffered: [],
          bufferedIndex: [33m0[39m,
          allBuffers: [33mtrue[39m,
          allNoop: [33mtrue[39m,
          pendingcb: [33m1[39m,
          constructed: [33mtrue[39m,
          prefinished: [33mfalse[39m,
          errorEmitted: [33mfalse[39m,
          emitClose: [33mfalse[39m,
          autoDestroy: [33mtrue[39m,
          errored: [1mnull[22m,
          closed: [33mfalse[39m,
          closeEmitted: [33mfalse[39m,
          [[32mSymbol(kOnFinished)[39m]: []
        },
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [1mnull[22m,
        _server: [1mnull[22m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular *1][39m,
        [[32mSymbol(async_id_symbol)[39m]: [33m116[39m,
        [[32mSymbol(kHandle)[39m]: TCP {
          reading: [33mtrue[39m,
          onconnection: [1mnull[22m,
          [[32mSymbol(owner_symbol)[39m]: [36m[Circular *2][39m
        },
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetNoDelay)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
        [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
      },
      _consuming: [33mfalse[39m,
      _dumped: [33mfalse[39m,
      req: [36m[Circular *1][39m,
      responseUrl: [32m'http://192.168.1.16:9000/jsonrpc.js'[39m,
      redirects: [],
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
      [[32mSymbol(kHeaders)[39m]: {
        server: [32m'Lyrion Music Server (9.0.0 - 1732822968)'[39m,
        connection: [32m'close'[39m,
        [32m'content-length'[39m: [32m'137'[39m,
        [32m'content-type'[39m: [32m'application/json'[39m,
        [32m'x-time-to-serve'[39m: [32m'0.0443010330200195'[39m
      },
      [[32mSymbol(kHeadersCount)[39m]: [33m10[39m,
      [[32mSymbol(kTrailers)[39m]: [1mnull[22m,
      [[32mSymbol(kTrailersCount)[39m]: [33m0[39m,
      [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
    },
    aborted: [33mfalse[39m,
    timeoutCb: [1mnull[22m,
    upgradeOrConnect: [33mfalse[39m,
    parser: [1mnull[22m,
    maxHeadersCount: [1mnull[22m,
    reusedSocket: [33mfalse[39m,
    host: [32m'192.168.1.16'[39m,
    protocol: [32m'http:'[39m,
    _redirectable: Writable {
      _writableState: WritableState {
        objectMode: [33mfalse[39m,
        highWaterMark: [33m16384[39m,
        finalCalled: [33mfalse[39m,
        needDrain: [33mfalse[39m,
        ending: [33mfalse[39m,
        ended: [33mfalse[39m,
        finished: [33mfalse[39m,
        destroyed: [33mfalse[39m,
        decodeStrings: [33mtrue[39m,
        defaultEncoding: [32m'utf8'[39m,
        length: [33m0[39m,
        writing: [33mfalse[39m,
        corked: [33m0[39m,
        sync: [33mtrue[39m,
        bufferProcessing: [33mfalse[39m,
        onwrite: [36m[Function: bound onwrite][39m,
        writecb: [1mnull[22m,
        writelen: [33m0[39m,
        afterWriteTickInfo: [1mnull[22m,
        buffered: [],
        bufferedIndex: [33m0[39m,
        allBuffers: [33mtrue[39m,
        allNoop: [33mtrue[39m,
        pendingcb: [33m0[39m,
        constructed: [33mtrue[39m,
        prefinished: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        emitClose: [33mtrue[39m,
        autoDestroy: [33mtrue[39m,
        errored: [1mnull[22m,
        closed: [33mfalse[39m,
        closeEmitted: [33mfalse[39m,
        [[32mSymbol(kOnFinished)[39m]: []
      },
      _events: [Object: null prototype] {
        response: [36m[Function: handleResponse][39m,
        error: [36m[Function: handleRequestError][39m,
        socket: [36m[Function: handleRequestSocket][39m
      },
      _eventsCount: [33m3[39m,
      _maxListeners: [90mundefined[39m,
      _options: {
        maxRedirects: [33m21[39m,
        maxBodyLength: [33mInfinity[39m,
        protocol: [32m'http:'[39m,
        path: [32m'/jsonrpc.js'[39m,
        method: [32m'POST'[39m,
        headers: [Object: null prototype] {
          Accept: [32m'application/json, text/plain, */*'[39m,
          [32m'Content-Type'[39m: [32m'application/json'[39m,
          Origin: [32m'http://192.168.1.16:9000'[39m,
          Referer: [32m'http://192.168.1.16:9000/'[39m,
          Cookie: [32m'Squeezebox-player=b8:27:eb:e4:b0:6e'[39m,
          [32m'User-Agent'[39m: [32m'axios/1.7.7'[39m,
          [32m'Content-Length'[39m: [32m'125'[39m,
          [32m'Accept-Encoding'[39m: [32m'gzip, compress, deflate, br'[39m
        },
        agents: { http: [90mundefined[39m, https: [90mundefined[39m },
        auth: [90mundefined[39m,
        family: [90mundefined[39m,
        beforeRedirect: [36m[Function: dispatchBeforeRedirect][39m,
        beforeRedirects: { proxy: [36m[Function: beforeRedirect][39m },
        hostname: [32m'192.168.1.16'[39m,
        port: [32m'9000'[39m,
        agent: [90mundefined[39m,
        nativeProtocols: {
          [32m'http:'[39m: {
            _connectionListener: [36m[Function: connectionListener][39m,
            METHODS: [
              [32m'ACL'[39m,         [32m'BIND'[39m,       [32m'CHECKOUT'[39m,
              [32m'CONNECT'[39m,     [32m'COPY'[39m,       [32m'DELETE'[39m,
              [32m'GET'[39m,         [32m'HEAD'[39m,       [32m'LINK'[39m,
              [32m'LOCK'[39m,        [32m'M-SEARCH'[39m,   [32m'MERGE'[39m,
              [32m'MKACTIVITY'[39m,  [32m'MKCALENDAR'[39m, [32m'MKCOL'[39m,
              [32m'MOVE'[39m,        [32m'NOTIFY'[39m,     [32m'OPTIONS'[39m,
              [32m'PATCH'[39m,       [32m'POST'[39m,       [32m'PROPFIND'[39m,
              [32m'PROPPATCH'[39m,   [32m'PURGE'[39m,      [32m'PUT'[39m,
              [32m'REBIND'[39m,      [32m'REPORT'[39m,     [32m'SEARCH'[39m,
              [32m'SOURCE'[39m,      [32m'SUBSCRIBE'[39m,  [32m'TRACE'[39m,
              [32m'UNBIND'[39m,      [32m'UNLINK'[39m,     [32m'UNLOCK'[39m,
              [32m'UNSUBSCRIBE'[39m
            ],
            STATUS_CODES: {
              [32m'100'[39m: [32m'Continue'[39m,
              [32m'101'[39m: [32m'Switching Protocols'[39m,
              [32m'102'[39m: [32m'Processing'[39m,
              [32m'103'[39m: [32m'Early Hints'[39m,
              [32m'200'[39m: [32m'OK'[39m,
              [32m'201'[39m: [32m'Created'[39m,
              [32m'202'[39m: [32m'Accepted'[39m,
              [32m'203'[39m: [32m'Non-Authoritative Information'[39m,
              [32m'204'[39m: [32m'No Content'[39m,
              [32m'205'[39m: [32m'Reset Content'[39m,
              [32m'206'[39m: [32m'Partial Content'[39m,
              [32m'207'[39m: [32m'Multi-Status'[39m,
              [32m'208'[39m: [32m'Already Reported'[39m,
              [32m'226'[39m: [32m'IM Used'[39m,
              [32m'300'[39m: [32m'Multiple Choices'[39m,
              [32m'301'[39m: [32m'Moved Permanently'[39m,
              [32m'302'[39m: [32m'Found'[39m,
              [32m'303'[39m: [32m'See Other'[39m,
              [32m'304'[39m: [32m'Not Modified'[39m,
              [32m'305'[39m: [32m'Use Proxy'[39m,
              [32m'307'[39m: [32m'Temporary Redirect'[39m,
              [32m'308'[39m: [32m'Permanent Redirect'[39m,
              [32m'400'[39m: [32m'Bad Request'[39m,
              [32m'401'[39m: [32m'Unauthorized'[39m,
              [32m'402'[39m: [32m'Payment Required'[39m,
              [32m'403'[39m: [32m'Forbidden'[39m,
              [32m'404'[39m: [32m'Not Found'[39m,
              [32m'405'[39m: [32m'Method Not Allowed'[39m,
              [32m'406'[39m: [32m'Not Acceptable'[39m,
              [32m'407'[39m: [32m'Proxy Authentication Required'[39m,
              [32m'408'[39m: [32m'Request Timeout'[39m,
              [32m'409'[39m: [32m'Conflict'[39m,
              [32m'410'[39m: [32m'Gone'[39m,
              [32m'411'[39m: [32m'Length Required'[39m,
              [32m'412'[39m: [32m'Precondition Failed'[39m,
              [32m'413'[39m: [32m'Payload Too Large'[39m,
              [32m'414'[39m: [32m'URI Too Long'[39m,
              [32m'415'[39m: [32m'Unsupported Media Type'[39m,
              [32m'416'[39m: [32m'Range Not Satisfiable'[39m,
              [32m'417'[39m: [32m'Expectation Failed'[39m,
              [32m'418'[39m: [32m"I'm a Teapot"[39m,
              [32m'421'[39m: [32m'Misdirected Request'[39m,
              [32m'422'[39m: [32m'Unprocessable Entity'[39m,
              [32m'423'[39m: [32m'Locked'[39m,
              [32m'424'[39m: [32m'Failed Dependency'[39m,
              [32m'425'[39m: [32m'Too Early'[39m,
              [32m'426'[39m: [32m'Upgrade Required'[39m,
              [32m'428'[39m: [32m'Precondition Required'[39m,
              [32m'429'[39m: [32m'Too Many Requests'[39m,
              [32m'431'[39m: [32m'Request Header Fields Too Large'[39m,
              [32m'451'[39m: [32m'Unavailable For Legal Reasons'[39m,
              [32m'500'[39m: [32m'Internal Server Error'[39m,
              [32m'501'[39m: [32m'Not Implemented'[39m,
              [32m'502'[39m: [32m'Bad Gateway'[39m,
              [32m'503'[39m: [32m'Service Unavailable'[39m,
              [32m'504'[39m: [32m'Gateway Timeout'[39m,
              [32m'505'[39m: [32m'HTTP Version Not Supported'[39m,
              [32m'506'[39m: [32m'Variant Also Negotiates'[39m,
              [32m'507'[39m: [32m'Insufficient Storage'[39m,
              [32m'508'[39m: [32m'Loop Detected'[39m,
              [32m'509'[39m: [32m'Bandwidth Limit Exceeded'[39m,
              [32m'510'[39m: [32m'Not Extended'[39m,
              [32m'511'[39m: [32m'Network Authentication Required'[39m
            },
            Agent: [Function: Agent] { defaultMaxSockets: [33mInfinity[39m },
            ClientRequest: [36m[Function: ClientRequest][39m,
            IncomingMessage: [36m[Function: IncomingMessage][39m,
            OutgoingMessage: [36m[Function: OutgoingMessage][39m,
            Server: [36m[Function: Server][39m,
            ServerResponse: [36m[Function: ServerResponse][39m,
            createServer: [36m[Function: createServer][39m,
            validateHeaderName: [36m[Function: __node_internal_][39m,
            validateHeaderValue: [36m[Function: __node_internal_][39m,
            get: [36m[Function: get][39m,
            request: [36m[Function: request][39m,
            setMaxIdleHTTPParsers: [36m[Function: setMaxIdleHTTPParsers][39m,
            maxHeaderSize: [36m[Getter][39m,
            globalAgent: [36m[Getter/Setter][39m
          },
          [32m'https:'[39m: {
            Agent: [36m[Function: Agent][39m,
            globalAgent: Agent {
              _events: [Object: null prototype] {
                free: [36m[Function (anonymous)][39m,
                newListener: [36m[Function: maybeEnableKeylog][39m
              },
              _eventsCount: [33m2[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: [Object: null prototype] { path: [1mnull[22m },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              scheduling: [32m'lifo'[39m,
              maxTotalSockets: [33mInfinity[39m,
              totalSocketCount: [33m0[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] },
              [[32mSymbol(kCapture)[39m]: [33mfalse[39m
            },
            Server: [36m[Function: Server][39m,
            createServer: [36m[Function: createServer][39m,
            get: [36m[Function: get][39m,
            request: [36m[Function: request][39m
          }
        },
        pathname: [32m'/jsonrpc.js'[39m
      },
      _ended: [33mtrue[39m,
      _ending: [33mtrue[39m,
      _redirectCount: [33m0[39m,
      _redirects: [],
      _requestBodyLength: [33m125[39m,
      _requestBodyBuffers: [],
      _onNativeResponse: [36m[Function (anonymous)][39m,
      _currentRequest: [36m[Circular *1][39m,
      _currentUrl: [32m'http://192.168.1.16:9000/jsonrpc.js'[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m
    },
    [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
    [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
    [[32mSymbol(kEndCalled)[39m]: [33mtrue[39m,
    [[32mSymbol(kNeedDrain)[39m]: [33mfalse[39m,
    [[32mSymbol(corked)[39m]: [33m0[39m,
    [[32mSymbol(kOutHeaders)[39m]: [Object: null prototype] {
      accept: [ [32m'Accept'[39m, [32m'application/json, text/plain, */*'[39m ],
      [32m'content-type'[39m: [ [32m'Content-Type'[39m, [32m'application/json'[39m ],
      origin: [ [32m'Origin'[39m, [32m'http://192.168.1.16:9000'[39m ],
      referer: [ [32m'Referer'[39m, [32m'http://192.168.1.16:9000/'[39m ],
      cookie: [ [32m'Cookie'[39m, [32m'Squeezebox-player=b8:27:eb:e4:b0:6e'[39m ],
      [32m'user-agent'[39m: [ [32m'User-Agent'[39m, [32m'axios/1.7.7'[39m ],
      [32m'content-length'[39m: [ [32m'Content-Length'[39m, [32m'125'[39m ],
      [32m'accept-encoding'[39m: [ [32m'Accept-Encoding'[39m, [32m'gzip, compress, deflate, br'[39m ],
      host: [ [32m'Host'[39m, [32m'192.168.1.16:9000'[39m ]
    },
    [[32mSymbol(kUniqueHeaders)[39m]: [1mnull[22m
  },
  data: {
    result: {},
    method: [32m'slim.request'[39m,
    id: [33m0[39m,
    params: [
      [32m'b8:27:eb:e4:b0:6e'[39m,
      [ [32m'playlist'[39m, [32m'play'[39m, [32m'youtube://www.youtube.com/v/HxUAv3hdX_g'[39m ]
    ]
  }
}
Lecture lanc√©e : Comptine pour enfants - Trois Petits Moutons
{
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  headers: Object [AxiosHeaders] {
    server: [32m'Lyrion Music Server (9.0.0 - 1732822968)'[39m,
    connection: [32m'close'[39m,
    [32m'content-length'[39m: [32m'137'[39m,
    [32m'content-type'[39m: [32m'application/json'[39m,
    [32m'x-time-to-serve'[39m: [32m'0.0504839420318604'[39m
  },
  config: {
    transitional: {
      silentJSONParsing: [33mtrue[39m,
      forcedJSONParsing: [33mtrue[39m,
      clarifyTimeoutError: [33mfalse[39m
    },
    adapter: [ [32m'xhr'[39m, [32m'http'[39m, [32m'fetch'[39m ],
    transformRequest: [ [36m[Function: transformRequest][39m ],
    transformResponse: [ [36m[Function: transformResponse][39m ],
    timeout: [33m0[39m,
    xsrfCookieName: [32m'XSRF-TOKEN'[39m,
    xsrfHeaderName: [32m'X-XSRF-TOKEN'[39m,
    maxContentLength: [33m-1[39m,
    maxBodyLength: [33m-1[39m,
    env: {
      FormData: [Function: FormData] {
        LINE_BREAK: [32m'\r\n'[39m,
        DEFAULT_CONTENT_TYPE: [32m'application/octet-stream'[39m
      },
      Blob: [1mnull[22m
    },
    validateStatus: [36m[Function: validateStatus][39m,
    headers: Object [AxiosHeaders] {
      Accept: [32m'application/json, text/plain, */*'[39m,
      [32m'Content-Type'[39m: [32m'application/json'[39m,
      Origin: [32m'http://192.168.1.16:9000'[39m,
      Referer: [32m'http://192.168.1.16:9000/'[39m,
      Cookie: [32m'Squeezebox-player=b8:27:eb:e4:b0:6e'[39m,
      [32m'User-Agent'[39m: [32m'axios/1.7.7'[39m,
      [32m'Content-Length'[39m: [32m'125'[39m,
      [32m'Accept-Encoding'[39m: [32m'gzip, compress, deflate, br'[39m
    },
    method: [32m'post'[39m,
    url: [32m'http://192.168.1.16:9000/jsonrpc.js'[39m,
    data: [32m'{"id":0,"method":"slim.request","params":["b8:27:eb:e4:b0:6e",["playlist","play","youtube://www.youtube.com/v/E54yZuVf9AM"]]}'[39m
  },
  request: [36m<ref *1>[39m ClientRequest {
    _events: [Object: null prototype] {
      abort: [36m[Function (anonymous)][39m,
      aborted: [36m[Function (anonymous)][39m,
      connect: [36m[Function (anonymous)][39m,
      error: [36m[Function (anonymous)][39m,
      socket: [36m[Function (anonymous)][39m,
      timeout: [36m[Function (anonymous)][39m,
      finish: [36m[Function: requestOnFinish][39m
    },
    _eventsCount: [33m7[39m,
    _maxListeners: [90mundefined[39m,
    outputData: [],
    outputSize: [33m0[39m,
    writable: [33mtrue[39m,
    destroyed: [33mfalse[39m,
    _last: [33mtrue[39m,
    chunkedEncoding: [33mfalse[39m,
    shouldKeepAlive: [33mfalse[39m,
    maxRequestsOnConnectionReached: [33mfalse[39m,
    _defaultKeepAlive: [33mtrue[39m,
    useChunkedEncodingByDefault: [33mtrue[39m,
    sendDate: [33mfalse[39m,
    _removedConnection: [33mfalse[39m,
    _removedContLen: [33mfalse[39m,
    _removedTE: [33mfalse[39m,
    strictContentLength: [33mfalse[39m,
    _contentLength: [32m'125'[39m,
    _hasBody: [33mtrue[39m,
    _trailer: [32m''[39m,
    finished: [33mtrue[39m,
    _headerSent: [33mtrue[39m,
    _closed: [33mfalse[39m,
    socket: [36m<ref *2>[39m Socket {
      connecting: [33mfalse[39m,
      _hadError: [33mfalse[39m,
      _parent: [1mnull[22m,
      _host: [1mnull[22m,
      _closeAfterHandlingError: [33mfalse[39m,
      _readableState: ReadableState {
        objectMode: [33mfalse[39m,
        highWaterMark: [33m16384[39m,
        buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
        length: [33m0[39m,
        pipes: [],
        flowing: [33mtrue[39m,
        ended: [33mfalse[39m,
        endEmitted: [33mfalse[39m,
        reading: [33mtrue[39m,
        constructed: [33mtrue[39m,
        sync: [33mfalse[39m,
        needReadable: [33mtrue[39m,
        emittedReadable: [33mfalse[39m,
        readableListening: [33mfalse[39m,
        resumeScheduled: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        emitClose: [33mfalse[39m,
        autoDestroy: [33mtrue[39m,
        destroyed: [33mfalse[39m,
        errored: [1mnull[22m,
        closed: [33mfalse[39m,
        closeEmitted: [33mfalse[39m,
        defaultEncoding: [32m'utf8'[39m,
        awaitDrainWriters: [1mnull[22m,
        multiAwaitDrain: [33mfalse[39m,
        readingMore: [33mfalse[39m,
        dataEmitted: [33mtrue[39m,
        decoder: [1mnull[22m,
        encoding: [1mnull[22m,
        [[32mSymbol(kPaused)[39m]: [33mfalse[39m
      },
      _events: [Object: null prototype] {
        end: [36m[Function: onReadableStreamEnd][39m,
        free: [36m[Function: onFree][39m,
        close: [ [36m[Function: onClose][39m, [36m[Function: socketCloseListener][39m ],
        timeout: [36m[Function: onTimeout][39m,
        agentRemove: [36m[Function: onRemove][39m,
        error: [36m[Function: socketErrorListener][39m,
        finish: [Function: bound onceWrapper] { listener: [36m[Function: destroy][39m }
      },
      _eventsCount: [33m7[39m,
      _maxListeners: [90mundefined[39m,
      _writableState: WritableState {
        objectMode: [33mfalse[39m,
        highWaterMark: [33m16384[39m,
        finalCalled: [33mtrue[39m,
        needDrain: [33mfalse[39m,
        ending: [33mtrue[39m,
        ended: [33mtrue[39m,
        finished: [33mfalse[39m,
        destroyed: [33mfalse[39m,
        decodeStrings: [33mfalse[39m,
        defaultEncoding: [32m'utf8'[39m,
        length: [33m0[39m,
        writing: [33mfalse[39m,
        corked: [33m0[39m,
        sync: [33mfalse[39m,
        bufferProcessing: [33mfalse[39m,
        onwrite: [36m[Function: bound onwrite][39m,
        writecb: [1mnull[22m,
        writelen: [33m0[39m,
        afterWriteTickInfo: [1mnull[22m,
        buffered: [],
        bufferedIndex: [33m0[39m,
        allBuffers: [33mtrue[39m,
        allNoop: [33mtrue[39m,
        pendingcb: [33m1[39m,
        constructed: [33mtrue[39m,
        prefinished: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        emitClose: [33mfalse[39m,
        autoDestroy: [33mtrue[39m,
        errored: [1mnull[22m,
        closed: [33mfalse[39m,
        closeEmitted: [33mfalse[39m,
        [[32mSymbol(kOnFinished)[39m]: []
      },
      allowHalfOpen: [33mfalse[39m,
      _sockname: [1mnull[22m,
      _pendingData: [1mnull[22m,
      _pendingEncoding: [32m''[39m,
      server: [1mnull[22m,
      _server: [1mnull[22m,
      parser: [1mnull[22m,
      _httpMessage: [36m[Circular *1][39m,
      [[32mSymbol(async_id_symbol)[39m]: [33m160[39m,
      [[32mSymbol(kHandle)[39m]: TCP {
        reading: [33mtrue[39m,
        onconnection: [1mnull[22m,
        [[32mSymbol(owner_symbol)[39m]: [36m[Circular *2][39m
      },
      [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
      [[32mSymbol(timeout)[39m]: [1mnull[22m,
      [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
      [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
      [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
      [[32mSymbol(kSetNoDelay)[39m]: [33mfalse[39m,
      [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
      [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
      [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
      [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
      [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
    },
    _header: [32m'POST /jsonrpc.js HTTP/1.1\r\n'[39m +
      [32m'Accept: application/json, text/plain, */*\r\n'[39m +
      [32m'Content-Type: application/json\r\n'[39m +
      [32m'Origin: http://192.168.1.16:9000\r\n'[39m +
      [32m'Referer: http://192.168.1.16:9000/\r\n'[39m +
      [32m'Cookie: Squeezebox-player=b8:27:eb:e4:b0:6e\r\n'[39m +
      [32m'User-Agent: axios/1.7.7\r\n'[39m +
      [32m'Content-Length: 125\r\n'[39m +
      [32m'Accept-Encoding: gzip, compress, deflate, br\r\n'[39m +
      [32m'Host: 192.168.1.16:9000\r\n'[39m +
      [32m'Connection: close\r\n'[39m +
      [32m'\r\n'[39m,
    _keepAliveTimeout: [33m0[39m,
    _onPendingData: [36m[Function: nop][39m,
    agent: Agent {
      _events: [Object: null prototype] {
        free: [36m[Function (anonymous)][39m,
        newListener: [36m[Function: maybeEnableKeylog][39m
      },
      _eventsCount: [33m2[39m,
      _maxListeners: [90mundefined[39m,
      defaultPort: [33m80[39m,
      protocol: [32m'http:'[39m,
      options: [Object: null prototype] { path: [1mnull[22m },
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype] {
        [32m'192.168.1.16:9000:'[39m: [
          [36m<ref *2>[39m Socket {
            connecting: [33mfalse[39m,
            _hadError: [33mfalse[39m,
            _parent: [1mnull[22m,
            _host: [1mnull[22m,
            _closeAfterHandlingError: [33mfalse[39m,
            _readableState: ReadableState {
              objectMode: [33mfalse[39m,
              highWaterMark: [33m16384[39m,
              buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
              length: [33m0[39m,
              pipes: [],
              flowing: [33mtrue[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              constructed: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              resumeScheduled: [33mfalse[39m,
              errorEmitted: [33mfalse[39m,
              emitClose: [33mfalse[39m,
              autoDestroy: [33mtrue[39m,
              destroyed: [33mfalse[39m,
              errored: [1mnull[22m,
              closed: [33mfalse[39m,
              closeEmitted: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              awaitDrainWriters: [1mnull[22m,
              multiAwaitDrain: [33mfalse[39m,
              readingMore: [33mfalse[39m,
              dataEmitted: [33mtrue[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m,
              [[32mSymbol(kPaused)[39m]: [33mfalse[39m
            },
            _events: [Object: null prototype] {
              end: [36m[Function: onReadableStreamEnd][39m,
              free: [36m[Function: onFree][39m,
              close: [ [36m[Function: onClose][39m, [36m[Function: socketCloseListener][39m ],
              timeout: [36m[Function: onTimeout][39m,
              agentRemove: [36m[Function: onRemove][39m,
              error: [36m[Function: socketErrorListener][39m,
              finish: [Function: bound onceWrapper] {
                listener: [36m[Function: destroy][39m
              }
            },
            _eventsCount: [33m7[39m,
            _maxListeners: [90mundefined[39m,
            _writableState: WritableState {
              objectMode: [33mfalse[39m,
              highWaterMark: [33m16384[39m,
              finalCalled: [33mtrue[39m,
              needDrain: [33mfalse[39m,
              ending: [33mtrue[39m,
              ended: [33mtrue[39m,
              finished: [33mfalse[39m,
              destroyed: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              corked: [33m0[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function: bound onwrite][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              afterWriteTickInfo: [1mnull[22m,
              buffered: [],
              bufferedIndex: [33m0[39m,
              allBuffers: [33mtrue[39m,
              allNoop: [33mtrue[39m,
              pendingcb: [33m1[39m,
              constructed: [33mtrue[39m,
              prefinished: [33mfalse[39m,
              errorEmitted: [33mfalse[39m,
              emitClose: [33mfalse[39m,
              autoDestroy: [33mtrue[39m,
              errored: [1mnull[22m,
              closed: [33mfalse[39m,
              closeEmitted: [33mfalse[39m,
              [[32mSymbol(kOnFinished)[39m]: []
            },
            allowHalfOpen: [33mfalse[39m,
            _sockname: [1mnull[22m,
            _pendingData: [1mnull[22m,
            _pendingEncoding: [32m''[39m,
            server: [1mnull[22m,
            _server: [1mnull[22m,
            parser: [1mnull[22m,
            _httpMessage: [36m[Circular *1][39m,
            [[32mSymbol(async_id_symbol)[39m]: [33m160[39m,
            [[32mSymbol(kHandle)[39m]: TCP {
              reading: [33mtrue[39m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner_symbol)[39m]: [36m[Circular *2][39m
            },
            [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
            [[32mSymbol(timeout)[39m]: [1mnull[22m,
            [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
            [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
            [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
            [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
            [[32mSymbol(kSetNoDelay)[39m]: [33mfalse[39m,
            [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
            [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
            [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
            [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
            [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
          }
        ]
      },
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: [33m1000[39m,
      keepAlive: [33mfalse[39m,
      maxSockets: [33mInfinity[39m,
      maxFreeSockets: [33m256[39m,
      scheduling: [32m'lifo'[39m,
      maxTotalSockets: [33mInfinity[39m,
      totalSocketCount: [33m1[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m
    },
    socketPath: [90mundefined[39m,
    method: [32m'POST'[39m,
    maxHeaderSize: [90mundefined[39m,
    insecureHTTPParser: [90mundefined[39m,
    path: [32m'/jsonrpc.js'[39m,
    _ended: [33mtrue[39m,
    res: IncomingMessage {
      _readableState: ReadableState {
        objectMode: [33mfalse[39m,
        highWaterMark: [33m16384[39m,
        buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
        length: [33m0[39m,
        pipes: [],
        flowing: [33mtrue[39m,
        ended: [33mtrue[39m,
        endEmitted: [33mtrue[39m,
        reading: [33mfalse[39m,
        constructed: [33mtrue[39m,
        sync: [33mtrue[39m,
        needReadable: [33mfalse[39m,
        emittedReadable: [33mfalse[39m,
        readableListening: [33mfalse[39m,
        resumeScheduled: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        emitClose: [33mtrue[39m,
        autoDestroy: [33mtrue[39m,
        destroyed: [33mtrue[39m,
        errored: [1mnull[22m,
        closed: [33mtrue[39m,
        closeEmitted: [33mtrue[39m,
        defaultEncoding: [32m'utf8'[39m,
        awaitDrainWriters: [1mnull[22m,
        multiAwaitDrain: [33mfalse[39m,
        readingMore: [33mtrue[39m,
        dataEmitted: [33mtrue[39m,
        decoder: [1mnull[22m,
        encoding: [1mnull[22m,
        [[32mSymbol(kPaused)[39m]: [33mfalse[39m
      },
      _events: [Object: null prototype] {
        end: [ [36m[Function: responseOnEnd][39m, [36m[Function: handleStreamEnd][39m ],
        error: [36m[Function: handleStreamError][39m,
        data: [36m[Function: handleStreamData][39m,
        aborted: [36m[Function: handlerStreamAborted][39m
      },
      _eventsCount: [33m4[39m,
      _maxListeners: [90mundefined[39m,
      socket: [36m<ref *2>[39m Socket {
        connecting: [33mfalse[39m,
        _hadError: [33mfalse[39m,
        _parent: [1mnull[22m,
        _host: [1mnull[22m,
        _closeAfterHandlingError: [33mfalse[39m,
        _readableState: ReadableState {
          objectMode: [33mfalse[39m,
          highWaterMark: [33m16384[39m,
          buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
          length: [33m0[39m,
          pipes: [],
          flowing: [33mtrue[39m,
          ended: [33mfalse[39m,
          endEmitted: [33mfalse[39m,
          reading: [33mtrue[39m,
          constructed: [33mtrue[39m,
          sync: [33mfalse[39m,
          needReadable: [33mtrue[39m,
          emittedReadable: [33mfalse[39m,
          readableListening: [33mfalse[39m,
          resumeScheduled: [33mfalse[39m,
          errorEmitted: [33mfalse[39m,
          emitClose: [33mfalse[39m,
          autoDestroy: [33mtrue[39m,
          destroyed: [33mfalse[39m,
          errored: [1mnull[22m,
          closed: [33mfalse[39m,
          closeEmitted: [33mfalse[39m,
          defaultEncoding: [32m'utf8'[39m,
          awaitDrainWriters: [1mnull[22m,
          multiAwaitDrain: [33mfalse[39m,
          readingMore: [33mfalse[39m,
          dataEmitted: [33mtrue[39m,
          decoder: [1mnull[22m,
          encoding: [1mnull[22m,
          [[32mSymbol(kPaused)[39m]: [33mfalse[39m
        },
        _events: [Object: null prototype] {
          end: [36m[Function: onReadableStreamEnd][39m,
          free: [36m[Function: onFree][39m,
          close: [ [36m[Function: onClose][39m, [36m[Function: socketCloseListener][39m ],
          timeout: [36m[Function: onTimeout][39m,
          agentRemove: [36m[Function: onRemove][39m,
          error: [36m[Function: socketErrorListener][39m,
          finish: [Function: bound onceWrapper] {
            listener: [36m[Function: destroy][39m
          }
        },
        _eventsCount: [33m7[39m,
        _maxListeners: [90mundefined[39m,
        _writableState: WritableState {
          objectMode: [33mfalse[39m,
          highWaterMark: [33m16384[39m,
          finalCalled: [33mtrue[39m,
          needDrain: [33mfalse[39m,
          ending: [33mtrue[39m,
          ended: [33mtrue[39m,
          finished: [33mfalse[39m,
          destroyed: [33mfalse[39m,
          decodeStrings: [33mfalse[39m,
          defaultEncoding: [32m'utf8'[39m,
          length: [33m0[39m,
          writing: [33mfalse[39m,
          corked: [33m0[39m,
          sync: [33mfalse[39m,
          bufferProcessing: [33mfalse[39m,
          onwrite: [36m[Function: bound onwrite][39m,
          writecb: [1mnull[22m,
          writelen: [33m0[39m,
          afterWriteTickInfo: [1mnull[22m,
          buffered: [],
          bufferedIndex: [33m0[39m,
          allBuffers: [33mtrue[39m,
          allNoop: [33mtrue[39m,
          pendingcb: [33m1[39m,
          constructed: [33mtrue[39m,
          prefinished: [33mfalse[39m,
          errorEmitted: [33mfalse[39m,
          emitClose: [33mfalse[39m,
          autoDestroy: [33mtrue[39m,
          errored: [1mnull[22m,
          closed: [33mfalse[39m,
          closeEmitted: [33mfalse[39m,
          [[32mSymbol(kOnFinished)[39m]: []
        },
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [1mnull[22m,
        _server: [1mnull[22m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular *1][39m,
        [[32mSymbol(async_id_symbol)[39m]: [33m160[39m,
        [[32mSymbol(kHandle)[39m]: TCP {
          reading: [33mtrue[39m,
          onconnection: [1mnull[22m,
          [[32mSymbol(owner_symbol)[39m]: [36m[Circular *2][39m
        },
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetNoDelay)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
        [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
      },
      httpVersionMajor: [33m1[39m,
      httpVersionMinor: [33m1[39m,
      httpVersion: [32m'1.1'[39m,
      complete: [33mtrue[39m,
      rawHeaders: [
        [32m'Server'[39m,
        [32m'Lyrion Music Server (9.0.0 - 1732822968)'[39m,
        [32m'Connection'[39m,
        [32m'close'[39m,
        [32m'Content-Length'[39m,
        [32m'137'[39m,
        [32m'Content-Type'[39m,
        [32m'application/json'[39m,
        [32m'X-Time-To-Serve'[39m,
        [32m'0.0504839420318604'[39m
      ],
      rawTrailers: [],
      aborted: [33mfalse[39m,
      upgrade: [33mfalse[39m,
      url: [32m''[39m,
      method: [1mnull[22m,
      statusCode: [33m200[39m,
      statusMessage: [32m'OK'[39m,
      client: [36m<ref *2>[39m Socket {
        connecting: [33mfalse[39m,
        _hadError: [33mfalse[39m,
        _parent: [1mnull[22m,
        _host: [1mnull[22m,
        _closeAfterHandlingError: [33mfalse[39m,
        _readableState: ReadableState {
          objectMode: [33mfalse[39m,
          highWaterMark: [33m16384[39m,
          buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
          length: [33m0[39m,
          pipes: [],
          flowing: [33mtrue[39m,
          ended: [33mfalse[39m,
          endEmitted: [33mfalse[39m,
          reading: [33mtrue[39m,
          constructed: [33mtrue[39m,
          sync: [33mfalse[39m,
          needReadable: [33mtrue[39m,
          emittedReadable: [33mfalse[39m,
          readableListening: [33mfalse[39m,
          resumeScheduled: [33mfalse[39m,
          errorEmitted: [33mfalse[39m,
          emitClose: [33mfalse[39m,
          autoDestroy: [33mtrue[39m,
          destroyed: [33mfalse[39m,
          errored: [1mnull[22m,
          closed: [33mfalse[39m,
          closeEmitted: [33mfalse[39m,
          defaultEncoding: [32m'utf8'[39m,
          awaitDrainWriters: [1mnull[22m,
          multiAwaitDrain: [33mfalse[39m,
          readingMore: [33mfalse[39m,
          dataEmitted: [33mtrue[39m,
          decoder: [1mnull[22m,
          encoding: [1mnull[22m,
          [[32mSymbol(kPaused)[39m]: [33mfalse[39m
        },
        _events: [Object: null prototype] {
          end: [36m[Function: onReadableStreamEnd][39m,
          free: [36m[Function: onFree][39m,
          close: [ [36m[Function: onClose][39m, [36m[Function: socketCloseListener][39m ],
          timeout: [36m[Function: onTimeout][39m,
          agentRemove: [36m[Function: onRemove][39m,
          error: [36m[Function: socketErrorListener][39m,
          finish: [Function: bound onceWrapper] {
            listener: [36m[Function: destroy][39m
          }
        },
        _eventsCount: [33m7[39m,
        _maxListeners: [90mundefined[39m,
        _writableState: WritableState {
          objectMode: [33mfalse[39m,
          highWaterMark: [33m16384[39m,
          finalCalled: [33mtrue[39m,
          needDrain: [33mfalse[39m,
          ending: [33mtrue[39m,
          ended: [33mtrue[39m,
          finished: [33mfalse[39m,
          destroyed: [33mfalse[39m,
          decodeStrings: [33mfalse[39m,
          defaultEncoding: [32m'utf8'[39m,
          length: [33m0[39m,
          writing: [33mfalse[39m,
          corked: [33m0[39m,
          sync: [33mfalse[39m,
          bufferProcessing: [33mfalse[39m,
          onwrite: [36m[Function: bound onwrite][39m,
          writecb: [1mnull[22m,
          writelen: [33m0[39m,
          afterWriteTickInfo: [1mnull[22m,
          buffered: [],
          bufferedIndex: [33m0[39m,
          allBuffers: [33mtrue[39m,
          allNoop: [33mtrue[39m,
          pendingcb: [33m1[39m,
          constructed: [33mtrue[39m,
          prefinished: [33mfalse[39m,
          errorEmitted: [33mfalse[39m,
          emitClose: [33mfalse[39m,
          autoDestroy: [33mtrue[39m,
          errored: [1mnull[22m,
          closed: [33mfalse[39m,
          closeEmitted: [33mfalse[39m,
          [[32mSymbol(kOnFinished)[39m]: []
        },
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [1mnull[22m,
        _server: [1mnull[22m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular *1][39m,
        [[32mSymbol(async_id_symbol)[39m]: [33m160[39m,
        [[32mSymbol(kHandle)[39m]: TCP {
          reading: [33mtrue[39m,
          onconnection: [1mnull[22m,
          [[32mSymbol(owner_symbol)[39m]: [36m[Circular *2][39m
        },
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetNoDelay)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
        [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
      },
      _consuming: [33mfalse[39m,
      _dumped: [33mfalse[39m,
      req: [36m[Circular *1][39m,
      responseUrl: [32m'http://192.168.1.16:9000/jsonrpc.js'[39m,
      redirects: [],
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
      [[32mSymbol(kHeaders)[39m]: {
        server: [32m'Lyrion Music Server (9.0.0 - 1732822968)'[39m,
        connection: [32m'close'[39m,
        [32m'content-length'[39m: [32m'137'[39m,
        [32m'content-type'[39m: [32m'application/json'[39m,
        [32m'x-time-to-serve'[39m: [32m'0.0504839420318604'[39m
      },
      [[32mSymbol(kHeadersCount)[39m]: [33m10[39m,
      [[32mSymbol(kTrailers)[39m]: [1mnull[22m,
      [[32mSymbol(kTrailersCount)[39m]: [33m0[39m,
      [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
    },
    aborted: [33mfalse[39m,
    timeoutCb: [1mnull[22m,
    upgradeOrConnect: [33mfalse[39m,
    parser: [1mnull[22m,
    maxHeadersCount: [1mnull[22m,
    reusedSocket: [33mfalse[39m,
    host: [32m'192.168.1.16'[39m,
    protocol: [32m'http:'[39m,
    _redirectable: Writable {
      _writableState: WritableState {
        objectMode: [33mfalse[39m,
        highWaterMark: [33m16384[39m,
        finalCalled: [33mfalse[39m,
        needDrain: [33mfalse[39m,
        ending: [33mfalse[39m,
        ended: [33mfalse[39m,
        finished: [33mfalse[39m,
        destroyed: [33mfalse[39m,
        decodeStrings: [33mtrue[39m,
        defaultEncoding: [32m'utf8'[39m,
        length: [33m0[39m,
        writing: [33mfalse[39m,
        corked: [33m0[39m,
        sync: [33mtrue[39m,
        bufferProcessing: [33mfalse[39m,
        onwrite: [36m[Function: bound onwrite][39m,
        writecb: [1mnull[22m,
        writelen: [33m0[39m,
        afterWriteTickInfo: [1mnull[22m,
        buffered: [],
        bufferedIndex: [33m0[39m,
        allBuffers: [33mtrue[39m,
        allNoop: [33mtrue[39m,
        pendingcb: [33m0[39m,
        constructed: [33mtrue[39m,
        prefinished: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        emitClose: [33mtrue[39m,
        autoDestroy: [33mtrue[39m,
        errored: [1mnull[22m,
        closed: [33mfalse[39m,
        closeEmitted: [33mfalse[39m,
        [[32mSymbol(kOnFinished)[39m]: []
      },
      _events: [Object: null prototype] {
        response: [36m[Function: handleResponse][39m,
        error: [36m[Function: handleRequestError][39m,
        socket: [36m[Function: handleRequestSocket][39m
      },
      _eventsCount: [33m3[39m,
      _maxListeners: [90mundefined[39m,
      _options: {
        maxRedirects: [33m21[39m,
        maxBodyLength: [33mInfinity[39m,
        protocol: [32m'http:'[39m,
        path: [32m'/jsonrpc.js'[39m,
        method: [32m'POST'[39m,
        headers: [Object: null prototype] {
          Accept: [32m'application/json, text/plain, */*'[39m,
          [32m'Content-Type'[39m: [32m'application/json'[39m,
          Origin: [32m'http://192.168.1.16:9000'[39m,
          Referer: [32m'http://192.168.1.16:9000/'[39m,
          Cookie: [32m'Squeezebox-player=b8:27:eb:e4:b0:6e'[39m,
          [32m'User-Agent'[39m: [32m'axios/1.7.7'[39m,
          [32m'Content-Length'[39m: [32m'125'[39m,
          [32m'Accept-Encoding'[39m: [32m'gzip, compress, deflate, br'[39m
        },
        agents: { http: [90mundefined[39m, https: [90mundefined[39m },
        auth: [90mundefined[39m,
        family: [90mundefined[39m,
        beforeRedirect: [36m[Function: dispatchBeforeRedirect][39m,
        beforeRedirects: { proxy: [36m[Function: beforeRedirect][39m },
        hostname: [32m'192.168.1.16'[39m,
        port: [32m'9000'[39m,
        agent: [90mundefined[39m,
        nativeProtocols: {
          [32m'http:'[39m: {
            _connectionListener: [36m[Function: connectionListener][39m,
            METHODS: [
              [32m'ACL'[39m,         [32m'BIND'[39m,       [32m'CHECKOUT'[39m,
              [32m'CONNECT'[39m,     [32m'COPY'[39m,       [32m'DELETE'[39m,
              [32m'GET'[39m,         [32m'HEAD'[39m,       [32m'LINK'[39m,
              [32m'LOCK'[39m,        [32m'M-SEARCH'[39m,   [32m'MERGE'[39m,
              [32m'MKACTIVITY'[39m,  [32m'MKCALENDAR'[39m, [32m'MKCOL'[39m,
              [32m'MOVE'[39m,        [32m'NOTIFY'[39m,     [32m'OPTIONS'[39m,
              [32m'PATCH'[39m,       [32m'POST'[39m,       [32m'PROPFIND'[39m,
              [32m'PROPPATCH'[39m,   [32m'PURGE'[39m,      [32m'PUT'[39m,
              [32m'REBIND'[39m,      [32m'REPORT'[39m,     [32m'SEARCH'[39m,
              [32m'SOURCE'[39m,      [32m'SUBSCRIBE'[39m,  [32m'TRACE'[39m,
              [32m'UNBIND'[39m,      [32m'UNLINK'[39m,     [32m'UNLOCK'[39m,
              [32m'UNSUBSCRIBE'[39m
            ],
            STATUS_CODES: {
              [32m'100'[39m: [32m'Continue'[39m,
              [32m'101'[39m: [32m'Switching Protocols'[39m,
              [32m'102'[39m: [32m'Processing'[39m,
              [32m'103'[39m: [32m'Early Hints'[39m,
              [32m'200'[39m: [32m'OK'[39m,
              [32m'201'[39m: [32m'Created'[39m,
              [32m'202'[39m: [32m'Accepted'[39m,
              [32m'203'[39m: [32m'Non-Authoritative Information'[39m,
              [32m'204'[39m: [32m'No Content'[39m,
              [32m'205'[39m: [32m'Reset Content'[39m,
              [32m'206'[39m: [32m'Partial Content'[39m,
              [32m'207'[39m: [32m'Multi-Status'[39m,
              [32m'208'[39m: [32m'Already Reported'[39m,
              [32m'226'[39m: [32m'IM Used'[39m,
              [32m'300'[39m: [32m'Multiple Choices'[39m,
              [32m'301'[39m: [32m'Moved Permanently'[39m,
              [32m'302'[39m: [32m'Found'[39m,
              [32m'303'[39m: [32m'See Other'[39m,
              [32m'304'[39m: [32m'Not Modified'[39m,
              [32m'305'[39m: [32m'Use Proxy'[39m,
              [32m'307'[39m: [32m'Temporary Redirect'[39m,
              [32m'308'[39m: [32m'Permanent Redirect'[39m,
              [32m'400'[39m: [32m'Bad Request'[39m,
              [32m'401'[39m: [32m'Unauthorized'[39m,
              [32m'402'[39m: [32m'Payment Required'[39m,
              [32m'403'[39m: [32m'Forbidden'[39m,
              [32m'404'[39m: [32m'Not Found'[39m,
              [32m'405'[39m: [32m'Method Not Allowed'[39m,
              [32m'406'[39m: [32m'Not Acceptable'[39m,
              [32m'407'[39m: [32m'Proxy Authentication Required'[39m,
              [32m'408'[39m: [32m'Request Timeout'[39m,
              [32m'409'[39m: [32m'Conflict'[39m,
              [32m'410'[39m: [32m'Gone'[39m,
              [32m'411'[39m: [32m'Length Required'[39m,
              [32m'412'[39m: [32m'Precondition Failed'[39m,
              [32m'413'[39m: [32m'Payload Too Large'[39m,
              [32m'414'[39m: [32m'URI Too Long'[39m,
              [32m'415'[39m: [32m'Unsupported Media Type'[39m,
              [32m'416'[39m: [32m'Range Not Satisfiable'[39m,
              [32m'417'[39m: [32m'Expectation Failed'[39m,
              [32m'418'[39m: [32m"I'm a Teapot"[39m,
              [32m'421'[39m: [32m'Misdirected Request'[39m,
              [32m'422'[39m: [32m'Unprocessable Entity'[39m,
              [32m'423'[39m: [32m'Locked'[39m,
              [32m'424'[39m: [32m'Failed Dependency'[39m,
              [32m'425'[39m: [32m'Too Early'[39m,
              [32m'426'[39m: [32m'Upgrade Required'[39m,
              [32m'428'[39m: [32m'Precondition Required'[39m,
              [32m'429'[39m: [32m'Too Many Requests'[39m,
              [32m'431'[39m: [32m'Request Header Fields Too Large'[39m,
              [32m'451'[39m: [32m'Unavailable For Legal Reasons'[39m,
              [32m'500'[39m: [32m'Internal Server Error'[39m,
              [32m'501'[39m: [32m'Not Implemented'[39m,
              [32m'502'[39m: [32m'Bad Gateway'[39m,
              [32m'503'[39m: [32m'Service Unavailable'[39m,
              [32m'504'[39m: [32m'Gateway Timeout'[39m,
              [32m'505'[39m: [32m'HTTP Version Not Supported'[39m,
              [32m'506'[39m: [32m'Variant Also Negotiates'[39m,
              [32m'507'[39m: [32m'Insufficient Storage'[39m,
              [32m'508'[39m: [32m'Loop Detected'[39m,
              [32m'509'[39m: [32m'Bandwidth Limit Exceeded'[39m,
              [32m'510'[39m: [32m'Not Extended'[39m,
              [32m'511'[39m: [32m'Network Authentication Required'[39m
            },
            Agent: [Function: Agent] { defaultMaxSockets: [33mInfinity[39m },
            ClientRequest: [36m[Function: ClientRequest][39m,
            IncomingMessage: [36m[Function: IncomingMessage][39m,
            OutgoingMessage: [36m[Function: OutgoingMessage][39m,
            Server: [36m[Function: Server][39m,
            ServerResponse: [36m[Function: ServerResponse][39m,
            createServer: [36m[Function: createServer][39m,
            validateHeaderName: [36m[Function: __node_internal_][39m,
            validateHeaderValue: [36m[Function: __node_internal_][39m,
            get: [36m[Function: get][39m,
            request: [36m[Function: request][39m,
            setMaxIdleHTTPParsers: [36m[Function: setMaxIdleHTTPParsers][39m,
            maxHeaderSize: [36m[Getter][39m,
            globalAgent: [36m[Getter/Setter][39m
          },
          [32m'https:'[39m: {
            Agent: [36m[Function: Agent][39m,
            globalAgent: Agent {
              _events: [Object: null prototype] {
                free: [36m[Function (anonymous)][39m,
                newListener: [36m[Function: maybeEnableKeylog][39m
              },
              _eventsCount: [33m2[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: [Object: null prototype] { path: [1mnull[22m },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              scheduling: [32m'lifo'[39m,
              maxTotalSockets: [33mInfinity[39m,
              totalSocketCount: [33m0[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] },
              [[32mSymbol(kCapture)[39m]: [33mfalse[39m
            },
            Server: [36m[Function: Server][39m,
            createServer: [36m[Function: createServer][39m,
            get: [36m[Function: get][39m,
            request: [36m[Function: request][39m
          }
        },
        pathname: [32m'/jsonrpc.js'[39m
      },
      _ended: [33mtrue[39m,
      _ending: [33mtrue[39m,
      _redirectCount: [33m0[39m,
      _redirects: [],
      _requestBodyLength: [33m125[39m,
      _requestBodyBuffers: [],
      _onNativeResponse: [36m[Function (anonymous)][39m,
      _currentRequest: [36m[Circular *1][39m,
      _currentUrl: [32m'http://192.168.1.16:9000/jsonrpc.js'[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m
    },
    [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
    [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
    [[32mSymbol(kEndCalled)[39m]: [33mtrue[39m,
    [[32mSymbol(kNeedDrain)[39m]: [33mfalse[39m,
    [[32mSymbol(corked)[39m]: [33m0[39m,
    [[32mSymbol(kOutHeaders)[39m]: [Object: null prototype] {
      accept: [ [32m'Accept'[39m, [32m'application/json, text/plain, */*'[39m ],
      [32m'content-type'[39m: [ [32m'Content-Type'[39m, [32m'application/json'[39m ],
      origin: [ [32m'Origin'[39m, [32m'http://192.168.1.16:9000'[39m ],
      referer: [ [32m'Referer'[39m, [32m'http://192.168.1.16:9000/'[39m ],
      cookie: [ [32m'Cookie'[39m, [32m'Squeezebox-player=b8:27:eb:e4:b0:6e'[39m ],
      [32m'user-agent'[39m: [ [32m'User-Agent'[39m, [32m'axios/1.7.7'[39m ],
      [32m'content-length'[39m: [ [32m'Content-Length'[39m, [32m'125'[39m ],
      [32m'accept-encoding'[39m: [ [32m'Accept-Encoding'[39m, [32m'gzip, compress, deflate, br'[39m ],
      host: [ [32m'Host'[39m, [32m'192.168.1.16:9000'[39m ]
    },
    [[32mSymbol(kUniqueHeaders)[39m]: [1mnull[22m
  },
  data: {
    result: {},
    id: [33m0[39m,
    params: [
      [32m'b8:27:eb:e4:b0:6e'[39m,
      [ [32m'playlist'[39m, [32m'play'[39m, [32m'youtube://www.youtube.com/v/E54yZuVf9AM'[39m ]
    ],
    method: [32m'slim.request'[39m
  }
}
Lecture lanc√©e : Dans la foreÃÇt un Ouistiti le clip ! Mon imagier des comptines de la maternelle - Gallimard Jeunesse
{
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  headers: Object [AxiosHeaders] {
    server: [32m'Lyrion Music Server (9.0.0 - 1732822968)'[39m,
    connection: [32m'close'[39m,
    [32m'content-length'[39m: [32m'137'[39m,
    [32m'content-type'[39m: [32m'application/json'[39m,
    [32m'x-time-to-serve'[39m: [32m'0.0498390197753906'[39m
  },
  config: {
    transitional: {
      silentJSONParsing: [33mtrue[39m,
      forcedJSONParsing: [33mtrue[39m,
      clarifyTimeoutError: [33mfalse[39m
    },
    adapter: [ [32m'xhr'[39m, [32m'http'[39m, [32m'fetch'[39m ],
    transformRequest: [ [36m[Function: transformRequest][39m ],
    transformResponse: [ [36m[Function: transformResponse][39m ],
    timeout: [33m0[39m,
    xsrfCookieName: [32m'XSRF-TOKEN'[39m,
    xsrfHeaderName: [32m'X-XSRF-TOKEN'[39m,
    maxContentLength: [33m-1[39m,
    maxBodyLength: [33m-1[39m,
    env: {
      FormData: [Function: FormData] {
        LINE_BREAK: [32m'\r\n'[39m,
        DEFAULT_CONTENT_TYPE: [32m'application/octet-stream'[39m
      },
      Blob: [1mnull[22m
    },
    validateStatus: [36m[Function: validateStatus][39m,
    headers: Object [AxiosHeaders] {
      Accept: [32m'application/json, text/plain, */*'[39m,
      [32m'Content-Type'[39m: [32m'application/json'[39m,
      Origin: [32m'http://192.168.1.16:9000'[39m,
      Referer: [32m'http://192.168.1.16:9000/'[39m,
      Cookie: [32m'Squeezebox-player=b8:27:eb:e4:b0:6e'[39m,
      [32m'User-Agent'[39m: [32m'axios/1.7.7'[39m,
      [32m'Content-Length'[39m: [32m'125'[39m,
      [32m'Accept-Encoding'[39m: [32m'gzip, compress, deflate, br'[39m
    },
    method: [32m'post'[39m,
    url: [32m'http://192.168.1.16:9000/jsonrpc.js'[39m,
    data: [32m'{"id":0,"method":"slim.request","params":["b8:27:eb:e4:b0:6e",["playlist","play","youtube://www.youtube.com/v/HxUAv3hdX_g"]]}'[39m
  },
  request: [36m<ref *1>[39m ClientRequest {
    _events: [Object: null prototype] {
      abort: [36m[Function (anonymous)][39m,
      aborted: [36m[Function (anonymous)][39m,
      connect: [36m[Function (anonymous)][39m,
      error: [36m[Function (anonymous)][39m,
      socket: [36m[Function (anonymous)][39m,
      timeout: [36m[Function (anonymous)][39m,
      finish: [36m[Function: requestOnFinish][39m
    },
    _eventsCount: [33m7[39m,
    _maxListeners: [90mundefined[39m,
    outputData: [],
    outputSize: [33m0[39m,
    writable: [33mtrue[39m,
    destroyed: [33mfalse[39m,
    _last: [33mtrue[39m,
    chunkedEncoding: [33mfalse[39m,
    shouldKeepAlive: [33mfalse[39m,
    maxRequestsOnConnectionReached: [33mfalse[39m,
    _defaultKeepAlive: [33mtrue[39m,
    useChunkedEncodingByDefault: [33mtrue[39m,
    sendDate: [33mfalse[39m,
    _removedConnection: [33mfalse[39m,
    _removedContLen: [33mfalse[39m,
    _removedTE: [33mfalse[39m,
    strictContentLength: [33mfalse[39m,
    _contentLength: [32m'125'[39m,
    _hasBody: [33mtrue[39m,
    _trailer: [32m''[39m,
    finished: [33mtrue[39m,
    _headerSent: [33mtrue[39m,
    _closed: [33mfalse[39m,
    socket: [36m<ref *2>[39m Socket {
      connecting: [33mfalse[39m,
      _hadError: [33mfalse[39m,
      _parent: [1mnull[22m,
      _host: [1mnull[22m,
      _closeAfterHandlingError: [33mfalse[39m,
      _readableState: ReadableState {
        objectMode: [33mfalse[39m,
        highWaterMark: [33m16384[39m,
        buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
        length: [33m0[39m,
        pipes: [],
        flowing: [33mtrue[39m,
        ended: [33mfalse[39m,
        endEmitted: [33mfalse[39m,
        reading: [33mtrue[39m,
        constructed: [33mtrue[39m,
        sync: [33mfalse[39m,
        needReadable: [33mtrue[39m,
        emittedReadable: [33mfalse[39m,
        readableListening: [33mfalse[39m,
        resumeScheduled: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        emitClose: [33mfalse[39m,
        autoDestroy: [33mtrue[39m,
        destroyed: [33mfalse[39m,
        errored: [1mnull[22m,
        closed: [33mfalse[39m,
        closeEmitted: [33mfalse[39m,
        defaultEncoding: [32m'utf8'[39m,
        awaitDrainWriters: [1mnull[22m,
        multiAwaitDrain: [33mfalse[39m,
        readingMore: [33mfalse[39m,
        dataEmitted: [33mtrue[39m,
        decoder: [1mnull[22m,
        encoding: [1mnull[22m,
        [[32mSymbol(kPaused)[39m]: [33mfalse[39m
      },
      _events: [Object: null prototype] {
        end: [36m[Function: onReadableStreamEnd][39m,
        free: [36m[Function: onFree][39m,
        close: [ [36m[Function: onClose][39m, [36m[Function: socketCloseListener][39m ],
        timeout: [36m[Function: onTimeout][39m,
        agentRemove: [36m[Function: onRemove][39m,
        error: [36m[Function: socketErrorListener][39m,
        finish: [Function: bound onceWrapper] { listener: [36m[Function: destroy][39m }
      },
      _eventsCount: [33m7[39m,
      _maxListeners: [90mundefined[39m,
      _writableState: WritableState {
        objectMode: [33mfalse[39m,
        highWaterMark: [33m16384[39m,
        finalCalled: [33mtrue[39m,
        needDrain: [33mfalse[39m,
        ending: [33mtrue[39m,
        ended: [33mtrue[39m,
        finished: [33mfalse[39m,
        destroyed: [33mfalse[39m,
        decodeStrings: [33mfalse[39m,
        defaultEncoding: [32m'utf8'[39m,
        length: [33m0[39m,
        writing: [33mfalse[39m,
        corked: [33m0[39m,
        sync: [33mfalse[39m,
        bufferProcessing: [33mfalse[39m,
        onwrite: [36m[Function: bound onwrite][39m,
        writecb: [1mnull[22m,
        writelen: [33m0[39m,
        afterWriteTickInfo: [1mnull[22m,
        buffered: [],
        bufferedIndex: [33m0[39m,
        allBuffers: [33mtrue[39m,
        allNoop: [33mtrue[39m,
        pendingcb: [33m1[39m,
        constructed: [33mtrue[39m,
        prefinished: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        emitClose: [33mfalse[39m,
        autoDestroy: [33mtrue[39m,
        errored: [1mnull[22m,
        closed: [33mfalse[39m,
        closeEmitted: [33mfalse[39m,
        [[32mSymbol(kOnFinished)[39m]: []
      },
      allowHalfOpen: [33mfalse[39m,
      _sockname: [1mnull[22m,
      _pendingData: [1mnull[22m,
      _pendingEncoding: [32m''[39m,
      server: [1mnull[22m,
      _server: [1mnull[22m,
      parser: [1mnull[22m,
      _httpMessage: [36m[Circular *1][39m,
      [[32mSymbol(async_id_symbol)[39m]: [33m227[39m,
      [[32mSymbol(kHandle)[39m]: TCP {
        reading: [33mtrue[39m,
        onconnection: [1mnull[22m,
        [[32mSymbol(owner_symbol)[39m]: [36m[Circular *2][39m
      },
      [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
      [[32mSymbol(timeout)[39m]: [1mnull[22m,
      [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
      [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
      [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
      [[32mSymbol(kSetNoDelay)[39m]: [33mfalse[39m,
      [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
      [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
      [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
      [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
      [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
    },
    _header: [32m'POST /jsonrpc.js HTTP/1.1\r\n'[39m +
      [32m'Accept: application/json, text/plain, */*\r\n'[39m +
      [32m'Content-Type: application/json\r\n'[39m +
      [32m'Origin: http://192.168.1.16:9000\r\n'[39m +
      [32m'Referer: http://192.168.1.16:9000/\r\n'[39m +
      [32m'Cookie: Squeezebox-player=b8:27:eb:e4:b0:6e\r\n'[39m +
      [32m'User-Agent: axios/1.7.7\r\n'[39m +
      [32m'Content-Length: 125\r\n'[39m +
      [32m'Accept-Encoding: gzip, compress, deflate, br\r\n'[39m +
      [32m'Host: 192.168.1.16:9000\r\n'[39m +
      [32m'Connection: close\r\n'[39m +
      [32m'\r\n'[39m,
    _keepAliveTimeout: [33m0[39m,
    _onPendingData: [36m[Function: nop][39m,
    agent: Agent {
      _events: [Object: null prototype] {
        free: [36m[Function (anonymous)][39m,
        newListener: [36m[Function: maybeEnableKeylog][39m
      },
      _eventsCount: [33m2[39m,
      _maxListeners: [90mundefined[39m,
      defaultPort: [33m80[39m,
      protocol: [32m'http:'[39m,
      options: [Object: null prototype] { path: [1mnull[22m },
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype] {
        [32m'192.168.1.16:9000:'[39m: [
          [36m<ref *2>[39m Socket {
            connecting: [33mfalse[39m,
            _hadError: [33mfalse[39m,
            _parent: [1mnull[22m,
            _host: [1mnull[22m,
            _closeAfterHandlingError: [33mfalse[39m,
            _readableState: ReadableState {
              objectMode: [33mfalse[39m,
              highWaterMark: [33m16384[39m,
              buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
              length: [33m0[39m,
              pipes: [],
              flowing: [33mtrue[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              constructed: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              resumeScheduled: [33mfalse[39m,
              errorEmitted: [33mfalse[39m,
              emitClose: [33mfalse[39m,
              autoDestroy: [33mtrue[39m,
              destroyed: [33mfalse[39m,
              errored: [1mnull[22m,
              closed: [33mfalse[39m,
              closeEmitted: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              awaitDrainWriters: [1mnull[22m,
              multiAwaitDrain: [33mfalse[39m,
              readingMore: [33mfalse[39m,
              dataEmitted: [33mtrue[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m,
              [[32mSymbol(kPaused)[39m]: [33mfalse[39m
            },
            _events: [Object: null prototype] {
              end: [36m[Function: onReadableStreamEnd][39m,
              free: [36m[Function: onFree][39m,
              close: [ [36m[Function: onClose][39m, [36m[Function: socketCloseListener][39m ],
              timeout: [36m[Function: onTimeout][39m,
              agentRemove: [36m[Function: onRemove][39m,
              error: [36m[Function: socketErrorListener][39m,
              finish: [Function: bound onceWrapper] {
                listener: [36m[Function: destroy][39m
              }
            },
            _eventsCount: [33m7[39m,
            _maxListeners: [90mundefined[39m,
            _writableState: WritableState {
              objectMode: [33mfalse[39m,
              highWaterMark: [33m16384[39m,
              finalCalled: [33mtrue[39m,
              needDrain: [33mfalse[39m,
              ending: [33mtrue[39m,
              ended: [33mtrue[39m,
              finished: [33mfalse[39m,
              destroyed: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              corked: [33m0[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function: bound onwrite][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              afterWriteTickInfo: [1mnull[22m,
              buffered: [],
              bufferedIndex: [33m0[39m,
              allBuffers: [33mtrue[39m,
              allNoop: [33mtrue[39m,
              pendingcb: [33m1[39m,
              constructed: [33mtrue[39m,
              prefinished: [33mfalse[39m,
              errorEmitted: [33mfalse[39m,
              emitClose: [33mfalse[39m,
              autoDestroy: [33mtrue[39m,
              errored: [1mnull[22m,
              closed: [33mfalse[39m,
              closeEmitted: [33mfalse[39m,
              [[32mSymbol(kOnFinished)[39m]: []
            },
            allowHalfOpen: [33mfalse[39m,
            _sockname: [1mnull[22m,
            _pendingData: [1mnull[22m,
            _pendingEncoding: [32m''[39m,
            server: [1mnull[22m,
            _server: [1mnull[22m,
            parser: [1mnull[22m,
            _httpMessage: [36m[Circular *1][39m,
            [[32mSymbol(async_id_symbol)[39m]: [33m227[39m,
            [[32mSymbol(kHandle)[39m]: TCP {
              reading: [33mtrue[39m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner_symbol)[39m]: [36m[Circular *2][39m
            },
            [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
            [[32mSymbol(timeout)[39m]: [1mnull[22m,
            [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
            [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
            [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
            [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
            [[32mSymbol(kSetNoDelay)[39m]: [33mfalse[39m,
            [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
            [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
            [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
            [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
            [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
          }
        ]
      },
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: [33m1000[39m,
      keepAlive: [33mfalse[39m,
      maxSockets: [33mInfinity[39m,
      maxFreeSockets: [33m256[39m,
      scheduling: [32m'lifo'[39m,
      maxTotalSockets: [33mInfinity[39m,
      totalSocketCount: [33m1[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m
    },
    socketPath: [90mundefined[39m,
    method: [32m'POST'[39m,
    maxHeaderSize: [90mundefined[39m,
    insecureHTTPParser: [90mundefined[39m,
    path: [32m'/jsonrpc.js'[39m,
    _ended: [33mtrue[39m,
    res: IncomingMessage {
      _readableState: ReadableState {
        objectMode: [33mfalse[39m,
        highWaterMark: [33m16384[39m,
        buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
        length: [33m0[39m,
        pipes: [],
        flowing: [33mtrue[39m,
        ended: [33mtrue[39m,
        endEmitted: [33mtrue[39m,
        reading: [33mfalse[39m,
        constructed: [33mtrue[39m,
        sync: [33mtrue[39m,
        needReadable: [33mfalse[39m,
        emittedReadable: [33mfalse[39m,
        readableListening: [33mfalse[39m,
        resumeScheduled: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        emitClose: [33mtrue[39m,
        autoDestroy: [33mtrue[39m,
        destroyed: [33mtrue[39m,
        errored: [1mnull[22m,
        closed: [33mtrue[39m,
        closeEmitted: [33mtrue[39m,
        defaultEncoding: [32m'utf8'[39m,
        awaitDrainWriters: [1mnull[22m,
        multiAwaitDrain: [33mfalse[39m,
        readingMore: [33mtrue[39m,
        dataEmitted: [33mtrue[39m,
        decoder: [1mnull[22m,
        encoding: [1mnull[22m,
        [[32mSymbol(kPaused)[39m]: [33mfalse[39m
      },
      _events: [Object: null prototype] {
        end: [ [36m[Function: responseOnEnd][39m, [36m[Function: handleStreamEnd][39m ],
        error: [36m[Function: handleStreamError][39m,
        data: [36m[Function: handleStreamData][39m,
        aborted: [36m[Function: handlerStreamAborted][39m
      },
      _eventsCount: [33m4[39m,
      _maxListeners: [90mundefined[39m,
      socket: [36m<ref *2>[39m Socket {
        connecting: [33mfalse[39m,
        _hadError: [33mfalse[39m,
        _parent: [1mnull[22m,
        _host: [1mnull[22m,
        _closeAfterHandlingError: [33mfalse[39m,
        _readableState: ReadableState {
          objectMode: [33mfalse[39m,
          highWaterMark: [33m16384[39m,
          buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
          length: [33m0[39m,
          pipes: [],
          flowing: [33mtrue[39m,
          ended: [33mfalse[39m,
          endEmitted: [33mfalse[39m,
          reading: [33mtrue[39m,
          constructed: [33mtrue[39m,
          sync: [33mfalse[39m,
          needReadable: [33mtrue[39m,
          emittedReadable: [33mfalse[39m,
          readableListening: [33mfalse[39m,
          resumeScheduled: [33mfalse[39m,
          errorEmitted: [33mfalse[39m,
          emitClose: [33mfalse[39m,
          autoDestroy: [33mtrue[39m,
          destroyed: [33mfalse[39m,
          errored: [1mnull[22m,
          closed: [33mfalse[39m,
          closeEmitted: [33mfalse[39m,
          defaultEncoding: [32m'utf8'[39m,
          awaitDrainWriters: [1mnull[22m,
          multiAwaitDrain: [33mfalse[39m,
          readingMore: [33mfalse[39m,
          dataEmitted: [33mtrue[39m,
          decoder: [1mnull[22m,
          encoding: [1mnull[22m,
          [[32mSymbol(kPaused)[39m]: [33mfalse[39m
        },
        _events: [Object: null prototype] {
          end: [36m[Function: onReadableStreamEnd][39m,
          free: [36m[Function: onFree][39m,
          close: [ [36m[Function: onClose][39m, [36m[Function: socketCloseListener][39m ],
          timeout: [36m[Function: onTimeout][39m,
          agentRemove: [36m[Function: onRemove][39m,
          error: [36m[Function: socketErrorListener][39m,
          finish: [Function: bound onceWrapper] {
            listener: [36m[Function: destroy][39m
          }
        },
        _eventsCount: [33m7[39m,
        _maxListeners: [90mundefined[39m,
        _writableState: WritableState {
          objectMode: [33mfalse[39m,
          highWaterMark: [33m16384[39m,
          finalCalled: [33mtrue[39m,
          needDrain: [33mfalse[39m,
          ending: [33mtrue[39m,
          ended: [33mtrue[39m,
          finished: [33mfalse[39m,
          destroyed: [33mfalse[39m,
          decodeStrings: [33mfalse[39m,
          defaultEncoding: [32m'utf8'[39m,
          length: [33m0[39m,
          writing: [33mfalse[39m,
          corked: [33m0[39m,
          sync: [33mfalse[39m,
          bufferProcessing: [33mfalse[39m,
          onwrite: [36m[Function: bound onwrite][39m,
          writecb: [1mnull[22m,
          writelen: [33m0[39m,
          afterWriteTickInfo: [1mnull[22m,
          buffered: [],
          bufferedIndex: [33m0[39m,
          allBuffers: [33mtrue[39m,
          allNoop: [33mtrue[39m,
          pendingcb: [33m1[39m,
          constructed: [33mtrue[39m,
          prefinished: [33mfalse[39m,
          errorEmitted: [33mfalse[39m,
          emitClose: [33mfalse[39m,
          autoDestroy: [33mtrue[39m,
          errored: [1mnull[22m,
          closed: [33mfalse[39m,
          closeEmitted: [33mfalse[39m,
          [[32mSymbol(kOnFinished)[39m]: []
        },
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [1mnull[22m,
        _server: [1mnull[22m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular *1][39m,
        [[32mSymbol(async_id_symbol)[39m]: [33m227[39m,
        [[32mSymbol(kHandle)[39m]: TCP {
          reading: [33mtrue[39m,
          onconnection: [1mnull[22m,
          [[32mSymbol(owner_symbol)[39m]: [36m[Circular *2][39m
        },
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetNoDelay)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
        [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
      },
      httpVersionMajor: [33m1[39m,
      httpVersionMinor: [33m1[39m,
      httpVersion: [32m'1.1'[39m,
      complete: [33mtrue[39m,
      rawHeaders: [
        [32m'Server'[39m,
        [32m'Lyrion Music Server (9.0.0 - 1732822968)'[39m,
        [32m'Connection'[39m,
        [32m'close'[39m,
        [32m'Content-Length'[39m,
        [32m'137'[39m,
        [32m'Content-Type'[39m,
        [32m'application/json'[39m,
        [32m'X-Time-To-Serve'[39m,
        [32m'0.0498390197753906'[39m
      ],
      rawTrailers: [],
      aborted: [33mfalse[39m,
      upgrade: [33mfalse[39m,
      url: [32m''[39m,
      method: [1mnull[22m,
      statusCode: [33m200[39m,
      statusMessage: [32m'OK'[39m,
      client: [36m<ref *2>[39m Socket {
        connecting: [33mfalse[39m,
        _hadError: [33mfalse[39m,
        _parent: [1mnull[22m,
        _host: [1mnull[22m,
        _closeAfterHandlingError: [33mfalse[39m,
        _readableState: ReadableState {
          objectMode: [33mfalse[39m,
          highWaterMark: [33m16384[39m,
          buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
          length: [33m0[39m,
          pipes: [],
          flowing: [33mtrue[39m,
          ended: [33mfalse[39m,
          endEmitted: [33mfalse[39m,
          reading: [33mtrue[39m,
          constructed: [33mtrue[39m,
          sync: [33mfalse[39m,
          needReadable: [33mtrue[39m,
          emittedReadable: [33mfalse[39m,
          readableListening: [33mfalse[39m,
          resumeScheduled: [33mfalse[39m,
          errorEmitted: [33mfalse[39m,
          emitClose: [33mfalse[39m,
          autoDestroy: [33mtrue[39m,
          destroyed: [33mfalse[39m,
          errored: [1mnull[22m,
          closed: [33mfalse[39m,
          closeEmitted: [33mfalse[39m,
          defaultEncoding: [32m'utf8'[39m,
          awaitDrainWriters: [1mnull[22m,
          multiAwaitDrain: [33mfalse[39m,
          readingMore: [33mfalse[39m,
          dataEmitted: [33mtrue[39m,
          decoder: [1mnull[22m,
          encoding: [1mnull[22m,
          [[32mSymbol(kPaused)[39m]: [33mfalse[39m
        },
        _events: [Object: null prototype] {
          end: [36m[Function: onReadableStreamEnd][39m,
          free: [36m[Function: onFree][39m,
          close: [ [36m[Function: onClose][39m, [36m[Function: socketCloseListener][39m ],
          timeout: [36m[Function: onTimeout][39m,
          agentRemove: [36m[Function: onRemove][39m,
          error: [36m[Function: socketErrorListener][39m,
          finish: [Function: bound onceWrapper] {
            listener: [36m[Function: destroy][39m
          }
        },
        _eventsCount: [33m7[39m,
        _maxListeners: [90mundefined[39m,
        _writableState: WritableState {
          objectMode: [33mfalse[39m,
          highWaterMark: [33m16384[39m,
          finalCalled: [33mtrue[39m,
          needDrain: [33mfalse[39m,
          ending: [33mtrue[39m,
          ended: [33mtrue[39m,
          finished: [33mfalse[39m,
          destroyed: [33mfalse[39m,
          decodeStrings: [33mfalse[39m,
          defaultEncoding: [32m'utf8'[39m,
          length: [33m0[39m,
          writing: [33mfalse[39m,
          corked: [33m0[39m,
          sync: [33mfalse[39m,
          bufferProcessing: [33mfalse[39m,
          onwrite: [36m[Function: bound onwrite][39m,
          writecb: [1mnull[22m,
          writelen: [33m0[39m,
          afterWriteTickInfo: [1mnull[22m,
          buffered: [],
          bufferedIndex: [33m0[39m,
          allBuffers: [33mtrue[39m,
          allNoop: [33mtrue[39m,
          pendingcb: [33m1[39m,
          constructed: [33mtrue[39m,
          prefinished: [33mfalse[39m,
          errorEmitted: [33mfalse[39m,
          emitClose: [33mfalse[39m,
          autoDestroy: [33mtrue[39m,
          errored: [1mnull[22m,
          closed: [33mfalse[39m,
          closeEmitted: [33mfalse[39m,
          [[32mSymbol(kOnFinished)[39m]: []
        },
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [1mnull[22m,
        _server: [1mnull[22m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular *1][39m,
        [[32mSymbol(async_id_symbol)[39m]: [33m227[39m,
        [[32mSymbol(kHandle)[39m]: TCP {
          reading: [33mtrue[39m,
          onconnection: [1mnull[22m,
          [[32mSymbol(owner_symbol)[39m]: [36m[Circular *2][39m
        },
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetNoDelay)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
        [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
      },
      _consuming: [33mfalse[39m,
      _dumped: [33mfalse[39m,
      req: [36m[Circular *1][39m,
      responseUrl: [32m'http://192.168.1.16:9000/jsonrpc.js'[39m,
      redirects: [],
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
      [[32mSymbol(kHeaders)[39m]: {
        server: [32m'Lyrion Music Server (9.0.0 - 1732822968)'[39m,
        connection: [32m'close'[39m,
        [32m'content-length'[39m: [32m'137'[39m,
        [32m'content-type'[39m: [32m'application/json'[39m,
        [32m'x-time-to-serve'[39m: [32m'0.0498390197753906'[39m
      },
      [[32mSymbol(kHeadersCount)[39m]: [33m10[39m,
      [[32mSymbol(kTrailers)[39m]: [1mnull[22m,
      [[32mSymbol(kTrailersCount)[39m]: [33m0[39m,
      [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
    },
    aborted: [33mfalse[39m,
    timeoutCb: [1mnull[22m,
    upgradeOrConnect: [33mfalse[39m,
    parser: [1mnull[22m,
    maxHeadersCount: [1mnull[22m,
    reusedSocket: [33mfalse[39m,
    host: [32m'192.168.1.16'[39m,
    protocol: [32m'http:'[39m,
    _redirectable: Writable {
      _writableState: WritableState {
        objectMode: [33mfalse[39m,
        highWaterMark: [33m16384[39m,
        finalCalled: [33mfalse[39m,
        needDrain: [33mfalse[39m,
        ending: [33mfalse[39m,
        ended: [33mfalse[39m,
        finished: [33mfalse[39m,
        destroyed: [33mfalse[39m,
        decodeStrings: [33mtrue[39m,
        defaultEncoding: [32m'utf8'[39m,
        length: [33m0[39m,
        writing: [33mfalse[39m,
        corked: [33m0[39m,
        sync: [33mtrue[39m,
        bufferProcessing: [33mfalse[39m,
        onwrite: [36m[Function: bound onwrite][39m,
        writecb: [1mnull[22m,
        writelen: [33m0[39m,
        afterWriteTickInfo: [1mnull[22m,
        buffered: [],
        bufferedIndex: [33m0[39m,
        allBuffers: [33mtrue[39m,
        allNoop: [33mtrue[39m,
        pendingcb: [33m0[39m,
        constructed: [33mtrue[39m,
        prefinished: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        emitClose: [33mtrue[39m,
        autoDestroy: [33mtrue[39m,
        errored: [1mnull[22m,
        closed: [33mfalse[39m,
        closeEmitted: [33mfalse[39m,
        [[32mSymbol(kOnFinished)[39m]: []
      },
      _events: [Object: null prototype] {
        response: [36m[Function: handleResponse][39m,
        error: [36m[Function: handleRequestError][39m,
        socket: [36m[Function: handleRequestSocket][39m
      },
      _eventsCount: [33m3[39m,
      _maxListeners: [90mundefined[39m,
      _options: {
        maxRedirects: [33m21[39m,
        maxBodyLength: [33mInfinity[39m,
        protocol: [32m'http:'[39m,
        path: [32m'/jsonrpc.js'[39m,
        method: [32m'POST'[39m,
        headers: [Object: null prototype] {
          Accept: [32m'application/json, text/plain, */*'[39m,
          [32m'Content-Type'[39m: [32m'application/json'[39m,
          Origin: [32m'http://192.168.1.16:9000'[39m,
          Referer: [32m'http://192.168.1.16:9000/'[39m,
          Cookie: [32m'Squeezebox-player=b8:27:eb:e4:b0:6e'[39m,
          [32m'User-Agent'[39m: [32m'axios/1.7.7'[39m,
          [32m'Content-Length'[39m: [32m'125'[39m,
          [32m'Accept-Encoding'[39m: [32m'gzip, compress, deflate, br'[39m
        },
        agents: { http: [90mundefined[39m, https: [90mundefined[39m },
        auth: [90mundefined[39m,
        family: [90mundefined[39m,
        beforeRedirect: [36m[Function: dispatchBeforeRedirect][39m,
        beforeRedirects: { proxy: [36m[Function: beforeRedirect][39m },
        hostname: [32m'192.168.1.16'[39m,
        port: [32m'9000'[39m,
        agent: [90mundefined[39m,
        nativeProtocols: {
          [32m'http:'[39m: {
            _connectionListener: [36m[Function: connectionListener][39m,
            METHODS: [
              [32m'ACL'[39m,         [32m'BIND'[39m,       [32m'CHECKOUT'[39m,
              [32m'CONNECT'[39m,     [32m'COPY'[39m,       [32m'DELETE'[39m,
              [32m'GET'[39m,         [32m'HEAD'[39m,       [32m'LINK'[39m,
              [32m'LOCK'[39m,        [32m'M-SEARCH'[39m,   [32m'MERGE'[39m,
              [32m'MKACTIVITY'[39m,  [32m'MKCALENDAR'[39m, [32m'MKCOL'[39m,
              [32m'MOVE'[39m,        [32m'NOTIFY'[39m,     [32m'OPTIONS'[39m,
              [32m'PATCH'[39m,       [32m'POST'[39m,       [32m'PROPFIND'[39m,
              [32m'PROPPATCH'[39m,   [32m'PURGE'[39m,      [32m'PUT'[39m,
              [32m'REBIND'[39m,      [32m'REPORT'[39m,     [32m'SEARCH'[39m,
              [32m'SOURCE'[39m,      [32m'SUBSCRIBE'[39m,  [32m'TRACE'[39m,
              [32m'UNBIND'[39m,      [32m'UNLINK'[39m,     [32m'UNLOCK'[39m,
              [32m'UNSUBSCRIBE'[39m
            ],
            STATUS_CODES: {
              [32m'100'[39m: [32m'Continue'[39m,
              [32m'101'[39m: [32m'Switching Protocols'[39m,
              [32m'102'[39m: [32m'Processing'[39m,
              [32m'103'[39m: [32m'Early Hints'[39m,
              [32m'200'[39m: [32m'OK'[39m,
              [32m'201'[39m: [32m'Created'[39m,
              [32m'202'[39m: [32m'Accepted'[39m,
              [32m'203'[39m: [32m'Non-Authoritative Information'[39m,
              [32m'204'[39m: [32m'No Content'[39m,
              [32m'205'[39m: [32m'Reset Content'[39m,
              [32m'206'[39m: [32m'Partial Content'[39m,
              [32m'207'[39m: [32m'Multi-Status'[39m,
              [32m'208'[39m: [32m'Already Reported'[39m,
              [32m'226'[39m: [32m'IM Used'[39m,
              [32m'300'[39m: [32m'Multiple Choices'[39m,
              [32m'301'[39m: [32m'Moved Permanently'[39m,
              [32m'302'[39m: [32m'Found'[39m,
              [32m'303'[39m: [32m'See Other'[39m,
              [32m'304'[39m: [32m'Not Modified'[39m,
              [32m'305'[39m: [32m'Use Proxy'[39m,
              [32m'307'[39m: [32m'Temporary Redirect'[39m,
              [32m'308'[39m: [32m'Permanent Redirect'[39m,
              [32m'400'[39m: [32m'Bad Request'[39m,
              [32m'401'[39m: [32m'Unauthorized'[39m,
              [32m'402'[39m: [32m'Payment Required'[39m,
              [32m'403'[39m: [32m'Forbidden'[39m,
              [32m'404'[39m: [32m'Not Found'[39m,
              [32m'405'[39m: [32m'Method Not Allowed'[39m,
              [32m'406'[39m: [32m'Not Acceptable'[39m,
              [32m'407'[39m: [32m'Proxy Authentication Required'[39m,
              [32m'408'[39m: [32m'Request Timeout'[39m,
              [32m'409'[39m: [32m'Conflict'[39m,
              [32m'410'[39m: [32m'Gone'[39m,
              [32m'411'[39m: [32m'Length Required'[39m,
              [32m'412'[39m: [32m'Precondition Failed'[39m,
              [32m'413'[39m: [32m'Payload Too Large'[39m,
              [32m'414'[39m: [32m'URI Too Long'[39m,
              [32m'415'[39m: [32m'Unsupported Media Type'[39m,
              [32m'416'[39m: [32m'Range Not Satisfiable'[39m,
              [32m'417'[39m: [32m'Expectation Failed'[39m,
              [32m'418'[39m: [32m"I'm a Teapot"[39m,
              [32m'421'[39m: [32m'Misdirected Request'[39m,
              [32m'422'[39m: [32m'Unprocessable Entity'[39m,
              [32m'423'[39m: [32m'Locked'[39m,
              [32m'424'[39m: [32m'Failed Dependency'[39m,
              [32m'425'[39m: [32m'Too Early'[39m,
              [32m'426'[39m: [32m'Upgrade Required'[39m,
              [32m'428'[39m: [32m'Precondition Required'[39m,
              [32m'429'[39m: [32m'Too Many Requests'[39m,
              [32m'431'[39m: [32m'Request Header Fields Too Large'[39m,
              [32m'451'[39m: [32m'Unavailable For Legal Reasons'[39m,
              [32m'500'[39m: [32m'Internal Server Error'[39m,
              [32m'501'[39m: [32m'Not Implemented'[39m,
              [32m'502'[39m: [32m'Bad Gateway'[39m,
              [32m'503'[39m: [32m'Service Unavailable'[39m,
              [32m'504'[39m: [32m'Gateway Timeout'[39m,
              [32m'505'[39m: [32m'HTTP Version Not Supported'[39m,
              [32m'506'[39m: [32m'Variant Also Negotiates'[39m,
              [32m'507'[39m: [32m'Insufficient Storage'[39m,
              [32m'508'[39m: [32m'Loop Detected'[39m,
              [32m'509'[39m: [32m'Bandwidth Limit Exceeded'[39m,
              [32m'510'[39m: [32m'Not Extended'[39m,
              [32m'511'[39m: [32m'Network Authentication Required'[39m
            },
            Agent: [Function: Agent] { defaultMaxSockets: [33mInfinity[39m },
            ClientRequest: [36m[Function: ClientRequest][39m,
            IncomingMessage: [36m[Function: IncomingMessage][39m,
            OutgoingMessage: [36m[Function: OutgoingMessage][39m,
            Server: [36m[Function: Server][39m,
            ServerResponse: [36m[Function: ServerResponse][39m,
            createServer: [36m[Function: createServer][39m,
            validateHeaderName: [36m[Function: __node_internal_][39m,
            validateHeaderValue: [36m[Function: __node_internal_][39m,
            get: [36m[Function: get][39m,
            request: [36m[Function: request][39m,
            setMaxIdleHTTPParsers: [36m[Function: setMaxIdleHTTPParsers][39m,
            maxHeaderSize: [36m[Getter][39m,
            globalAgent: [36m[Getter/Setter][39m
          },
          [32m'https:'[39m: {
            Agent: [36m[Function: Agent][39m,
            globalAgent: Agent {
              _events: [Object: null prototype] {
                free: [36m[Function (anonymous)][39m,
                newListener: [36m[Function: maybeEnableKeylog][39m
              },
              _eventsCount: [33m2[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: [Object: null prototype] { path: [1mnull[22m },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              scheduling: [32m'lifo'[39m,
              maxTotalSockets: [33mInfinity[39m,
              totalSocketCount: [33m0[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] },
              [[32mSymbol(kCapture)[39m]: [33mfalse[39m
            },
            Server: [36m[Function: Server][39m,
            createServer: [36m[Function: createServer][39m,
            get: [36m[Function: get][39m,
            request: [36m[Function: request][39m
          }
        },
        pathname: [32m'/jsonrpc.js'[39m
      },
      _ended: [33mtrue[39m,
      _ending: [33mtrue[39m,
      _redirectCount: [33m0[39m,
      _redirects: [],
      _requestBodyLength: [33m125[39m,
      _requestBodyBuffers: [],
      _onNativeResponse: [36m[Function (anonymous)][39m,
      _currentRequest: [36m[Circular *1][39m,
      _currentUrl: [32m'http://192.168.1.16:9000/jsonrpc.js'[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m
    },
    [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
    [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
    [[32mSymbol(kEndCalled)[39m]: [33mtrue[39m,
    [[32mSymbol(kNeedDrain)[39m]: [33mfalse[39m,
    [[32mSymbol(corked)[39m]: [33m0[39m,
    [[32mSymbol(kOutHeaders)[39m]: [Object: null prototype] {
      accept: [ [32m'Accept'[39m, [32m'application/json, text/plain, */*'[39m ],
      [32m'content-type'[39m: [ [32m'Content-Type'[39m, [32m'application/json'[39m ],
      origin: [ [32m'Origin'[39m, [32m'http://192.168.1.16:9000'[39m ],
      referer: [ [32m'Referer'[39m, [32m'http://192.168.1.16:9000/'[39m ],
      cookie: [ [32m'Cookie'[39m, [32m'Squeezebox-player=b8:27:eb:e4:b0:6e'[39m ],
      [32m'user-agent'[39m: [ [32m'User-Agent'[39m, [32m'axios/1.7.7'[39m ],
      [32m'content-length'[39m: [ [32m'Content-Length'[39m, [32m'125'[39m ],
      [32m'accept-encoding'[39m: [ [32m'Accept-Encoding'[39m, [32m'gzip, compress, deflate, br'[39m ],
      host: [ [32m'Host'[39m, [32m'192.168.1.16:9000'[39m ]
    },
    [[32mSymbol(kUniqueHeaders)[39m]: [1mnull[22m
  },
  data: {
    result: {},
    method: [32m'slim.request'[39m,
    params: [
      [32m'b8:27:eb:e4:b0:6e'[39m,
      [ [32m'playlist'[39m, [32m'play'[39m, [32m'youtube://www.youtube.com/v/HxUAv3hdX_g'[39m ]
    ],
    id: [33m0[39m
  }
}
Lecture lanc√©e : Comptine pour enfants - Trois Petits Moutons
{
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  headers: Object [AxiosHeaders] {
    server: [32m'Lyrion Music Server (9.0.0 - 1732822968)'[39m,
    connection: [32m'close'[39m,
    [32m'content-length'[39m: [32m'137'[39m,
    [32m'content-type'[39m: [32m'application/json'[39m,
    [32m'x-time-to-serve'[39m: [32m'0.0495181083679199'[39m
  },
  config: {
    transitional: {
      silentJSONParsing: [33mtrue[39m,
      forcedJSONParsing: [33mtrue[39m,
      clarifyTimeoutError: [33mfalse[39m
    },
    adapter: [ [32m'xhr'[39m, [32m'http'[39m, [32m'fetch'[39m ],
    transformRequest: [ [36m[Function: transformRequest][39m ],
    transformResponse: [ [36m[Function: transformResponse][39m ],
    timeout: [33m0[39m,
    xsrfCookieName: [32m'XSRF-TOKEN'[39m,
    xsrfHeaderName: [32m'X-XSRF-TOKEN'[39m,
    maxContentLength: [33m-1[39m,
    maxBodyLength: [33m-1[39m,
    env: {
      FormData: [Function: FormData] {
        LINE_BREAK: [32m'\r\n'[39m,
        DEFAULT_CONTENT_TYPE: [32m'application/octet-stream'[39m
      },
      Blob: [1mnull[22m
    },
    validateStatus: [36m[Function: validateStatus][39m,
    headers: Object [AxiosHeaders] {
      Accept: [32m'application/json, text/plain, */*'[39m,
      [32m'Content-Type'[39m: [32m'application/json'[39m,
      Origin: [32m'http://192.168.1.16:9000'[39m,
      Referer: [32m'http://192.168.1.16:9000/'[39m,
      Cookie: [32m'Squeezebox-player=b8:27:eb:e4:b0:6e'[39m,
      [32m'User-Agent'[39m: [32m'axios/1.7.7'[39m,
      [32m'Content-Length'[39m: [32m'125'[39m,
      [32m'Accept-Encoding'[39m: [32m'gzip, compress, deflate, br'[39m
    },
    method: [32m'post'[39m,
    url: [32m'http://192.168.1.16:9000/jsonrpc.js'[39m,
    data: [32m'{"id":0,"method":"slim.request","params":["b8:27:eb:e4:b0:6e",["playlist","play","youtube://www.youtube.com/v/E54yZuVf9AM"]]}'[39m
  },
  request: [36m<ref *1>[39m ClientRequest {
    _events: [Object: null prototype] {
      abort: [36m[Function (anonymous)][39m,
      aborted: [36m[Function (anonymous)][39m,
      connect: [36m[Function (anonymous)][39m,
      error: [36m[Function (anonymous)][39m,
      socket: [36m[Function (anonymous)][39m,
      timeout: [36m[Function (anonymous)][39m,
      finish: [36m[Function: requestOnFinish][39m
    },
    _eventsCount: [33m7[39m,
    _maxListeners: [90mundefined[39m,
    outputData: [],
    outputSize: [33m0[39m,
    writable: [33mtrue[39m,
    destroyed: [33mfalse[39m,
    _last: [33mtrue[39m,
    chunkedEncoding: [33mfalse[39m,
    shouldKeepAlive: [33mfalse[39m,
    maxRequestsOnConnectionReached: [33mfalse[39m,
    _defaultKeepAlive: [33mtrue[39m,
    useChunkedEncodingByDefault: [33mtrue[39m,
    sendDate: [33mfalse[39m,
    _removedConnection: [33mfalse[39m,
    _removedContLen: [33mfalse[39m,
    _removedTE: [33mfalse[39m,
    strictContentLength: [33mfalse[39m,
    _contentLength: [32m'125'[39m,
    _hasBody: [33mtrue[39m,
    _trailer: [32m''[39m,
    finished: [33mtrue[39m,
    _headerSent: [33mtrue[39m,
    _closed: [33mfalse[39m,
    socket: [36m<ref *2>[39m Socket {
      connecting: [33mfalse[39m,
      _hadError: [33mfalse[39m,
      _parent: [1mnull[22m,
      _host: [1mnull[22m,
      _closeAfterHandlingError: [33mfalse[39m,
      _readableState: ReadableState {
        objectMode: [33mfalse[39m,
        highWaterMark: [33m16384[39m,
        buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
        length: [33m0[39m,
        pipes: [],
        flowing: [33mtrue[39m,
        ended: [33mfalse[39m,
        endEmitted: [33mfalse[39m,
        reading: [33mtrue[39m,
        constructed: [33mtrue[39m,
        sync: [33mfalse[39m,
        needReadable: [33mtrue[39m,
        emittedReadable: [33mfalse[39m,
        readableListening: [33mfalse[39m,
        resumeScheduled: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        emitClose: [33mfalse[39m,
        autoDestroy: [33mtrue[39m,
        destroyed: [33mfalse[39m,
        errored: [1mnull[22m,
        closed: [33mfalse[39m,
        closeEmitted: [33mfalse[39m,
        defaultEncoding: [32m'utf8'[39m,
        awaitDrainWriters: [1mnull[22m,
        multiAwaitDrain: [33mfalse[39m,
        readingMore: [33mfalse[39m,
        dataEmitted: [33mtrue[39m,
        decoder: [1mnull[22m,
        encoding: [1mnull[22m,
        [[32mSymbol(kPaused)[39m]: [33mfalse[39m
      },
      _events: [Object: null prototype] {
        end: [36m[Function: onReadableStreamEnd][39m,
        free: [36m[Function: onFree][39m,
        close: [ [36m[Function: onClose][39m, [36m[Function: socketCloseListener][39m ],
        timeout: [36m[Function: onTimeout][39m,
        agentRemove: [36m[Function: onRemove][39m,
        error: [36m[Function: socketErrorListener][39m,
        finish: [Function: bound onceWrapper] { listener: [36m[Function: destroy][39m }
      },
      _eventsCount: [33m7[39m,
      _maxListeners: [90mundefined[39m,
      _writableState: WritableState {
        objectMode: [33mfalse[39m,
        highWaterMark: [33m16384[39m,
        finalCalled: [33mtrue[39m,
        needDrain: [33mfalse[39m,
        ending: [33mtrue[39m,
        ended: [33mtrue[39m,
        finished: [33mfalse[39m,
        destroyed: [33mfalse[39m,
        decodeStrings: [33mfalse[39m,
        defaultEncoding: [32m'utf8'[39m,
        length: [33m0[39m,
        writing: [33mfalse[39m,
        corked: [33m0[39m,
        sync: [33mfalse[39m,
        bufferProcessing: [33mfalse[39m,
        onwrite: [36m[Function: bound onwrite][39m,
        writecb: [1mnull[22m,
        writelen: [33m0[39m,
        afterWriteTickInfo: [1mnull[22m,
        buffered: [],
        bufferedIndex: [33m0[39m,
        allBuffers: [33mtrue[39m,
        allNoop: [33mtrue[39m,
        pendingcb: [33m1[39m,
        constructed: [33mtrue[39m,
        prefinished: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        emitClose: [33mfalse[39m,
        autoDestroy: [33mtrue[39m,
        errored: [1mnull[22m,
        closed: [33mfalse[39m,
        closeEmitted: [33mfalse[39m,
        [[32mSymbol(kOnFinished)[39m]: []
      },
      allowHalfOpen: [33mfalse[39m,
      _sockname: [1mnull[22m,
      _pendingData: [1mnull[22m,
      _pendingEncoding: [32m''[39m,
      server: [1mnull[22m,
      _server: [1mnull[22m,
      parser: [1mnull[22m,
      _httpMessage: [36m[Circular *1][39m,
      [[32mSymbol(async_id_symbol)[39m]: [33m271[39m,
      [[32mSymbol(kHandle)[39m]: TCP {
        reading: [33mtrue[39m,
        onconnection: [1mnull[22m,
        [[32mSymbol(owner_symbol)[39m]: [36m[Circular *2][39m
      },
      [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
      [[32mSymbol(timeout)[39m]: [1mnull[22m,
      [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
      [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
      [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
      [[32mSymbol(kSetNoDelay)[39m]: [33mfalse[39m,
      [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
      [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
      [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
      [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
      [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
    },
    _header: [32m'POST /jsonrpc.js HTTP/1.1\r\n'[39m +
      [32m'Accept: application/json, text/plain, */*\r\n'[39m +
      [32m'Content-Type: application/json\r\n'[39m +
      [32m'Origin: http://192.168.1.16:9000\r\n'[39m +
      [32m'Referer: http://192.168.1.16:9000/\r\n'[39m +
      [32m'Cookie: Squeezebox-player=b8:27:eb:e4:b0:6e\r\n'[39m +
      [32m'User-Agent: axios/1.7.7\r\n'[39m +
      [32m'Content-Length: 125\r\n'[39m +
      [32m'Accept-Encoding: gzip, compress, deflate, br\r\n'[39m +
      [32m'Host: 192.168.1.16:9000\r\n'[39m +
      [32m'Connection: close\r\n'[39m +
      [32m'\r\n'[39m,
    _keepAliveTimeout: [33m0[39m,
    _onPendingData: [36m[Function: nop][39m,
    agent: Agent {
      _events: [Object: null prototype] {
        free: [36m[Function (anonymous)][39m,
        newListener: [36m[Function: maybeEnableKeylog][39m
      },
      _eventsCount: [33m2[39m,
      _maxListeners: [90mundefined[39m,
      defaultPort: [33m80[39m,
      protocol: [32m'http:'[39m,
      options: [Object: null prototype] { path: [1mnull[22m },
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype] {
        [32m'192.168.1.16:9000:'[39m: [
          [36m<ref *2>[39m Socket {
            connecting: [33mfalse[39m,
            _hadError: [33mfalse[39m,
            _parent: [1mnull[22m,
            _host: [1mnull[22m,
            _closeAfterHandlingError: [33mfalse[39m,
            _readableState: ReadableState {
              objectMode: [33mfalse[39m,
              highWaterMark: [33m16384[39m,
              buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
              length: [33m0[39m,
              pipes: [],
              flowing: [33mtrue[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              constructed: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              resumeScheduled: [33mfalse[39m,
              errorEmitted: [33mfalse[39m,
              emitClose: [33mfalse[39m,
              autoDestroy: [33mtrue[39m,
              destroyed: [33mfalse[39m,
              errored: [1mnull[22m,
              closed: [33mfalse[39m,
              closeEmitted: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              awaitDrainWriters: [1mnull[22m,
              multiAwaitDrain: [33mfalse[39m,
              readingMore: [33mfalse[39m,
              dataEmitted: [33mtrue[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m,
              [[32mSymbol(kPaused)[39m]: [33mfalse[39m
            },
            _events: [Object: null prototype] {
              end: [36m[Function: onReadableStreamEnd][39m,
              free: [36m[Function: onFree][39m,
              close: [ [36m[Function: onClose][39m, [36m[Function: socketCloseListener][39m ],
              timeout: [36m[Function: onTimeout][39m,
              agentRemove: [36m[Function: onRemove][39m,
              error: [36m[Function: socketErrorListener][39m,
              finish: [Function: bound onceWrapper] {
                listener: [36m[Function: destroy][39m
              }
            },
            _eventsCount: [33m7[39m,
            _maxListeners: [90mundefined[39m,
            _writableState: WritableState {
              objectMode: [33mfalse[39m,
              highWaterMark: [33m16384[39m,
              finalCalled: [33mtrue[39m,
              needDrain: [33mfalse[39m,
              ending: [33mtrue[39m,
              ended: [33mtrue[39m,
              finished: [33mfalse[39m,
              destroyed: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              corked: [33m0[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function: bound onwrite][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              afterWriteTickInfo: [1mnull[22m,
              buffered: [],
              bufferedIndex: [33m0[39m,
              allBuffers: [33mtrue[39m,
              allNoop: [33mtrue[39m,
              pendingcb: [33m1[39m,
              constructed: [33mtrue[39m,
              prefinished: [33mfalse[39m,
              errorEmitted: [33mfalse[39m,
              emitClose: [33mfalse[39m,
              autoDestroy: [33mtrue[39m,
              errored: [1mnull[22m,
              closed: [33mfalse[39m,
              closeEmitted: [33mfalse[39m,
              [[32mSymbol(kOnFinished)[39m]: []
            },
            allowHalfOpen: [33mfalse[39m,
            _sockname: [1mnull[22m,
            _pendingData: [1mnull[22m,
            _pendingEncoding: [32m''[39m,
            server: [1mnull[22m,
            _server: [1mnull[22m,
            parser: [1mnull[22m,
            _httpMessage: [36m[Circular *1][39m,
            [[32mSymbol(async_id_symbol)[39m]: [33m271[39m,
            [[32mSymbol(kHandle)[39m]: TCP {
              reading: [33mtrue[39m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner_symbol)[39m]: [36m[Circular *2][39m
            },
            [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
            [[32mSymbol(timeout)[39m]: [1mnull[22m,
            [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
            [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
            [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
            [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
            [[32mSymbol(kSetNoDelay)[39m]: [33mfalse[39m,
            [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
            [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
            [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
            [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
            [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
          }
        ]
      },
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: [33m1000[39m,
      keepAlive: [33mfalse[39m,
      maxSockets: [33mInfinity[39m,
      maxFreeSockets: [33m256[39m,
      scheduling: [32m'lifo'[39m,
      maxTotalSockets: [33mInfinity[39m,
      totalSocketCount: [33m1[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m
    },
    socketPath: [90mundefined[39m,
    method: [32m'POST'[39m,
    maxHeaderSize: [90mundefined[39m,
    insecureHTTPParser: [90mundefined[39m,
    path: [32m'/jsonrpc.js'[39m,
    _ended: [33mtrue[39m,
    res: IncomingMessage {
      _readableState: ReadableState {
        objectMode: [33mfalse[39m,
        highWaterMark: [33m16384[39m,
        buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
        length: [33m0[39m,
        pipes: [],
        flowing: [33mtrue[39m,
        ended: [33mtrue[39m,
        endEmitted: [33mtrue[39m,
        reading: [33mfalse[39m,
        constructed: [33mtrue[39m,
        sync: [33mtrue[39m,
        needReadable: [33mfalse[39m,
        emittedReadable: [33mfalse[39m,
        readableListening: [33mfalse[39m,
        resumeScheduled: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        emitClose: [33mtrue[39m,
        autoDestroy: [33mtrue[39m,
        destroyed: [33mtrue[39m,
        errored: [1mnull[22m,
        closed: [33mtrue[39m,
        closeEmitted: [33mtrue[39m,
        defaultEncoding: [32m'utf8'[39m,
        awaitDrainWriters: [1mnull[22m,
        multiAwaitDrain: [33mfalse[39m,
        readingMore: [33mtrue[39m,
        dataEmitted: [33mtrue[39m,
        decoder: [1mnull[22m,
        encoding: [1mnull[22m,
        [[32mSymbol(kPaused)[39m]: [33mfalse[39m
      },
      _events: [Object: null prototype] {
        end: [ [36m[Function: responseOnEnd][39m, [36m[Function: handleStreamEnd][39m ],
        error: [36m[Function: handleStreamError][39m,
        data: [36m[Function: handleStreamData][39m,
        aborted: [36m[Function: handlerStreamAborted][39m
      },
      _eventsCount: [33m4[39m,
      _maxListeners: [90mundefined[39m,
      socket: [36m<ref *2>[39m Socket {
        connecting: [33mfalse[39m,
        _hadError: [33mfalse[39m,
        _parent: [1mnull[22m,
        _host: [1mnull[22m,
        _closeAfterHandlingError: [33mfalse[39m,
        _readableState: ReadableState {
          objectMode: [33mfalse[39m,
          highWaterMark: [33m16384[39m,
          buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
          length: [33m0[39m,
          pipes: [],
          flowing: [33mtrue[39m,
          ended: [33mfalse[39m,
          endEmitted: [33mfalse[39m,
          reading: [33mtrue[39m,
          constructed: [33mtrue[39m,
          sync: [33mfalse[39m,
          needReadable: [33mtrue[39m,
          emittedReadable: [33mfalse[39m,
          readableListening: [33mfalse[39m,
          resumeScheduled: [33mfalse[39m,
          errorEmitted: [33mfalse[39m,
          emitClose: [33mfalse[39m,
          autoDestroy: [33mtrue[39m,
          destroyed: [33mfalse[39m,
          errored: [1mnull[22m,
          closed: [33mfalse[39m,
          closeEmitted: [33mfalse[39m,
          defaultEncoding: [32m'utf8'[39m,
          awaitDrainWriters: [1mnull[22m,
          multiAwaitDrain: [33mfalse[39m,
          readingMore: [33mfalse[39m,
          dataEmitted: [33mtrue[39m,
          decoder: [1mnull[22m,
          encoding: [1mnull[22m,
          [[32mSymbol(kPaused)[39m]: [33mfalse[39m
        },
        _events: [Object: null prototype] {
          end: [36m[Function: onReadableStreamEnd][39m,
          free: [36m[Function: onFree][39m,
          close: [ [36m[Function: onClose][39m, [36m[Function: socketCloseListener][39m ],
          timeout: [36m[Function: onTimeout][39m,
          agentRemove: [36m[Function: onRemove][39m,
          error: [36m[Function: socketErrorListener][39m,
          finish: [Function: bound onceWrapper] {
            listener: [36m[Function: destroy][39m
          }
        },
        _eventsCount: [33m7[39m,
        _maxListeners: [90mundefined[39m,
        _writableState: WritableState {
          objectMode: [33mfalse[39m,
          highWaterMark: [33m16384[39m,
          finalCalled: [33mtrue[39m,
          needDrain: [33mfalse[39m,
          ending: [33mtrue[39m,
          ended: [33mtrue[39m,
          finished: [33mfalse[39m,
          destroyed: [33mfalse[39m,
          decodeStrings: [33mfalse[39m,
          defaultEncoding: [32m'utf8'[39m,
          length: [33m0[39m,
          writing: [33mfalse[39m,
          corked: [33m0[39m,
          sync: [33mfalse[39m,
          bufferProcessing: [33mfalse[39m,
          onwrite: [36m[Function: bound onwrite][39m,
          writecb: [1mnull[22m,
          writelen: [33m0[39m,
          afterWriteTickInfo: [1mnull[22m,
          buffered: [],
          bufferedIndex: [33m0[39m,
          allBuffers: [33mtrue[39m,
          allNoop: [33mtrue[39m,
          pendingcb: [33m1[39m,
          constructed: [33mtrue[39m,
          prefinished: [33mfalse[39m,
          errorEmitted: [33mfalse[39m,
          emitClose: [33mfalse[39m,
          autoDestroy: [33mtrue[39m,
          errored: [1mnull[22m,
          closed: [33mfalse[39m,
          closeEmitted: [33mfalse[39m,
          [[32mSymbol(kOnFinished)[39m]: []
        },
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [1mnull[22m,
        _server: [1mnull[22m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular *1][39m,
        [[32mSymbol(async_id_symbol)[39m]: [33m271[39m,
        [[32mSymbol(kHandle)[39m]: TCP {
          reading: [33mtrue[39m,
          onconnection: [1mnull[22m,
          [[32mSymbol(owner_symbol)[39m]: [36m[Circular *2][39m
        },
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetNoDelay)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
        [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
      },
      httpVersionMajor: [33m1[39m,
      httpVersionMinor: [33m1[39m,
      httpVersion: [32m'1.1'[39m,
      complete: [33mtrue[39m,
      rawHeaders: [
        [32m'Server'[39m,
        [32m'Lyrion Music Server (9.0.0 - 1732822968)'[39m,
        [32m'Connection'[39m,
        [32m'close'[39m,
        [32m'Content-Length'[39m,
        [32m'137'[39m,
        [32m'Content-Type'[39m,
        [32m'application/json'[39m,
        [32m'X-Time-To-Serve'[39m,
        [32m'0.0495181083679199'[39m
      ],
      rawTrailers: [],
      aborted: [33mfalse[39m,
      upgrade: [33mfalse[39m,
      url: [32m''[39m,
      method: [1mnull[22m,
      statusCode: [33m200[39m,
      statusMessage: [32m'OK'[39m,
      client: [36m<ref *2>[39m Socket {
        connecting: [33mfalse[39m,
        _hadError: [33mfalse[39m,
        _parent: [1mnull[22m,
        _host: [1mnull[22m,
        _closeAfterHandlingError: [33mfalse[39m,
        _readableState: ReadableState {
          objectMode: [33mfalse[39m,
          highWaterMark: [33m16384[39m,
          buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
          length: [33m0[39m,
          pipes: [],
          flowing: [33mtrue[39m,
          ended: [33mfalse[39m,
          endEmitted: [33mfalse[39m,
          reading: [33mtrue[39m,
          constructed: [33mtrue[39m,
          sync: [33mfalse[39m,
          needReadable: [33mtrue[39m,
          emittedReadable: [33mfalse[39m,
          readableListening: [33mfalse[39m,
          resumeScheduled: [33mfalse[39m,
          errorEmitted: [33mfalse[39m,
          emitClose: [33mfalse[39m,
          autoDestroy: [33mtrue[39m,
          destroyed: [33mfalse[39m,
          errored: [1mnull[22m,
          closed: [33mfalse[39m,
          closeEmitted: [33mfalse[39m,
          defaultEncoding: [32m'utf8'[39m,
          awaitDrainWriters: [1mnull[22m,
          multiAwaitDrain: [33mfalse[39m,
          readingMore: [33mfalse[39m,
          dataEmitted: [33mtrue[39m,
          decoder: [1mnull[22m,
          encoding: [1mnull[22m,
          [[32mSymbol(kPaused)[39m]: [33mfalse[39m
        },
        _events: [Object: null prototype] {
          end: [36m[Function: onReadableStreamEnd][39m,
          free: [36m[Function: onFree][39m,
          close: [ [36m[Function: onClose][39m, [36m[Function: socketCloseListener][39m ],
          timeout: [36m[Function: onTimeout][39m,
          agentRemove: [36m[Function: onRemove][39m,
          error: [36m[Function: socketErrorListener][39m,
          finish: [Function: bound onceWrapper] {
            listener: [36m[Function: destroy][39m
          }
        },
        _eventsCount: [33m7[39m,
        _maxListeners: [90mundefined[39m,
        _writableState: WritableState {
          objectMode: [33mfalse[39m,
          highWaterMark: [33m16384[39m,
          finalCalled: [33mtrue[39m,
          needDrain: [33mfalse[39m,
          ending: [33mtrue[39m,
          ended: [33mtrue[39m,
          finished: [33mfalse[39m,
          destroyed: [33mfalse[39m,
          decodeStrings: [33mfalse[39m,
          defaultEncoding: [32m'utf8'[39m,
          length: [33m0[39m,
          writing: [33mfalse[39m,
          corked: [33m0[39m,
          sync: [33mfalse[39m,
          bufferProcessing: [33mfalse[39m,
          onwrite: [36m[Function: bound onwrite][39m,
          writecb: [1mnull[22m,
          writelen: [33m0[39m,
          afterWriteTickInfo: [1mnull[22m,
          buffered: [],
          bufferedIndex: [33m0[39m,
          allBuffers: [33mtrue[39m,
          allNoop: [33mtrue[39m,
          pendingcb: [33m1[39m,
          constructed: [33mtrue[39m,
          prefinished: [33mfalse[39m,
          errorEmitted: [33mfalse[39m,
          emitClose: [33mfalse[39m,
          autoDestroy: [33mtrue[39m,
          errored: [1mnull[22m,
          closed: [33mfalse[39m,
          closeEmitted: [33mfalse[39m,
          [[32mSymbol(kOnFinished)[39m]: []
        },
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [1mnull[22m,
        _server: [1mnull[22m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular *1][39m,
        [[32mSymbol(async_id_symbol)[39m]: [33m271[39m,
        [[32mSymbol(kHandle)[39m]: TCP {
          reading: [33mtrue[39m,
          onconnection: [1mnull[22m,
          [[32mSymbol(owner_symbol)[39m]: [36m[Circular *2][39m
        },
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetNoDelay)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
        [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
      },
      _consuming: [33mfalse[39m,
      _dumped: [33mfalse[39m,
      req: [36m[Circular *1][39m,
      responseUrl: [32m'http://192.168.1.16:9000/jsonrpc.js'[39m,
      redirects: [],
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
      [[32mSymbol(kHeaders)[39m]: {
        server: [32m'Lyrion Music Server (9.0.0 - 1732822968)'[39m,
        connection: [32m'close'[39m,
        [32m'content-length'[39m: [32m'137'[39m,
        [32m'content-type'[39m: [32m'application/json'[39m,
        [32m'x-time-to-serve'[39m: [32m'0.0495181083679199'[39m
      },
      [[32mSymbol(kHeadersCount)[39m]: [33m10[39m,
      [[32mSymbol(kTrailers)[39m]: [1mnull[22m,
      [[32mSymbol(kTrailersCount)[39m]: [33m0[39m,
      [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
    },
    aborted: [33mfalse[39m,
    timeoutCb: [1mnull[22m,
    upgradeOrConnect: [33mfalse[39m,
    parser: [1mnull[22m,
    maxHeadersCount: [1mnull[22m,
    reusedSocket: [33mfalse[39m,
    host: [32m'192.168.1.16'[39m,
    protocol: [32m'http:'[39m,
    _redirectable: Writable {
      _writableState: WritableState {
        objectMode: [33mfalse[39m,
        highWaterMark: [33m16384[39m,
        finalCalled: [33mfalse[39m,
        needDrain: [33mfalse[39m,
        ending: [33mfalse[39m,
        ended: [33mfalse[39m,
        finished: [33mfalse[39m,
        destroyed: [33mfalse[39m,
        decodeStrings: [33mtrue[39m,
        defaultEncoding: [32m'utf8'[39m,
        length: [33m0[39m,
        writing: [33mfalse[39m,
        corked: [33m0[39m,
        sync: [33mtrue[39m,
        bufferProcessing: [33mfalse[39m,
        onwrite: [36m[Function: bound onwrite][39m,
        writecb: [1mnull[22m,
        writelen: [33m0[39m,
        afterWriteTickInfo: [1mnull[22m,
        buffered: [],
        bufferedIndex: [33m0[39m,
        allBuffers: [33mtrue[39m,
        allNoop: [33mtrue[39m,
        pendingcb: [33m0[39m,
        constructed: [33mtrue[39m,
        prefinished: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        emitClose: [33mtrue[39m,
        autoDestroy: [33mtrue[39m,
        errored: [1mnull[22m,
        closed: [33mfalse[39m,
        closeEmitted: [33mfalse[39m,
        [[32mSymbol(kOnFinished)[39m]: []
      },
      _events: [Object: null prototype] {
        response: [36m[Function: handleResponse][39m,
        error: [36m[Function: handleRequestError][39m,
        socket: [36m[Function: handleRequestSocket][39m
      },
      _eventsCount: [33m3[39m,
      _maxListeners: [90mundefined[39m,
      _options: {
        maxRedirects: [33m21[39m,
        maxBodyLength: [33mInfinity[39m,
        protocol: [32m'http:'[39m,
        path: [32m'/jsonrpc.js'[39m,
        method: [32m'POST'[39m,
        headers: [Object: null prototype] {
          Accept: [32m'application/json, text/plain, */*'[39m,
          [32m'Content-Type'[39m: [32m'application/json'[39m,
          Origin: [32m'http://192.168.1.16:9000'[39m,
          Referer: [32m'http://192.168.1.16:9000/'[39m,
          Cookie: [32m'Squeezebox-player=b8:27:eb:e4:b0:6e'[39m,
          [32m'User-Agent'[39m: [32m'axios/1.7.7'[39m,
          [32m'Content-Length'[39m: [32m'125'[39m,
          [32m'Accept-Encoding'[39m: [32m'gzip, compress, deflate, br'[39m
        },
        agents: { http: [90mundefined[39m, https: [90mundefined[39m },
        auth: [90mundefined[39m,
        family: [90mundefined[39m,
        beforeRedirect: [36m[Function: dispatchBeforeRedirect][39m,
        beforeRedirects: { proxy: [36m[Function: beforeRedirect][39m },
        hostname: [32m'192.168.1.16'[39m,
        port: [32m'9000'[39m,
        agent: [90mundefined[39m,
        nativeProtocols: {
          [32m'http:'[39m: {
            _connectionListener: [36m[Function: connectionListener][39m,
            METHODS: [
              [32m'ACL'[39m,         [32m'BIND'[39m,       [32m'CHECKOUT'[39m,
              [32m'CONNECT'[39m,     [32m'COPY'[39m,       [32m'DELETE'[39m,
              [32m'GET'[39m,         [32m'HEAD'[39m,       [32m'LINK'[39m,
              [32m'LOCK'[39m,        [32m'M-SEARCH'[39m,   [32m'MERGE'[39m,
              [32m'MKACTIVITY'[39m,  [32m'MKCALENDAR'[39m, [32m'MKCOL'[39m,
              [32m'MOVE'[39m,        [32m'NOTIFY'[39m,     [32m'OPTIONS'[39m,
              [32m'PATCH'[39m,       [32m'POST'[39m,       [32m'PROPFIND'[39m,
              [32m'PROPPATCH'[39m,   [32m'PURGE'[39m,      [32m'PUT'[39m,
              [32m'REBIND'[39m,      [32m'REPORT'[39m,     [32m'SEARCH'[39m,
              [32m'SOURCE'[39m,      [32m'SUBSCRIBE'[39m,  [32m'TRACE'[39m,
              [32m'UNBIND'[39m,      [32m'UNLINK'[39m,     [32m'UNLOCK'[39m,
              [32m'UNSUBSCRIBE'[39m
            ],
            STATUS_CODES: {
              [32m'100'[39m: [32m'Continue'[39m,
              [32m'101'[39m: [32m'Switching Protocols'[39m,
              [32m'102'[39m: [32m'Processing'[39m,
              [32m'103'[39m: [32m'Early Hints'[39m,
              [32m'200'[39m: [32m'OK'[39m,
              [32m'201'[39m: [32m'Created'[39m,
              [32m'202'[39m: [32m'Accepted'[39m,
              [32m'203'[39m: [32m'Non-Authoritative Information'[39m,
              [32m'204'[39m: [32m'No Content'[39m,
              [32m'205'[39m: [32m'Reset Content'[39m,
              [32m'206'[39m: [32m'Partial Content'[39m,
              [32m'207'[39m: [32m'Multi-Status'[39m,
              [32m'208'[39m: [32m'Already Reported'[39m,
              [32m'226'[39m: [32m'IM Used'[39m,
              [32m'300'[39m: [32m'Multiple Choices'[39m,
              [32m'301'[39m: [32m'Moved Permanently'[39m,
              [32m'302'[39m: [32m'Found'[39m,
              [32m'303'[39m: [32m'See Other'[39m,
              [32m'304'[39m: [32m'Not Modified'[39m,
              [32m'305'[39m: [32m'Use Proxy'[39m,
              [32m'307'[39m: [32m'Temporary Redirect'[39m,
              [32m'308'[39m: [32m'Permanent Redirect'[39m,
              [32m'400'[39m: [32m'Bad Request'[39m,
              [32m'401'[39m: [32m'Unauthorized'[39m,
              [32m'402'[39m: [32m'Payment Required'[39m,
              [32m'403'[39m: [32m'Forbidden'[39m,
              [32m'404'[39m: [32m'Not Found'[39m,
              [32m'405'[39m: [32m'Method Not Allowed'[39m,
              [32m'406'[39m: [32m'Not Acceptable'[39m,
              [32m'407'[39m: [32m'Proxy Authentication Required'[39m,
              [32m'408'[39m: [32m'Request Timeout'[39m,
              [32m'409'[39m: [32m'Conflict'[39m,
              [32m'410'[39m: [32m'Gone'[39m,
              [32m'411'[39m: [32m'Length Required'[39m,
              [32m'412'[39m: [32m'Precondition Failed'[39m,
              [32m'413'[39m: [32m'Payload Too Large'[39m,
              [32m'414'[39m: [32m'URI Too Long'[39m,
              [32m'415'[39m: [32m'Unsupported Media Type'[39m,
              [32m'416'[39m: [32m'Range Not Satisfiable'[39m,
              [32m'417'[39m: [32m'Expectation Failed'[39m,
              [32m'418'[39m: [32m"I'm a Teapot"[39m,
              [32m'421'[39m: [32m'Misdirected Request'[39m,
              [32m'422'[39m: [32m'Unprocessable Entity'[39m,
              [32m'423'[39m: [32m'Locked'[39m,
              [32m'424'[39m: [32m'Failed Dependency'[39m,
              [32m'425'[39m: [32m'Too Early'[39m,
              [32m'426'[39m: [32m'Upgrade Required'[39m,
              [32m'428'[39m: [32m'Precondition Required'[39m,
              [32m'429'[39m: [32m'Too Many Requests'[39m,
              [32m'431'[39m: [32m'Request Header Fields Too Large'[39m,
              [32m'451'[39m: [32m'Unavailable For Legal Reasons'[39m,
              [32m'500'[39m: [32m'Internal Server Error'[39m,
              [32m'501'[39m: [32m'Not Implemented'[39m,
              [32m'502'[39m: [32m'Bad Gateway'[39m,
              [32m'503'[39m: [32m'Service Unavailable'[39m,
              [32m'504'[39m: [32m'Gateway Timeout'[39m,
              [32m'505'[39m: [32m'HTTP Version Not Supported'[39m,
              [32m'506'[39m: [32m'Variant Also Negotiates'[39m,
              [32m'507'[39m: [32m'Insufficient Storage'[39m,
              [32m'508'[39m: [32m'Loop Detected'[39m,
              [32m'509'[39m: [32m'Bandwidth Limit Exceeded'[39m,
              [32m'510'[39m: [32m'Not Extended'[39m,
              [32m'511'[39m: [32m'Network Authentication Required'[39m
            },
            Agent: [Function: Agent] { defaultMaxSockets: [33mInfinity[39m },
            ClientRequest: [36m[Function: ClientRequest][39m,
            IncomingMessage: [36m[Function: IncomingMessage][39m,
            OutgoingMessage: [36m[Function: OutgoingMessage][39m,
            Server: [36m[Function: Server][39m,
            ServerResponse: [36m[Function: ServerResponse][39m,
            createServer: [36m[Function: createServer][39m,
            validateHeaderName: [36m[Function: __node_internal_][39m,
            validateHeaderValue: [36m[Function: __node_internal_][39m,
            get: [36m[Function: get][39m,
            request: [36m[Function: request][39m,
            setMaxIdleHTTPParsers: [36m[Function: setMaxIdleHTTPParsers][39m,
            maxHeaderSize: [36m[Getter][39m,
            globalAgent: [36m[Getter/Setter][39m
          },
          [32m'https:'[39m: {
            Agent: [36m[Function: Agent][39m,
            globalAgent: Agent {
              _events: [Object: null prototype] {
                free: [36m[Function (anonymous)][39m,
                newListener: [36m[Function: maybeEnableKeylog][39m
              },
              _eventsCount: [33m2[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: [Object: null prototype] { path: [1mnull[22m },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              scheduling: [32m'lifo'[39m,
              maxTotalSockets: [33mInfinity[39m,
              totalSocketCount: [33m0[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] },
              [[32mSymbol(kCapture)[39m]: [33mfalse[39m
            },
            Server: [36m[Function: Server][39m,
            createServer: [36m[Function: createServer][39m,
            get: [36m[Function: get][39m,
            request: [36m[Function: request][39m
          }
        },
        pathname: [32m'/jsonrpc.js'[39m
      },
      _ended: [33mtrue[39m,
      _ending: [33mtrue[39m,
      _redirectCount: [33m0[39m,
      _redirects: [],
      _requestBodyLength: [33m125[39m,
      _requestBodyBuffers: [],
      _onNativeResponse: [36m[Function (anonymous)][39m,
      _currentRequest: [36m[Circular *1][39m,
      _currentUrl: [32m'http://192.168.1.16:9000/jsonrpc.js'[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m
    },
    [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
    [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
    [[32mSymbol(kEndCalled)[39m]: [33mtrue[39m,
    [[32mSymbol(kNeedDrain)[39m]: [33mfalse[39m,
    [[32mSymbol(corked)[39m]: [33m0[39m,
    [[32mSymbol(kOutHeaders)[39m]: [Object: null prototype] {
      accept: [ [32m'Accept'[39m, [32m'application/json, text/plain, */*'[39m ],
      [32m'content-type'[39m: [ [32m'Content-Type'[39m, [32m'application/json'[39m ],
      origin: [ [32m'Origin'[39m, [32m'http://192.168.1.16:9000'[39m ],
      referer: [ [32m'Referer'[39m, [32m'http://192.168.1.16:9000/'[39m ],
      cookie: [ [32m'Cookie'[39m, [32m'Squeezebox-player=b8:27:eb:e4:b0:6e'[39m ],
      [32m'user-agent'[39m: [ [32m'User-Agent'[39m, [32m'axios/1.7.7'[39m ],
      [32m'content-length'[39m: [ [32m'Content-Length'[39m, [32m'125'[39m ],
      [32m'accept-encoding'[39m: [ [32m'Accept-Encoding'[39m, [32m'gzip, compress, deflate, br'[39m ],
      host: [ [32m'Host'[39m, [32m'192.168.1.16:9000'[39m ]
    },
    [[32mSymbol(kUniqueHeaders)[39m]: [1mnull[22m
  },
  data: {
    result: {},
    method: [32m'slim.request'[39m,
    id: [33m0[39m,
    params: [
      [32m'b8:27:eb:e4:b0:6e'[39m,
      [ [32m'playlist'[39m, [32m'play'[39m, [32m'youtube://www.youtube.com/v/E54yZuVf9AM'[39m ]
    ]
  }
}
Lecture lanc√©e : Dans la foreÃÇt un Ouistiti le clip ! Mon imagier des comptines de la maternelle - Gallimard Jeunesse
{
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  headers: Object [AxiosHeaders] {
    server: [32m'Lyrion Music Server (9.0.0 - 1732822968)'[39m,
    connection: [32m'close'[39m,
    [32m'content-length'[39m: [32m'137'[39m,
    [32m'content-type'[39m: [32m'application/json'[39m,
    [32m'x-time-to-serve'[39m: [32m'0.0464520454406738'[39m
  },
  config: {
    transitional: {
      silentJSONParsing: [33mtrue[39m,
      forcedJSONParsing: [33mtrue[39m,
      clarifyTimeoutError: [33mfalse[39m
    },
    adapter: [ [32m'xhr'[39m, [32m'http'[39m, [32m'fetch'[39m ],
    transformRequest: [ [36m[Function: transformRequest][39m ],
    transformResponse: [ [36m[Function: transformResponse][39m ],
    timeout: [33m0[39m,
    xsrfCookieName: [32m'XSRF-TOKEN'[39m,
    xsrfHeaderName: [32m'X-XSRF-TOKEN'[39m,
    maxContentLength: [33m-1[39m,
    maxBodyLength: [33m-1[39m,
    env: {
      FormData: [Function: FormData] {
        LINE_BREAK: [32m'\r\n'[39m,
        DEFAULT_CONTENT_TYPE: [32m'application/octet-stream'[39m
      },
      Blob: [1mnull[22m
    },
    validateStatus: [36m[Function: validateStatus][39m,
    headers: Object [AxiosHeaders] {
      Accept: [32m'application/json, text/plain, */*'[39m,
      [32m'Content-Type'[39m: [32m'application/json'[39m,
      Origin: [32m'http://192.168.1.16:9000'[39m,
      Referer: [32m'http://192.168.1.16:9000/'[39m,
      Cookie: [32m'Squeezebox-player=b8:27:eb:e4:b0:6e'[39m,
      [32m'User-Agent'[39m: [32m'axios/1.7.7'[39m,
      [32m'Content-Length'[39m: [32m'125'[39m,
      [32m'Accept-Encoding'[39m: [32m'gzip, compress, deflate, br'[39m
    },
    method: [32m'post'[39m,
    url: [32m'http://192.168.1.16:9000/jsonrpc.js'[39m,
    data: [32m'{"id":0,"method":"slim.request","params":["b8:27:eb:e4:b0:6e",["playlist","play","youtube://www.youtube.com/v/E54yZuVf9AM"]]}'[39m
  },
  request: [36m<ref *1>[39m ClientRequest {
    _events: [Object: null prototype] {
      abort: [36m[Function (anonymous)][39m,
      aborted: [36m[Function (anonymous)][39m,
      connect: [36m[Function (anonymous)][39m,
      error: [36m[Function (anonymous)][39m,
      socket: [36m[Function (anonymous)][39m,
      timeout: [36m[Function (anonymous)][39m,
      finish: [36m[Function: requestOnFinish][39m
    },
    _eventsCount: [33m7[39m,
    _maxListeners: [90mundefined[39m,
    outputData: [],
    outputSize: [33m0[39m,
    writable: [33mtrue[39m,
    destroyed: [33mfalse[39m,
    _last: [33mtrue[39m,
    chunkedEncoding: [33mfalse[39m,
    shouldKeepAlive: [33mfalse[39m,
    maxRequestsOnConnectionReached: [33mfalse[39m,
    _defaultKeepAlive: [33mtrue[39m,
    useChunkedEncodingByDefault: [33mtrue[39m,
    sendDate: [33mfalse[39m,
    _removedConnection: [33mfalse[39m,
    _removedContLen: [33mfalse[39m,
    _removedTE: [33mfalse[39m,
    strictContentLength: [33mfalse[39m,
    _contentLength: [32m'125'[39m,
    _hasBody: [33mtrue[39m,
    _trailer: [32m''[39m,
    finished: [33mtrue[39m,
    _headerSent: [33mtrue[39m,
    _closed: [33mfalse[39m,
    socket: [36m<ref *2>[39m Socket {
      connecting: [33mfalse[39m,
      _hadError: [33mfalse[39m,
      _parent: [1mnull[22m,
      _host: [1mnull[22m,
      _closeAfterHandlingError: [33mfalse[39m,
      _readableState: ReadableState {
        objectMode: [33mfalse[39m,
        highWaterMark: [33m16384[39m,
        buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
        length: [33m0[39m,
        pipes: [],
        flowing: [33mtrue[39m,
        ended: [33mfalse[39m,
        endEmitted: [33mfalse[39m,
        reading: [33mtrue[39m,
        constructed: [33mtrue[39m,
        sync: [33mfalse[39m,
        needReadable: [33mtrue[39m,
        emittedReadable: [33mfalse[39m,
        readableListening: [33mfalse[39m,
        resumeScheduled: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        emitClose: [33mfalse[39m,
        autoDestroy: [33mtrue[39m,
        destroyed: [33mfalse[39m,
        errored: [1mnull[22m,
        closed: [33mfalse[39m,
        closeEmitted: [33mfalse[39m,
        defaultEncoding: [32m'utf8'[39m,
        awaitDrainWriters: [1mnull[22m,
        multiAwaitDrain: [33mfalse[39m,
        readingMore: [33mfalse[39m,
        dataEmitted: [33mtrue[39m,
        decoder: [1mnull[22m,
        encoding: [1mnull[22m,
        [[32mSymbol(kPaused)[39m]: [33mfalse[39m
      },
      _events: [Object: null prototype] {
        end: [36m[Function: onReadableStreamEnd][39m,
        free: [36m[Function: onFree][39m,
        close: [ [36m[Function: onClose][39m, [36m[Function: socketCloseListener][39m ],
        timeout: [36m[Function: onTimeout][39m,
        agentRemove: [36m[Function: onRemove][39m,
        error: [36m[Function: socketErrorListener][39m,
        finish: [Function: bound onceWrapper] { listener: [36m[Function: destroy][39m }
      },
      _eventsCount: [33m7[39m,
      _maxListeners: [90mundefined[39m,
      _writableState: WritableState {
        objectMode: [33mfalse[39m,
        highWaterMark: [33m16384[39m,
        finalCalled: [33mtrue[39m,
        needDrain: [33mfalse[39m,
        ending: [33mtrue[39m,
        ended: [33mtrue[39m,
        finished: [33mfalse[39m,
        destroyed: [33mfalse[39m,
        decodeStrings: [33mfalse[39m,
        defaultEncoding: [32m'utf8'[39m,
        length: [33m0[39m,
        writing: [33mfalse[39m,
        corked: [33m0[39m,
        sync: [33mfalse[39m,
        bufferProcessing: [33mfalse[39m,
        onwrite: [36m[Function: bound onwrite][39m,
        writecb: [1mnull[22m,
        writelen: [33m0[39m,
        afterWriteTickInfo: [1mnull[22m,
        buffered: [],
        bufferedIndex: [33m0[39m,
        allBuffers: [33mtrue[39m,
        allNoop: [33mtrue[39m,
        pendingcb: [33m1[39m,
        constructed: [33mtrue[39m,
        prefinished: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        emitClose: [33mfalse[39m,
        autoDestroy: [33mtrue[39m,
        errored: [1mnull[22m,
        closed: [33mfalse[39m,
        closeEmitted: [33mfalse[39m,
        [[32mSymbol(kOnFinished)[39m]: []
      },
      allowHalfOpen: [33mfalse[39m,
      _sockname: [1mnull[22m,
      _pendingData: [1mnull[22m,
      _pendingEncoding: [32m''[39m,
      server: [1mnull[22m,
      _server: [1mnull[22m,
      parser: [1mnull[22m,
      _httpMessage: [36m[Circular *1][39m,
      [[32mSymbol(async_id_symbol)[39m]: [33m315[39m,
      [[32mSymbol(kHandle)[39m]: TCP {
        reading: [33mtrue[39m,
        onconnection: [1mnull[22m,
        [[32mSymbol(owner_symbol)[39m]: [36m[Circular *2][39m
      },
      [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
      [[32mSymbol(timeout)[39m]: [1mnull[22m,
      [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
      [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
      [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
      [[32mSymbol(kSetNoDelay)[39m]: [33mfalse[39m,
      [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
      [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
      [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
      [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
      [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
    },
    _header: [32m'POST /jsonrpc.js HTTP/1.1\r\n'[39m +
      [32m'Accept: application/json, text/plain, */*\r\n'[39m +
      [32m'Content-Type: application/json\r\n'[39m +
      [32m'Origin: http://192.168.1.16:9000\r\n'[39m +
      [32m'Referer: http://192.168.1.16:9000/\r\n'[39m +
      [32m'Cookie: Squeezebox-player=b8:27:eb:e4:b0:6e\r\n'[39m +
      [32m'User-Agent: axios/1.7.7\r\n'[39m +
      [32m'Content-Length: 125\r\n'[39m +
      [32m'Accept-Encoding: gzip, compress, deflate, br\r\n'[39m +
      [32m'Host: 192.168.1.16:9000\r\n'[39m +
      [32m'Connection: close\r\n'[39m +
      [32m'\r\n'[39m,
    _keepAliveTimeout: [33m0[39m,
    _onPendingData: [36m[Function: nop][39m,
    agent: Agent {
      _events: [Object: null prototype] {
        free: [36m[Function (anonymous)][39m,
        newListener: [36m[Function: maybeEnableKeylog][39m
      },
      _eventsCount: [33m2[39m,
      _maxListeners: [90mundefined[39m,
      defaultPort: [33m80[39m,
      protocol: [32m'http:'[39m,
      options: [Object: null prototype] { path: [1mnull[22m },
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype] {
        [32m'192.168.1.16:9000:'[39m: [
          [36m<ref *2>[39m Socket {
            connecting: [33mfalse[39m,
            _hadError: [33mfalse[39m,
            _parent: [1mnull[22m,
            _host: [1mnull[22m,
            _closeAfterHandlingError: [33mfalse[39m,
            _readableState: ReadableState {
              objectMode: [33mfalse[39m,
              highWaterMark: [33m16384[39m,
              buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
              length: [33m0[39m,
              pipes: [],
              flowing: [33mtrue[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              constructed: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              resumeScheduled: [33mfalse[39m,
              errorEmitted: [33mfalse[39m,
              emitClose: [33mfalse[39m,
              autoDestroy: [33mtrue[39m,
              destroyed: [33mfalse[39m,
              errored: [1mnull[22m,
              closed: [33mfalse[39m,
              closeEmitted: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              awaitDrainWriters: [1mnull[22m,
              multiAwaitDrain: [33mfalse[39m,
              readingMore: [33mfalse[39m,
              dataEmitted: [33mtrue[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m,
              [[32mSymbol(kPaused)[39m]: [33mfalse[39m
            },
            _events: [Object: null prototype] {
              end: [36m[Function: onReadableStreamEnd][39m,
              free: [36m[Function: onFree][39m,
              close: [ [36m[Function: onClose][39m, [36m[Function: socketCloseListener][39m ],
              timeout: [36m[Function: onTimeout][39m,
              agentRemove: [36m[Function: onRemove][39m,
              error: [36m[Function: socketErrorListener][39m,
              finish: [Function: bound onceWrapper] {
                listener: [36m[Function: destroy][39m
              }
            },
            _eventsCount: [33m7[39m,
            _maxListeners: [90mundefined[39m,
            _writableState: WritableState {
              objectMode: [33mfalse[39m,
              highWaterMark: [33m16384[39m,
              finalCalled: [33mtrue[39m,
              needDrain: [33mfalse[39m,
              ending: [33mtrue[39m,
              ended: [33mtrue[39m,
              finished: [33mfalse[39m,
              destroyed: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              corked: [33m0[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function: bound onwrite][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              afterWriteTickInfo: [1mnull[22m,
              buffered: [],
              bufferedIndex: [33m0[39m,
              allBuffers: [33mtrue[39m,
              allNoop: [33mtrue[39m,
              pendingcb: [33m1[39m,
              constructed: [33mtrue[39m,
              prefinished: [33mfalse[39m,
              errorEmitted: [33mfalse[39m,
              emitClose: [33mfalse[39m,
              autoDestroy: [33mtrue[39m,
              errored: [1mnull[22m,
              closed: [33mfalse[39m,
              closeEmitted: [33mfalse[39m,
              [[32mSymbol(kOnFinished)[39m]: []
            },
            allowHalfOpen: [33mfalse[39m,
            _sockname: [1mnull[22m,
            _pendingData: [1mnull[22m,
            _pendingEncoding: [32m''[39m,
            server: [1mnull[22m,
            _server: [1mnull[22m,
            parser: [1mnull[22m,
            _httpMessage: [36m[Circular *1][39m,
            [[32mSymbol(async_id_symbol)[39m]: [33m315[39m,
            [[32mSymbol(kHandle)[39m]: TCP {
              reading: [33mtrue[39m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner_symbol)[39m]: [36m[Circular *2][39m
            },
            [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
            [[32mSymbol(timeout)[39m]: [1mnull[22m,
            [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
            [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
            [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
            [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
            [[32mSymbol(kSetNoDelay)[39m]: [33mfalse[39m,
            [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
            [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
            [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
            [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
            [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
          }
        ]
      },
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: [33m1000[39m,
      keepAlive: [33mfalse[39m,
      maxSockets: [33mInfinity[39m,
      maxFreeSockets: [33m256[39m,
      scheduling: [32m'lifo'[39m,
      maxTotalSockets: [33mInfinity[39m,
      totalSocketCount: [33m1[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m
    },
    socketPath: [90mundefined[39m,
    method: [32m'POST'[39m,
    maxHeaderSize: [90mundefined[39m,
    insecureHTTPParser: [90mundefined[39m,
    path: [32m'/jsonrpc.js'[39m,
    _ended: [33mtrue[39m,
    res: IncomingMessage {
      _readableState: ReadableState {
        objectMode: [33mfalse[39m,
        highWaterMark: [33m16384[39m,
        buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
        length: [33m0[39m,
        pipes: [],
        flowing: [33mtrue[39m,
        ended: [33mtrue[39m,
        endEmitted: [33mtrue[39m,
        reading: [33mfalse[39m,
        constructed: [33mtrue[39m,
        sync: [33mtrue[39m,
        needReadable: [33mfalse[39m,
        emittedReadable: [33mfalse[39m,
        readableListening: [33mfalse[39m,
        resumeScheduled: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        emitClose: [33mtrue[39m,
        autoDestroy: [33mtrue[39m,
        destroyed: [33mtrue[39m,
        errored: [1mnull[22m,
        closed: [33mtrue[39m,
        closeEmitted: [33mtrue[39m,
        defaultEncoding: [32m'utf8'[39m,
        awaitDrainWriters: [1mnull[22m,
        multiAwaitDrain: [33mfalse[39m,
        readingMore: [33mtrue[39m,
        dataEmitted: [33mtrue[39m,
        decoder: [1mnull[22m,
        encoding: [1mnull[22m,
        [[32mSymbol(kPaused)[39m]: [33mfalse[39m
      },
      _events: [Object: null prototype] {
        end: [ [36m[Function: responseOnEnd][39m, [36m[Function: handleStreamEnd][39m ],
        error: [36m[Function: handleStreamError][39m,
        data: [36m[Function: handleStreamData][39m,
        aborted: [36m[Function: handlerStreamAborted][39m
      },
      _eventsCount: [33m4[39m,
      _maxListeners: [90mundefined[39m,
      socket: [36m<ref *2>[39m Socket {
        connecting: [33mfalse[39m,
        _hadError: [33mfalse[39m,
        _parent: [1mnull[22m,
        _host: [1mnull[22m,
        _closeAfterHandlingError: [33mfalse[39m,
        _readableState: ReadableState {
          objectMode: [33mfalse[39m,
          highWaterMark: [33m16384[39m,
          buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
          length: [33m0[39m,
          pipes: [],
          flowing: [33mtrue[39m,
          ended: [33mfalse[39m,
          endEmitted: [33mfalse[39m,
          reading: [33mtrue[39m,
          constructed: [33mtrue[39m,
          sync: [33mfalse[39m,
          needReadable: [33mtrue[39m,
          emittedReadable: [33mfalse[39m,
          readableListening: [33mfalse[39m,
          resumeScheduled: [33mfalse[39m,
          errorEmitted: [33mfalse[39m,
          emitClose: [33mfalse[39m,
          autoDestroy: [33mtrue[39m,
          destroyed: [33mfalse[39m,
          errored: [1mnull[22m,
          closed: [33mfalse[39m,
          closeEmitted: [33mfalse[39m,
          defaultEncoding: [32m'utf8'[39m,
          awaitDrainWriters: [1mnull[22m,
          multiAwaitDrain: [33mfalse[39m,
          readingMore: [33mfalse[39m,
          dataEmitted: [33mtrue[39m,
          decoder: [1mnull[22m,
          encoding: [1mnull[22m,
          [[32mSymbol(kPaused)[39m]: [33mfalse[39m
        },
        _events: [Object: null prototype] {
          end: [36m[Function: onReadableStreamEnd][39m,
          free: [36m[Function: onFree][39m,
          close: [ [36m[Function: onClose][39m, [36m[Function: socketCloseListener][39m ],
          timeout: [36m[Function: onTimeout][39m,
          agentRemove: [36m[Function: onRemove][39m,
          error: [36m[Function: socketErrorListener][39m,
          finish: [Function: bound onceWrapper] {
            listener: [36m[Function: destroy][39m
          }
        },
        _eventsCount: [33m7[39m,
        _maxListeners: [90mundefined[39m,
        _writableState: WritableState {
          objectMode: [33mfalse[39m,
          highWaterMark: [33m16384[39m,
          finalCalled: [33mtrue[39m,
          needDrain: [33mfalse[39m,
          ending: [33mtrue[39m,
          ended: [33mtrue[39m,
          finished: [33mfalse[39m,
          destroyed: [33mfalse[39m,
          decodeStrings: [33mfalse[39m,
          defaultEncoding: [32m'utf8'[39m,
          length: [33m0[39m,
          writing: [33mfalse[39m,
          corked: [33m0[39m,
          sync: [33mfalse[39m,
          bufferProcessing: [33mfalse[39m,
          onwrite: [36m[Function: bound onwrite][39m,
          writecb: [1mnull[22m,
          writelen: [33m0[39m,
          afterWriteTickInfo: [1mnull[22m,
          buffered: [],
          bufferedIndex: [33m0[39m,
          allBuffers: [33mtrue[39m,
          allNoop: [33mtrue[39m,
          pendingcb: [33m1[39m,
          constructed: [33mtrue[39m,
          prefinished: [33mfalse[39m,
          errorEmitted: [33mfalse[39m,
          emitClose: [33mfalse[39m,
          autoDestroy: [33mtrue[39m,
          errored: [1mnull[22m,
          closed: [33mfalse[39m,
          closeEmitted: [33mfalse[39m,
          [[32mSymbol(kOnFinished)[39m]: []
        },
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [1mnull[22m,
        _server: [1mnull[22m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular *1][39m,
        [[32mSymbol(async_id_symbol)[39m]: [33m315[39m,
        [[32mSymbol(kHandle)[39m]: TCP {
          reading: [33mtrue[39m,
          onconnection: [1mnull[22m,
          [[32mSymbol(owner_symbol)[39m]: [36m[Circular *2][39m
        },
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetNoDelay)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
        [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
      },
      httpVersionMajor: [33m1[39m,
      httpVersionMinor: [33m1[39m,
      httpVersion: [32m'1.1'[39m,
      complete: [33mtrue[39m,
      rawHeaders: [
        [32m'Server'[39m,
        [32m'Lyrion Music Server (9.0.0 - 1732822968)'[39m,
        [32m'Connection'[39m,
        [32m'close'[39m,
        [32m'Content-Length'[39m,
        [32m'137'[39m,
        [32m'Content-Type'[39m,
        [32m'application/json'[39m,
        [32m'X-Time-To-Serve'[39m,
        [32m'0.0464520454406738'[39m
      ],
      rawTrailers: [],
      aborted: [33mfalse[39m,
      upgrade: [33mfalse[39m,
      url: [32m''[39m,
      method: [1mnull[22m,
      statusCode: [33m200[39m,
      statusMessage: [32m'OK'[39m,
      client: [36m<ref *2>[39m Socket {
        connecting: [33mfalse[39m,
        _hadError: [33mfalse[39m,
        _parent: [1mnull[22m,
        _host: [1mnull[22m,
        _closeAfterHandlingError: [33mfalse[39m,
        _readableState: ReadableState {
          objectMode: [33mfalse[39m,
          highWaterMark: [33m16384[39m,
          buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
          length: [33m0[39m,
          pipes: [],
          flowing: [33mtrue[39m,
          ended: [33mfalse[39m,
          endEmitted: [33mfalse[39m,
          reading: [33mtrue[39m,
          constructed: [33mtrue[39m,
          sync: [33mfalse[39m,
          needReadable: [33mtrue[39m,
          emittedReadable: [33mfalse[39m,
          readableListening: [33mfalse[39m,
          resumeScheduled: [33mfalse[39m,
          errorEmitted: [33mfalse[39m,
          emitClose: [33mfalse[39m,
          autoDestroy: [33mtrue[39m,
          destroyed: [33mfalse[39m,
          errored: [1mnull[22m,
          closed: [33mfalse[39m,
          closeEmitted: [33mfalse[39m,
          defaultEncoding: [32m'utf8'[39m,
          awaitDrainWriters: [1mnull[22m,
          multiAwaitDrain: [33mfalse[39m,
          readingMore: [33mfalse[39m,
          dataEmitted: [33mtrue[39m,
          decoder: [1mnull[22m,
          encoding: [1mnull[22m,
          [[32mSymbol(kPaused)[39m]: [33mfalse[39m
        },
        _events: [Object: null prototype] {
          end: [36m[Function: onReadableStreamEnd][39m,
          free: [36m[Function: onFree][39m,
          close: [ [36m[Function: onClose][39m, [36m[Function: socketCloseListener][39m ],
          timeout: [36m[Function: onTimeout][39m,
          agentRemove: [36m[Function: onRemove][39m,
          error: [36m[Function: socketErrorListener][39m,
          finish: [Function: bound onceWrapper] {
            listener: [36m[Function: destroy][39m
          }
        },
        _eventsCount: [33m7[39m,
        _maxListeners: [90mundefined[39m,
        _writableState: WritableState {
          objectMode: [33mfalse[39m,
          highWaterMark: [33m16384[39m,
          finalCalled: [33mtrue[39m,
          needDrain: [33mfalse[39m,
          ending: [33mtrue[39m,
          ended: [33mtrue[39m,
          finished: [33mfalse[39m,
          destroyed: [33mfalse[39m,
          decodeStrings: [33mfalse[39m,
          defaultEncoding: [32m'utf8'[39m,
          length: [33m0[39m,
          writing: [33mfalse[39m,
          corked: [33m0[39m,
          sync: [33mfalse[39m,
          bufferProcessing: [33mfalse[39m,
          onwrite: [36m[Function: bound onwrite][39m,
          writecb: [1mnull[22m,
          writelen: [33m0[39m,
          afterWriteTickInfo: [1mnull[22m,
          buffered: [],
          bufferedIndex: [33m0[39m,
          allBuffers: [33mtrue[39m,
          allNoop: [33mtrue[39m,
          pendingcb: [33m1[39m,
          constructed: [33mtrue[39m,
          prefinished: [33mfalse[39m,
          errorEmitted: [33mfalse[39m,
          emitClose: [33mfalse[39m,
          autoDestroy: [33mtrue[39m,
          errored: [1mnull[22m,
          closed: [33mfalse[39m,
          closeEmitted: [33mfalse[39m,
          [[32mSymbol(kOnFinished)[39m]: []
        },
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [1mnull[22m,
        _server: [1mnull[22m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular *1][39m,
        [[32mSymbol(async_id_symbol)[39m]: [33m315[39m,
        [[32mSymbol(kHandle)[39m]: TCP {
          reading: [33mtrue[39m,
          onconnection: [1mnull[22m,
          [[32mSymbol(owner_symbol)[39m]: [36m[Circular *2][39m
        },
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetNoDelay)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
        [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
      },
      _consuming: [33mfalse[39m,
      _dumped: [33mfalse[39m,
      req: [36m[Circular *1][39m,
      responseUrl: [32m'http://192.168.1.16:9000/jsonrpc.js'[39m,
      redirects: [],
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
      [[32mSymbol(kHeaders)[39m]: {
        server: [32m'Lyrion Music Server (9.0.0 - 1732822968)'[39m,
        connection: [32m'close'[39m,
        [32m'content-length'[39m: [32m'137'[39m,
        [32m'content-type'[39m: [32m'application/json'[39m,
        [32m'x-time-to-serve'[39m: [32m'0.0464520454406738'[39m
      },
      [[32mSymbol(kHeadersCount)[39m]: [33m10[39m,
      [[32mSymbol(kTrailers)[39m]: [1mnull[22m,
      [[32mSymbol(kTrailersCount)[39m]: [33m0[39m,
      [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
    },
    aborted: [33mfalse[39m,
    timeoutCb: [1mnull[22m,
    upgradeOrConnect: [33mfalse[39m,
    parser: [1mnull[22m,
    maxHeadersCount: [1mnull[22m,
    reusedSocket: [33mfalse[39m,
    host: [32m'192.168.1.16'[39m,
    protocol: [32m'http:'[39m,
    _redirectable: Writable {
      _writableState: WritableState {
        objectMode: [33mfalse[39m,
        highWaterMark: [33m16384[39m,
        finalCalled: [33mfalse[39m,
        needDrain: [33mfalse[39m,
        ending: [33mfalse[39m,
        ended: [33mfalse[39m,
        finished: [33mfalse[39m,
        destroyed: [33mfalse[39m,
        decodeStrings: [33mtrue[39m,
        defaultEncoding: [32m'utf8'[39m,
        length: [33m0[39m,
        writing: [33mfalse[39m,
        corked: [33m0[39m,
        sync: [33mtrue[39m,
        bufferProcessing: [33mfalse[39m,
        onwrite: [36m[Function: bound onwrite][39m,
        writecb: [1mnull[22m,
        writelen: [33m0[39m,
        afterWriteTickInfo: [1mnull[22m,
        buffered: [],
        bufferedIndex: [33m0[39m,
        allBuffers: [33mtrue[39m,
        allNoop: [33mtrue[39m,
        pendingcb: [33m0[39m,
        constructed: [33mtrue[39m,
        prefinished: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        emitClose: [33mtrue[39m,
        autoDestroy: [33mtrue[39m,
        errored: [1mnull[22m,
        closed: [33mfalse[39m,
        closeEmitted: [33mfalse[39m,
        [[32mSymbol(kOnFinished)[39m]: []
      },
      _events: [Object: null prototype] {
        response: [36m[Function: handleResponse][39m,
        error: [36m[Function: handleRequestError][39m,
        socket: [36m[Function: handleRequestSocket][39m
      },
      _eventsCount: [33m3[39m,
      _maxListeners: [90mundefined[39m,
      _options: {
        maxRedirects: [33m21[39m,
        maxBodyLength: [33mInfinity[39m,
        protocol: [32m'http:'[39m,
        path: [32m'/jsonrpc.js'[39m,
        method: [32m'POST'[39m,
        headers: [Object: null prototype] {
          Accept: [32m'application/json, text/plain, */*'[39m,
          [32m'Content-Type'[39m: [32m'application/json'[39m,
          Origin: [32m'http://192.168.1.16:9000'[39m,
          Referer: [32m'http://192.168.1.16:9000/'[39m,
          Cookie: [32m'Squeezebox-player=b8:27:eb:e4:b0:6e'[39m,
          [32m'User-Agent'[39m: [32m'axios/1.7.7'[39m,
          [32m'Content-Length'[39m: [32m'125'[39m,
          [32m'Accept-Encoding'[39m: [32m'gzip, compress, deflate, br'[39m
        },
        agents: { http: [90mundefined[39m, https: [90mundefined[39m },
        auth: [90mundefined[39m,
        family: [90mundefined[39m,
        beforeRedirect: [36m[Function: dispatchBeforeRedirect][39m,
        beforeRedirects: { proxy: [36m[Function: beforeRedirect][39m },
        hostname: [32m'192.168.1.16'[39m,
        port: [32m'9000'[39m,
        agent: [90mundefined[39m,
        nativeProtocols: {
          [32m'http:'[39m: {
            _connectionListener: [36m[Function: connectionListener][39m,
            METHODS: [
              [32m'ACL'[39m,         [32m'BIND'[39m,       [32m'CHECKOUT'[39m,
              [32m'CONNECT'[39m,     [32m'COPY'[39m,       [32m'DELETE'[39m,
              [32m'GET'[39m,         [32m'HEAD'[39m,       [32m'LINK'[39m,
              [32m'LOCK'[39m,        [32m'M-SEARCH'[39m,   [32m'MERGE'[39m,
              [32m'MKACTIVITY'[39m,  [32m'MKCALENDAR'[39m, [32m'MKCOL'[39m,
              [32m'MOVE'[39m,        [32m'NOTIFY'[39m,     [32m'OPTIONS'[39m,
              [32m'PATCH'[39m,       [32m'POST'[39m,       [32m'PROPFIND'[39m,
              [32m'PROPPATCH'[39m,   [32m'PURGE'[39m,      [32m'PUT'[39m,
              [32m'REBIND'[39m,      [32m'REPORT'[39m,     [32m'SEARCH'[39m,
              [32m'SOURCE'[39m,      [32m'SUBSCRIBE'[39m,  [32m'TRACE'[39m,
              [32m'UNBIND'[39m,      [32m'UNLINK'[39m,     [32m'UNLOCK'[39m,
              [32m'UNSUBSCRIBE'[39m
            ],
            STATUS_CODES: {
              [32m'100'[39m: [32m'Continue'[39m,
              [32m'101'[39m: [32m'Switching Protocols'[39m,
              [32m'102'[39m: [32m'Processing'[39m,
              [32m'103'[39m: [32m'Early Hints'[39m,
              [32m'200'[39m: [32m'OK'[39m,
              [32m'201'[39m: [32m'Created'[39m,
              [32m'202'[39m: [32m'Accepted'[39m,
              [32m'203'[39m: [32m'Non-Authoritative Information'[39m,
              [32m'204'[39m: [32m'No Content'[39m,
              [32m'205'[39m: [32m'Reset Content'[39m,
              [32m'206'[39m: [32m'Partial Content'[39m,
              [32m'207'[39m: [32m'Multi-Status'[39m,
              [32m'208'[39m: [32m'Already Reported'[39m,
              [32m'226'[39m: [32m'IM Used'[39m,
              [32m'300'[39m: [32m'Multiple Choices'[39m,
              [32m'301'[39m: [32m'Moved Permanently'[39m,
              [32m'302'[39m: [32m'Found'[39m,
              [32m'303'[39m: [32m'See Other'[39m,
              [32m'304'[39m: [32m'Not Modified'[39m,
              [32m'305'[39m: [32m'Use Proxy'[39m,
              [32m'307'[39m: [32m'Temporary Redirect'[39m,
              [32m'308'[39m: [32m'Permanent Redirect'[39m,
              [32m'400'[39m: [32m'Bad Request'[39m,
              [32m'401'[39m: [32m'Unauthorized'[39m,
              [32m'402'[39m: [32m'Payment Required'[39m,
              [32m'403'[39m: [32m'Forbidden'[39m,
              [32m'404'[39m: [32m'Not Found'[39m,
              [32m'405'[39m: [32m'Method Not Allowed'[39m,
              [32m'406'[39m: [32m'Not Acceptable'[39m,
              [32m'407'[39m: [32m'Proxy Authentication Required'[39m,
              [32m'408'[39m: [32m'Request Timeout'[39m,
              [32m'409'[39m: [32m'Conflict'[39m,
              [32m'410'[39m: [32m'Gone'[39m,
              [32m'411'[39m: [32m'Length Required'[39m,
              [32m'412'[39m: [32m'Precondition Failed'[39m,
              [32m'413'[39m: [32m'Payload Too Large'[39m,
              [32m'414'[39m: [32m'URI Too Long'[39m,
              [32m'415'[39m: [32m'Unsupported Media Type'[39m,
              [32m'416'[39m: [32m'Range Not Satisfiable'[39m,
              [32m'417'[39m: [32m'Expectation Failed'[39m,
              [32m'418'[39m: [32m"I'm a Teapot"[39m,
              [32m'421'[39m: [32m'Misdirected Request'[39m,
              [32m'422'[39m: [32m'Unprocessable Entity'[39m,
              [32m'423'[39m: [32m'Locked'[39m,
              [32m'424'[39m: [32m'Failed Dependency'[39m,
              [32m'425'[39m: [32m'Too Early'[39m,
              [32m'426'[39m: [32m'Upgrade Required'[39m,
              [32m'428'[39m: [32m'Precondition Required'[39m,
              [32m'429'[39m: [32m'Too Many Requests'[39m,
              [32m'431'[39m: [32m'Request Header Fields Too Large'[39m,
              [32m'451'[39m: [32m'Unavailable For Legal Reasons'[39m,
              [32m'500'[39m: [32m'Internal Server Error'[39m,
              [32m'501'[39m: [32m'Not Implemented'[39m,
              [32m'502'[39m: [32m'Bad Gateway'[39m,
              [32m'503'[39m: [32m'Service Unavailable'[39m,
              [32m'504'[39m: [32m'Gateway Timeout'[39m,
              [32m'505'[39m: [32m'HTTP Version Not Supported'[39m,
              [32m'506'[39m: [32m'Variant Also Negotiates'[39m,
              [32m'507'[39m: [32m'Insufficient Storage'[39m,
              [32m'508'[39m: [32m'Loop Detected'[39m,
              [32m'509'[39m: [32m'Bandwidth Limit Exceeded'[39m,
              [32m'510'[39m: [32m'Not Extended'[39m,
              [32m'511'[39m: [32m'Network Authentication Required'[39m
            },
            Agent: [Function: Agent] { defaultMaxSockets: [33mInfinity[39m },
            ClientRequest: [36m[Function: ClientRequest][39m,
            IncomingMessage: [36m[Function: IncomingMessage][39m,
            OutgoingMessage: [36m[Function: OutgoingMessage][39m,
            Server: [36m[Function: Server][39m,
            ServerResponse: [36m[Function: ServerResponse][39m,
            createServer: [36m[Function: createServer][39m,
            validateHeaderName: [36m[Function: __node_internal_][39m,
            validateHeaderValue: [36m[Function: __node_internal_][39m,
            get: [36m[Function: get][39m,
            request: [36m[Function: request][39m,
            setMaxIdleHTTPParsers: [36m[Function: setMaxIdleHTTPParsers][39m,
            maxHeaderSize: [36m[Getter][39m,
            globalAgent: [36m[Getter/Setter][39m
          },
          [32m'https:'[39m: {
            Agent: [36m[Function: Agent][39m,
            globalAgent: Agent {
              _events: [Object: null prototype] {
                free: [36m[Function (anonymous)][39m,
                newListener: [36m[Function: maybeEnableKeylog][39m
              },
              _eventsCount: [33m2[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: [Object: null prototype] { path: [1mnull[22m },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              scheduling: [32m'lifo'[39m,
              maxTotalSockets: [33mInfinity[39m,
              totalSocketCount: [33m0[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] },
              [[32mSymbol(kCapture)[39m]: [33mfalse[39m
            },
            Server: [36m[Function: Server][39m,
            createServer: [36m[Function: createServer][39m,
            get: [36m[Function: get][39m,
            request: [36m[Function: request][39m
          }
        },
        pathname: [32m'/jsonrpc.js'[39m
      },
      _ended: [33mtrue[39m,
      _ending: [33mtrue[39m,
      _redirectCount: [33m0[39m,
      _redirects: [],
      _requestBodyLength: [33m125[39m,
      _requestBodyBuffers: [],
      _onNativeResponse: [36m[Function (anonymous)][39m,
      _currentRequest: [36m[Circular *1][39m,
      _currentUrl: [32m'http://192.168.1.16:9000/jsonrpc.js'[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m
    },
    [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
    [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
    [[32mSymbol(kEndCalled)[39m]: [33mtrue[39m,
    [[32mSymbol(kNeedDrain)[39m]: [33mfalse[39m,
    [[32mSymbol(corked)[39m]: [33m0[39m,
    [[32mSymbol(kOutHeaders)[39m]: [Object: null prototype] {
      accept: [ [32m'Accept'[39m, [32m'application/json, text/plain, */*'[39m ],
      [32m'content-type'[39m: [ [32m'Content-Type'[39m, [32m'application/json'[39m ],
      origin: [ [32m'Origin'[39m, [32m'http://192.168.1.16:9000'[39m ],
      referer: [ [32m'Referer'[39m, [32m'http://192.168.1.16:9000/'[39m ],
      cookie: [ [32m'Cookie'[39m, [32m'Squeezebox-player=b8:27:eb:e4:b0:6e'[39m ],
      [32m'user-agent'[39m: [ [32m'User-Agent'[39m, [32m'axios/1.7.7'[39m ],
      [32m'content-length'[39m: [ [32m'Content-Length'[39m, [32m'125'[39m ],
      [32m'accept-encoding'[39m: [ [32m'Accept-Encoding'[39m, [32m'gzip, compress, deflate, br'[39m ],
      host: [ [32m'Host'[39m, [32m'192.168.1.16:9000'[39m ]
    },
    [[32mSymbol(kUniqueHeaders)[39m]: [1mnull[22m
  },
  data: {
    id: [33m0[39m,
    params: [
      [32m'b8:27:eb:e4:b0:6e'[39m,
      [ [32m'playlist'[39m, [32m'play'[39m, [32m'youtube://www.youtube.com/v/E54yZuVf9AM'[39m ]
    ],
    method: [32m'slim.request'[39m,
    result: {}
  }
}
Lecture lanc√©e : Dans la foreÃÇt un Ouistiti le clip ! Mon imagier des comptines de la maternelle - Gallimard Jeunesse
Client d√©connect√©
Client connect√©
{
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  headers: Object [AxiosHeaders] {
    server: [32m'Lyrion Music Server (9.0.0 - 1732822968)'[39m,
    connection: [32m'close'[39m,
    [32m'content-length'[39m: [32m'137'[39m,
    [32m'content-type'[39m: [32m'application/json'[39m,
    [32m'x-time-to-serve'[39m: [32m'0.0423998832702637'[39m
  },
  config: {
    transitional: {
      silentJSONParsing: [33mtrue[39m,
      forcedJSONParsing: [33mtrue[39m,
      clarifyTimeoutError: [33mfalse[39m
    },
    adapter: [ [32m'xhr'[39m, [32m'http'[39m, [32m'fetch'[39m ],
    transformRequest: [ [36m[Function: transformRequest][39m ],
    transformResponse: [ [36m[Function: transformResponse][39m ],
    timeout: [33m0[39m,
    xsrfCookieName: [32m'XSRF-TOKEN'[39m,
    xsrfHeaderName: [32m'X-XSRF-TOKEN'[39m,
    maxContentLength: [33m-1[39m,
    maxBodyLength: [33m-1[39m,
    env: {
      FormData: [Function: FormData] {
        LINE_BREAK: [32m'\r\n'[39m,
        DEFAULT_CONTENT_TYPE: [32m'application/octet-stream'[39m
      },
      Blob: [1mnull[22m
    },
    validateStatus: [36m[Function: validateStatus][39m,
    headers: Object [AxiosHeaders] {
      Accept: [32m'application/json, text/plain, */*'[39m,
      [32m'Content-Type'[39m: [32m'application/json'[39m,
      Origin: [32m'http://192.168.1.16:9000'[39m,
      Referer: [32m'http://192.168.1.16:9000/'[39m,
      Cookie: [32m'Squeezebox-player=b8:27:eb:e4:b0:6e'[39m,
      [32m'User-Agent'[39m: [32m'axios/1.7.7'[39m,
      [32m'Content-Length'[39m: [32m'125'[39m,
      [32m'Accept-Encoding'[39m: [32m'gzip, compress, deflate, br'[39m
    },
    method: [32m'post'[39m,
    url: [32m'http://192.168.1.16:9000/jsonrpc.js'[39m,
    data: [32m'{"id":0,"method":"slim.request","params":["b8:27:eb:e4:b0:6e",["playlist","play","youtube://www.youtube.com/v/E54yZuVf9AM"]]}'[39m
  },
  request: [36m<ref *1>[39m ClientRequest {
    _events: [Object: null prototype] {
      abort: [36m[Function (anonymous)][39m,
      aborted: [36m[Function (anonymous)][39m,
      connect: [36m[Function (anonymous)][39m,
      error: [36m[Function (anonymous)][39m,
      socket: [36m[Function (anonymous)][39m,
      timeout: [36m[Function (anonymous)][39m,
      finish: [36m[Function: requestOnFinish][39m
    },
    _eventsCount: [33m7[39m,
    _maxListeners: [90mundefined[39m,
    outputData: [],
    outputSize: [33m0[39m,
    writable: [33mtrue[39m,
    destroyed: [33mfalse[39m,
    _last: [33mtrue[39m,
    chunkedEncoding: [33mfalse[39m,
    shouldKeepAlive: [33mfalse[39m,
    maxRequestsOnConnectionReached: [33mfalse[39m,
    _defaultKeepAlive: [33mtrue[39m,
    useChunkedEncodingByDefault: [33mtrue[39m,
    sendDate: [33mfalse[39m,
    _removedConnection: [33mfalse[39m,
    _removedContLen: [33mfalse[39m,
    _removedTE: [33mfalse[39m,
    strictContentLength: [33mfalse[39m,
    _contentLength: [32m'125'[39m,
    _hasBody: [33mtrue[39m,
    _trailer: [32m''[39m,
    finished: [33mtrue[39m,
    _headerSent: [33mtrue[39m,
    _closed: [33mfalse[39m,
    socket: [36m<ref *2>[39m Socket {
      connecting: [33mfalse[39m,
      _hadError: [33mfalse[39m,
      _parent: [1mnull[22m,
      _host: [1mnull[22m,
      _closeAfterHandlingError: [33mfalse[39m,
      _readableState: ReadableState {
        objectMode: [33mfalse[39m,
        highWaterMark: [33m16384[39m,
        buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
        length: [33m0[39m,
        pipes: [],
        flowing: [33mtrue[39m,
        ended: [33mfalse[39m,
        endEmitted: [33mfalse[39m,
        reading: [33mtrue[39m,
        constructed: [33mtrue[39m,
        sync: [33mfalse[39m,
        needReadable: [33mtrue[39m,
        emittedReadable: [33mfalse[39m,
        readableListening: [33mfalse[39m,
        resumeScheduled: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        emitClose: [33mfalse[39m,
        autoDestroy: [33mtrue[39m,
        destroyed: [33mfalse[39m,
        errored: [1mnull[22m,
        closed: [33mfalse[39m,
        closeEmitted: [33mfalse[39m,
        defaultEncoding: [32m'utf8'[39m,
        awaitDrainWriters: [1mnull[22m,
        multiAwaitDrain: [33mfalse[39m,
        readingMore: [33mfalse[39m,
        dataEmitted: [33mtrue[39m,
        decoder: [1mnull[22m,
        encoding: [1mnull[22m,
        [[32mSymbol(kPaused)[39m]: [33mfalse[39m
      },
      _events: [Object: null prototype] {
        end: [36m[Function: onReadableStreamEnd][39m,
        free: [36m[Function: onFree][39m,
        close: [ [36m[Function: onClose][39m, [36m[Function: socketCloseListener][39m ],
        timeout: [36m[Function: onTimeout][39m,
        agentRemove: [36m[Function: onRemove][39m,
        error: [36m[Function: socketErrorListener][39m,
        finish: [Function: bound onceWrapper] { listener: [36m[Function: destroy][39m }
      },
      _eventsCount: [33m7[39m,
      _maxListeners: [90mundefined[39m,
      _writableState: WritableState {
        objectMode: [33mfalse[39m,
        highWaterMark: [33m16384[39m,
        finalCalled: [33mtrue[39m,
        needDrain: [33mfalse[39m,
        ending: [33mtrue[39m,
        ended: [33mtrue[39m,
        finished: [33mfalse[39m,
        destroyed: [33mfalse[39m,
        decodeStrings: [33mfalse[39m,
        defaultEncoding: [32m'utf8'[39m,
        length: [33m0[39m,
        writing: [33mfalse[39m,
        corked: [33m0[39m,
        sync: [33mfalse[39m,
        bufferProcessing: [33mfalse[39m,
        onwrite: [36m[Function: bound onwrite][39m,
        writecb: [1mnull[22m,
        writelen: [33m0[39m,
        afterWriteTickInfo: [1mnull[22m,
        buffered: [],
        bufferedIndex: [33m0[39m,
        allBuffers: [33mtrue[39m,
        allNoop: [33mtrue[39m,
        pendingcb: [33m1[39m,
        constructed: [33mtrue[39m,
        prefinished: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        emitClose: [33mfalse[39m,
        autoDestroy: [33mtrue[39m,
        errored: [1mnull[22m,
        closed: [33mfalse[39m,
        closeEmitted: [33mfalse[39m,
        [[32mSymbol(kOnFinished)[39m]: []
      },
      allowHalfOpen: [33mfalse[39m,
      _sockname: [1mnull[22m,
      _pendingData: [1mnull[22m,
      _pendingEncoding: [32m''[39m,
      server: [1mnull[22m,
      _server: [1mnull[22m,
      parser: [1mnull[22m,
      _httpMessage: [36m[Circular *1][39m,
      [[32mSymbol(async_id_symbol)[39m]: [33m468[39m,
      [[32mSymbol(kHandle)[39m]: TCP {
        reading: [33mtrue[39m,
        onconnection: [1mnull[22m,
        [[32mSymbol(owner_symbol)[39m]: [36m[Circular *2][39m
      },
      [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
      [[32mSymbol(timeout)[39m]: [1mnull[22m,
      [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
      [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
      [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
      [[32mSymbol(kSetNoDelay)[39m]: [33mfalse[39m,
      [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
      [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
      [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
      [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
      [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
    },
    _header: [32m'POST /jsonrpc.js HTTP/1.1\r\n'[39m +
      [32m'Accept: application/json, text/plain, */*\r\n'[39m +
      [32m'Content-Type: application/json\r\n'[39m +
      [32m'Origin: http://192.168.1.16:9000\r\n'[39m +
      [32m'Referer: http://192.168.1.16:9000/\r\n'[39m +
      [32m'Cookie: Squeezebox-player=b8:27:eb:e4:b0:6e\r\n'[39m +
      [32m'User-Agent: axios/1.7.7\r\n'[39m +
      [32m'Content-Length: 125\r\n'[39m +
      [32m'Accept-Encoding: gzip, compress, deflate, br\r\n'[39m +
      [32m'Host: 192.168.1.16:9000\r\n'[39m +
      [32m'Connection: close\r\n'[39m +
      [32m'\r\n'[39m,
    _keepAliveTimeout: [33m0[39m,
    _onPendingData: [36m[Function: nop][39m,
    agent: Agent {
      _events: [Object: null prototype] {
        free: [36m[Function (anonymous)][39m,
        newListener: [36m[Function: maybeEnableKeylog][39m
      },
      _eventsCount: [33m2[39m,
      _maxListeners: [90mundefined[39m,
      defaultPort: [33m80[39m,
      protocol: [32m'http:'[39m,
      options: [Object: null prototype] { path: [1mnull[22m },
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype] {
        [32m'192.168.1.16:9000:'[39m: [
          [36m<ref *2>[39m Socket {
            connecting: [33mfalse[39m,
            _hadError: [33mfalse[39m,
            _parent: [1mnull[22m,
            _host: [1mnull[22m,
            _closeAfterHandlingError: [33mfalse[39m,
            _readableState: ReadableState {
              objectMode: [33mfalse[39m,
              highWaterMark: [33m16384[39m,
              buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
              length: [33m0[39m,
              pipes: [],
              flowing: [33mtrue[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              constructed: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              resumeScheduled: [33mfalse[39m,
              errorEmitted: [33mfalse[39m,
              emitClose: [33mfalse[39m,
              autoDestroy: [33mtrue[39m,
              destroyed: [33mfalse[39m,
              errored: [1mnull[22m,
              closed: [33mfalse[39m,
              closeEmitted: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              awaitDrainWriters: [1mnull[22m,
              multiAwaitDrain: [33mfalse[39m,
              readingMore: [33mfalse[39m,
              dataEmitted: [33mtrue[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m,
              [[32mSymbol(kPaused)[39m]: [33mfalse[39m
            },
            _events: [Object: null prototype] {
              end: [36m[Function: onReadableStreamEnd][39m,
              free: [36m[Function: onFree][39m,
              close: [ [36m[Function: onClose][39m, [36m[Function: socketCloseListener][39m ],
              timeout: [36m[Function: onTimeout][39m,
              agentRemove: [36m[Function: onRemove][39m,
              error: [36m[Function: socketErrorListener][39m,
              finish: [Function: bound onceWrapper] {
                listener: [36m[Function: destroy][39m
              }
            },
            _eventsCount: [33m7[39m,
            _maxListeners: [90mundefined[39m,
            _writableState: WritableState {
              objectMode: [33mfalse[39m,
              highWaterMark: [33m16384[39m,
              finalCalled: [33mtrue[39m,
              needDrain: [33mfalse[39m,
              ending: [33mtrue[39m,
              ended: [33mtrue[39m,
              finished: [33mfalse[39m,
              destroyed: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              corked: [33m0[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function: bound onwrite][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              afterWriteTickInfo: [1mnull[22m,
              buffered: [],
              bufferedIndex: [33m0[39m,
              allBuffers: [33mtrue[39m,
              allNoop: [33mtrue[39m,
              pendingcb: [33m1[39m,
              constructed: [33mtrue[39m,
              prefinished: [33mfalse[39m,
              errorEmitted: [33mfalse[39m,
              emitClose: [33mfalse[39m,
              autoDestroy: [33mtrue[39m,
              errored: [1mnull[22m,
              closed: [33mfalse[39m,
              closeEmitted: [33mfalse[39m,
              [[32mSymbol(kOnFinished)[39m]: []
            },
            allowHalfOpen: [33mfalse[39m,
            _sockname: [1mnull[22m,
            _pendingData: [1mnull[22m,
            _pendingEncoding: [32m''[39m,
            server: [1mnull[22m,
            _server: [1mnull[22m,
            parser: [1mnull[22m,
            _httpMessage: [36m[Circular *1][39m,
            [[32mSymbol(async_id_symbol)[39m]: [33m468[39m,
            [[32mSymbol(kHandle)[39m]: TCP {
              reading: [33mtrue[39m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner_symbol)[39m]: [36m[Circular *2][39m
            },
            [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
            [[32mSymbol(timeout)[39m]: [1mnull[22m,
            [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
            [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
            [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
            [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
            [[32mSymbol(kSetNoDelay)[39m]: [33mfalse[39m,
            [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
            [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
            [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
            [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
            [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
          }
        ]
      },
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: [33m1000[39m,
      keepAlive: [33mfalse[39m,
      maxSockets: [33mInfinity[39m,
      maxFreeSockets: [33m256[39m,
      scheduling: [32m'lifo'[39m,
      maxTotalSockets: [33mInfinity[39m,
      totalSocketCount: [33m1[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m
    },
    socketPath: [90mundefined[39m,
    method: [32m'POST'[39m,
    maxHeaderSize: [90mundefined[39m,
    insecureHTTPParser: [90mundefined[39m,
    path: [32m'/jsonrpc.js'[39m,
    _ended: [33mtrue[39m,
    res: IncomingMessage {
      _readableState: ReadableState {
        objectMode: [33mfalse[39m,
        highWaterMark: [33m16384[39m,
        buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
        length: [33m0[39m,
        pipes: [],
        flowing: [33mtrue[39m,
        ended: [33mtrue[39m,
        endEmitted: [33mtrue[39m,
        reading: [33mfalse[39m,
        constructed: [33mtrue[39m,
        sync: [33mtrue[39m,
        needReadable: [33mfalse[39m,
        emittedReadable: [33mfalse[39m,
        readableListening: [33mfalse[39m,
        resumeScheduled: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        emitClose: [33mtrue[39m,
        autoDestroy: [33mtrue[39m,
        destroyed: [33mtrue[39m,
        errored: [1mnull[22m,
        closed: [33mtrue[39m,
        closeEmitted: [33mtrue[39m,
        defaultEncoding: [32m'utf8'[39m,
        awaitDrainWriters: [1mnull[22m,
        multiAwaitDrain: [33mfalse[39m,
        readingMore: [33mtrue[39m,
        dataEmitted: [33mtrue[39m,
        decoder: [1mnull[22m,
        encoding: [1mnull[22m,
        [[32mSymbol(kPaused)[39m]: [33mfalse[39m
      },
      _events: [Object: null prototype] {
        end: [ [36m[Function: responseOnEnd][39m, [36m[Function: handleStreamEnd][39m ],
        error: [36m[Function: handleStreamError][39m,
        data: [36m[Function: handleStreamData][39m,
        aborted: [36m[Function: handlerStreamAborted][39m
      },
      _eventsCount: [33m4[39m,
      _maxListeners: [90mundefined[39m,
      socket: [36m<ref *2>[39m Socket {
        connecting: [33mfalse[39m,
        _hadError: [33mfalse[39m,
        _parent: [1mnull[22m,
        _host: [1mnull[22m,
        _closeAfterHandlingError: [33mfalse[39m,
        _readableState: ReadableState {
          objectMode: [33mfalse[39m,
          highWaterMark: [33m16384[39m,
          buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
          length: [33m0[39m,
          pipes: [],
          flowing: [33mtrue[39m,
          ended: [33mfalse[39m,
          endEmitted: [33mfalse[39m,
          reading: [33mtrue[39m,
          constructed: [33mtrue[39m,
          sync: [33mfalse[39m,
          needReadable: [33mtrue[39m,
          emittedReadable: [33mfalse[39m,
          readableListening: [33mfalse[39m,
          resumeScheduled: [33mfalse[39m,
          errorEmitted: [33mfalse[39m,
          emitClose: [33mfalse[39m,
          autoDestroy: [33mtrue[39m,
          destroyed: [33mfalse[39m,
          errored: [1mnull[22m,
          closed: [33mfalse[39m,
          closeEmitted: [33mfalse[39m,
          defaultEncoding: [32m'utf8'[39m,
          awaitDrainWriters: [1mnull[22m,
          multiAwaitDrain: [33mfalse[39m,
          readingMore: [33mfalse[39m,
          dataEmitted: [33mtrue[39m,
          decoder: [1mnull[22m,
          encoding: [1mnull[22m,
          [[32mSymbol(kPaused)[39m]: [33mfalse[39m
        },
        _events: [Object: null prototype] {
          end: [36m[Function: onReadableStreamEnd][39m,
          free: [36m[Function: onFree][39m,
          close: [ [36m[Function: onClose][39m, [36m[Function: socketCloseListener][39m ],
          timeout: [36m[Function: onTimeout][39m,
          agentRemove: [36m[Function: onRemove][39m,
          error: [36m[Function: socketErrorListener][39m,
          finish: [Function: bound onceWrapper] {
            listener: [36m[Function: destroy][39m
          }
        },
        _eventsCount: [33m7[39m,
        _maxListeners: [90mundefined[39m,
        _writableState: WritableState {
          objectMode: [33mfalse[39m,
          highWaterMark: [33m16384[39m,
          finalCalled: [33mtrue[39m,
          needDrain: [33mfalse[39m,
          ending: [33mtrue[39m,
          ended: [33mtrue[39m,
          finished: [33mfalse[39m,
          destroyed: [33mfalse[39m,
          decodeStrings: [33mfalse[39m,
          defaultEncoding: [32m'utf8'[39m,
          length: [33m0[39m,
          writing: [33mfalse[39m,
          corked: [33m0[39m,
          sync: [33mfalse[39m,
          bufferProcessing: [33mfalse[39m,
          onwrite: [36m[Function: bound onwrite][39m,
          writecb: [1mnull[22m,
          writelen: [33m0[39m,
          afterWriteTickInfo: [1mnull[22m,
          buffered: [],
          bufferedIndex: [33m0[39m,
          allBuffers: [33mtrue[39m,
          allNoop: [33mtrue[39m,
          pendingcb: [33m1[39m,
          constructed: [33mtrue[39m,
          prefinished: [33mfalse[39m,
          errorEmitted: [33mfalse[39m,
          emitClose: [33mfalse[39m,
          autoDestroy: [33mtrue[39m,
          errored: [1mnull[22m,
          closed: [33mfalse[39m,
          closeEmitted: [33mfalse[39m,
          [[32mSymbol(kOnFinished)[39m]: []
        },
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [1mnull[22m,
        _server: [1mnull[22m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular *1][39m,
        [[32mSymbol(async_id_symbol)[39m]: [33m468[39m,
        [[32mSymbol(kHandle)[39m]: TCP {
          reading: [33mtrue[39m,
          onconnection: [1mnull[22m,
          [[32mSymbol(owner_symbol)[39m]: [36m[Circular *2][39m
        },
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetNoDelay)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
        [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
      },
      httpVersionMajor: [33m1[39m,
      httpVersionMinor: [33m1[39m,
      httpVersion: [32m'1.1'[39m,
      complete: [33mtrue[39m,
      rawHeaders: [
        [32m'Server'[39m,
        [32m'Lyrion Music Server (9.0.0 - 1732822968)'[39m,
        [32m'Connection'[39m,
        [32m'close'[39m,
        [32m'Content-Length'[39m,
        [32m'137'[39m,
        [32m'Content-Type'[39m,
        [32m'application/json'[39m,
        [32m'X-Time-To-Serve'[39m,
        [32m'0.0423998832702637'[39m
      ],
      rawTrailers: [],
      aborted: [33mfalse[39m,
      upgrade: [33mfalse[39m,
      url: [32m''[39m,
      method: [1mnull[22m,
      statusCode: [33m200[39m,
      statusMessage: [32m'OK'[39m,
      client: [36m<ref *2>[39m Socket {
        connecting: [33mfalse[39m,
        _hadError: [33mfalse[39m,
        _parent: [1mnull[22m,
        _host: [1mnull[22m,
        _closeAfterHandlingError: [33mfalse[39m,
        _readableState: ReadableState {
          objectMode: [33mfalse[39m,
          highWaterMark: [33m16384[39m,
          buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
          length: [33m0[39m,
          pipes: [],
          flowing: [33mtrue[39m,
          ended: [33mfalse[39m,
          endEmitted: [33mfalse[39m,
          reading: [33mtrue[39m,
          constructed: [33mtrue[39m,
          sync: [33mfalse[39m,
          needReadable: [33mtrue[39m,
          emittedReadable: [33mfalse[39m,
          readableListening: [33mfalse[39m,
          resumeScheduled: [33mfalse[39m,
          errorEmitted: [33mfalse[39m,
          emitClose: [33mfalse[39m,
          autoDestroy: [33mtrue[39m,
          destroyed: [33mfalse[39m,
          errored: [1mnull[22m,
          closed: [33mfalse[39m,
          closeEmitted: [33mfalse[39m,
          defaultEncoding: [32m'utf8'[39m,
          awaitDrainWriters: [1mnull[22m,
          multiAwaitDrain: [33mfalse[39m,
          readingMore: [33mfalse[39m,
          dataEmitted: [33mtrue[39m,
          decoder: [1mnull[22m,
          encoding: [1mnull[22m,
          [[32mSymbol(kPaused)[39m]: [33mfalse[39m
        },
        _events: [Object: null prototype] {
          end: [36m[Function: onReadableStreamEnd][39m,
          free: [36m[Function: onFree][39m,
          close: [ [36m[Function: onClose][39m, [36m[Function: socketCloseListener][39m ],
          timeout: [36m[Function: onTimeout][39m,
          agentRemove: [36m[Function: onRemove][39m,
          error: [36m[Function: socketErrorListener][39m,
          finish: [Function: bound onceWrapper] {
            listener: [36m[Function: destroy][39m
          }
        },
        _eventsCount: [33m7[39m,
        _maxListeners: [90mundefined[39m,
        _writableState: WritableState {
          objectMode: [33mfalse[39m,
          highWaterMark: [33m16384[39m,
          finalCalled: [33mtrue[39m,
          needDrain: [33mfalse[39m,
          ending: [33mtrue[39m,
          ended: [33mtrue[39m,
          finished: [33mfalse[39m,
          destroyed: [33mfalse[39m,
          decodeStrings: [33mfalse[39m,
          defaultEncoding: [32m'utf8'[39m,
          length: [33m0[39m,
          writing: [33mfalse[39m,
          corked: [33m0[39m,
          sync: [33mfalse[39m,
          bufferProcessing: [33mfalse[39m,
          onwrite: [36m[Function: bound onwrite][39m,
          writecb: [1mnull[22m,
          writelen: [33m0[39m,
          afterWriteTickInfo: [1mnull[22m,
          buffered: [],
          bufferedIndex: [33m0[39m,
          allBuffers: [33mtrue[39m,
          allNoop: [33mtrue[39m,
          pendingcb: [33m1[39m,
          constructed: [33mtrue[39m,
          prefinished: [33mfalse[39m,
          errorEmitted: [33mfalse[39m,
          emitClose: [33mfalse[39m,
          autoDestroy: [33mtrue[39m,
          errored: [1mnull[22m,
          closed: [33mfalse[39m,
          closeEmitted: [33mfalse[39m,
          [[32mSymbol(kOnFinished)[39m]: []
        },
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [1mnull[22m,
        _server: [1mnull[22m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular *1][39m,
        [[32mSymbol(async_id_symbol)[39m]: [33m468[39m,
        [[32mSymbol(kHandle)[39m]: TCP {
          reading: [33mtrue[39m,
          onconnection: [1mnull[22m,
          [[32mSymbol(owner_symbol)[39m]: [36m[Circular *2][39m
        },
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetNoDelay)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
        [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
      },
      _consuming: [33mfalse[39m,
      _dumped: [33mfalse[39m,
      req: [36m[Circular *1][39m,
      responseUrl: [32m'http://192.168.1.16:9000/jsonrpc.js'[39m,
      redirects: [],
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
      [[32mSymbol(kHeaders)[39m]: {
        server: [32m'Lyrion Music Server (9.0.0 - 1732822968)'[39m,
        connection: [32m'close'[39m,
        [32m'content-length'[39m: [32m'137'[39m,
        [32m'content-type'[39m: [32m'application/json'[39m,
        [32m'x-time-to-serve'[39m: [32m'0.0423998832702637'[39m
      },
      [[32mSymbol(kHeadersCount)[39m]: [33m10[39m,
      [[32mSymbol(kTrailers)[39m]: [1mnull[22m,
      [[32mSymbol(kTrailersCount)[39m]: [33m0[39m,
      [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
    },
    aborted: [33mfalse[39m,
    timeoutCb: [1mnull[22m,
    upgradeOrConnect: [33mfalse[39m,
    parser: [1mnull[22m,
    maxHeadersCount: [1mnull[22m,
    reusedSocket: [33mfalse[39m,
    host: [32m'192.168.1.16'[39m,
    protocol: [32m'http:'[39m,
    _redirectable: Writable {
      _writableState: WritableState {
        objectMode: [33mfalse[39m,
        highWaterMark: [33m16384[39m,
        finalCalled: [33mfalse[39m,
        needDrain: [33mfalse[39m,
        ending: [33mfalse[39m,
        ended: [33mfalse[39m,
        finished: [33mfalse[39m,
        destroyed: [33mfalse[39m,
        decodeStrings: [33mtrue[39m,
        defaultEncoding: [32m'utf8'[39m,
        length: [33m0[39m,
        writing: [33mfalse[39m,
        corked: [33m0[39m,
        sync: [33mtrue[39m,
        bufferProcessing: [33mfalse[39m,
        onwrite: [36m[Function: bound onwrite][39m,
        writecb: [1mnull[22m,
        writelen: [33m0[39m,
        afterWriteTickInfo: [1mnull[22m,
        buffered: [],
        bufferedIndex: [33m0[39m,
        allBuffers: [33mtrue[39m,
        allNoop: [33mtrue[39m,
        pendingcb: [33m0[39m,
        constructed: [33mtrue[39m,
        prefinished: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        emitClose: [33mtrue[39m,
        autoDestroy: [33mtrue[39m,
        errored: [1mnull[22m,
        closed: [33mfalse[39m,
        closeEmitted: [33mfalse[39m,
        [[32mSymbol(kOnFinished)[39m]: []
      },
      _events: [Object: null prototype] {
        response: [36m[Function: handleResponse][39m,
        error: [36m[Function: handleRequestError][39m,
        socket: [36m[Function: handleRequestSocket][39m
      },
      _eventsCount: [33m3[39m,
      _maxListeners: [90mundefined[39m,
      _options: {
        maxRedirects: [33m21[39m,
        maxBodyLength: [33mInfinity[39m,
        protocol: [32m'http:'[39m,
        path: [32m'/jsonrpc.js'[39m,
        method: [32m'POST'[39m,
        headers: [Object: null prototype] {
          Accept: [32m'application/json, text/plain, */*'[39m,
          [32m'Content-Type'[39m: [32m'application/json'[39m,
          Origin: [32m'http://192.168.1.16:9000'[39m,
          Referer: [32m'http://192.168.1.16:9000/'[39m,
          Cookie: [32m'Squeezebox-player=b8:27:eb:e4:b0:6e'[39m,
          [32m'User-Agent'[39m: [32m'axios/1.7.7'[39m,
          [32m'Content-Length'[39m: [32m'125'[39m,
          [32m'Accept-Encoding'[39m: [32m'gzip, compress, deflate, br'[39m
        },
        agents: { http: [90mundefined[39m, https: [90mundefined[39m },
        auth: [90mundefined[39m,
        family: [90mundefined[39m,
        beforeRedirect: [36m[Function: dispatchBeforeRedirect][39m,
        beforeRedirects: { proxy: [36m[Function: beforeRedirect][39m },
        hostname: [32m'192.168.1.16'[39m,
        port: [32m'9000'[39m,
        agent: [90mundefined[39m,
        nativeProtocols: {
          [32m'http:'[39m: {
            _connectionListener: [36m[Function: connectionListener][39m,
            METHODS: [
              [32m'ACL'[39m,         [32m'BIND'[39m,       [32m'CHECKOUT'[39m,
              [32m'CONNECT'[39m,     [32m'COPY'[39m,       [32m'DELETE'[39m,
              [32m'GET'[39m,         [32m'HEAD'[39m,       [32m'LINK'[39m,
              [32m'LOCK'[39m,        [32m'M-SEARCH'[39m,   [32m'MERGE'[39m,
              [32m'MKACTIVITY'[39m,  [32m'MKCALENDAR'[39m, [32m'MKCOL'[39m,
              [32m'MOVE'[39m,        [32m'NOTIFY'[39m,     [32m'OPTIONS'[39m,
              [32m'PATCH'[39m,       [32m'POST'[39m,       [32m'PROPFIND'[39m,
              [32m'PROPPATCH'[39m,   [32m'PURGE'[39m,      [32m'PUT'[39m,
              [32m'REBIND'[39m,      [32m'REPORT'[39m,     [32m'SEARCH'[39m,
              [32m'SOURCE'[39m,      [32m'SUBSCRIBE'[39m,  [32m'TRACE'[39m,
              [32m'UNBIND'[39m,      [32m'UNLINK'[39m,     [32m'UNLOCK'[39m,
              [32m'UNSUBSCRIBE'[39m
            ],
            STATUS_CODES: {
              [32m'100'[39m: [32m'Continue'[39m,
              [32m'101'[39m: [32m'Switching Protocols'[39m,
              [32m'102'[39m: [32m'Processing'[39m,
              [32m'103'[39m: [32m'Early Hints'[39m,
              [32m'200'[39m: [32m'OK'[39m,
              [32m'201'[39m: [32m'Created'[39m,
              [32m'202'[39m: [32m'Accepted'[39m,
              [32m'203'[39m: [32m'Non-Authoritative Information'[39m,
              [32m'204'[39m: [32m'No Content'[39m,
              [32m'205'[39m: [32m'Reset Content'[39m,
              [32m'206'[39m: [32m'Partial Content'[39m,
              [32m'207'[39m: [32m'Multi-Status'[39m,
              [32m'208'[39m: [32m'Already Reported'[39m,
              [32m'226'[39m: [32m'IM Used'[39m,
              [32m'300'[39m: [32m'Multiple Choices'[39m,
              [32m'301'[39m: [32m'Moved Permanently'[39m,
              [32m'302'[39m: [32m'Found'[39m,
              [32m'303'[39m: [32m'See Other'[39m,
              [32m'304'[39m: [32m'Not Modified'[39m,
              [32m'305'[39m: [32m'Use Proxy'[39m,
              [32m'307'[39m: [32m'Temporary Redirect'[39m,
              [32m'308'[39m: [32m'Permanent Redirect'[39m,
              [32m'400'[39m: [32m'Bad Request'[39m,
              [32m'401'[39m: [32m'Unauthorized'[39m,
              [32m'402'[39m: [32m'Payment Required'[39m,
              [32m'403'[39m: [32m'Forbidden'[39m,
              [32m'404'[39m: [32m'Not Found'[39m,
              [32m'405'[39m: [32m'Method Not Allowed'[39m,
              [32m'406'[39m: [32m'Not Acceptable'[39m,
              [32m'407'[39m: [32m'Proxy Authentication Required'[39m,
              [32m'408'[39m: [32m'Request Timeout'[39m,
              [32m'409'[39m: [32m'Conflict'[39m,
              [32m'410'[39m: [32m'Gone'[39m,
              [32m'411'[39m: [32m'Length Required'[39m,
              [32m'412'[39m: [32m'Precondition Failed'[39m,
              [32m'413'[39m: [32m'Payload Too Large'[39m,
              [32m'414'[39m: [32m'URI Too Long'[39m,
              [32m'415'[39m: [32m'Unsupported Media Type'[39m,
              [32m'416'[39m: [32m'Range Not Satisfiable'[39m,
              [32m'417'[39m: [32m'Expectation Failed'[39m,
              [32m'418'[39m: [32m"I'm a Teapot"[39m,
              [32m'421'[39m: [32m'Misdirected Request'[39m,
              [32m'422'[39m: [32m'Unprocessable Entity'[39m,
              [32m'423'[39m: [32m'Locked'[39m,
              [32m'424'[39m: [32m'Failed Dependency'[39m,
              [32m'425'[39m: [32m'Too Early'[39m,
              [32m'426'[39m: [32m'Upgrade Required'[39m,
              [32m'428'[39m: [32m'Precondition Required'[39m,
              [32m'429'[39m: [32m'Too Many Requests'[39m,
              [32m'431'[39m: [32m'Request Header Fields Too Large'[39m,
              [32m'451'[39m: [32m'Unavailable For Legal Reasons'[39m,
              [32m'500'[39m: [32m'Internal Server Error'[39m,
              [32m'501'[39m: [32m'Not Implemented'[39m,
              [32m'502'[39m: [32m'Bad Gateway'[39m,
              [32m'503'[39m: [32m'Service Unavailable'[39m,
              [32m'504'[39m: [32m'Gateway Timeout'[39m,
              [32m'505'[39m: [32m'HTTP Version Not Supported'[39m,
              [32m'506'[39m: [32m'Variant Also Negotiates'[39m,
              [32m'507'[39m: [32m'Insufficient Storage'[39m,
              [32m'508'[39m: [32m'Loop Detected'[39m,
              [32m'509'[39m: [32m'Bandwidth Limit Exceeded'[39m,
              [32m'510'[39m: [32m'Not Extended'[39m,
              [32m'511'[39m: [32m'Network Authentication Required'[39m
            },
            Agent: [Function: Agent] { defaultMaxSockets: [33mInfinity[39m },
            ClientRequest: [36m[Function: ClientRequest][39m,
            IncomingMessage: [36m[Function: IncomingMessage][39m,
            OutgoingMessage: [36m[Function: OutgoingMessage][39m,
            Server: [36m[Function: Server][39m,
            ServerResponse: [36m[Function: ServerResponse][39m,
            createServer: [36m[Function: createServer][39m,
            validateHeaderName: [36m[Function: __node_internal_][39m,
            validateHeaderValue: [36m[Function: __node_internal_][39m,
            get: [36m[Function: get][39m,
            request: [36m[Function: request][39m,
            setMaxIdleHTTPParsers: [36m[Function: setMaxIdleHTTPParsers][39m,
            maxHeaderSize: [36m[Getter][39m,
            globalAgent: [36m[Getter/Setter][39m
          },
          [32m'https:'[39m: {
            Agent: [36m[Function: Agent][39m,
            globalAgent: Agent {
              _events: [Object: null prototype] {
                free: [36m[Function (anonymous)][39m,
                newListener: [36m[Function: maybeEnableKeylog][39m
              },
              _eventsCount: [33m2[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: [Object: null prototype] { path: [1mnull[22m },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              scheduling: [32m'lifo'[39m,
              maxTotalSockets: [33mInfinity[39m,
              totalSocketCount: [33m0[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] },
              [[32mSymbol(kCapture)[39m]: [33mfalse[39m
            },
            Server: [36m[Function: Server][39m,
            createServer: [36m[Function: createServer][39m,
            get: [36m[Function: get][39m,
            request: [36m[Function: request][39m
          }
        },
        pathname: [32m'/jsonrpc.js'[39m
      },
      _ended: [33mtrue[39m,
      _ending: [33mtrue[39m,
      _redirectCount: [33m0[39m,
      _redirects: [],
      _requestBodyLength: [33m125[39m,
      _requestBodyBuffers: [],
      _onNativeResponse: [36m[Function (anonymous)][39m,
      _currentRequest: [36m[Circular *1][39m,
      _currentUrl: [32m'http://192.168.1.16:9000/jsonrpc.js'[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m
    },
    [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
    [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
    [[32mSymbol(kEndCalled)[39m]: [33mtrue[39m,
    [[32mSymbol(kNeedDrain)[39m]: [33mfalse[39m,
    [[32mSymbol(corked)[39m]: [33m0[39m,
    [[32mSymbol(kOutHeaders)[39m]: [Object: null prototype] {
      accept: [ [32m'Accept'[39m, [32m'application/json, text/plain, */*'[39m ],
      [32m'content-type'[39m: [ [32m'Content-Type'[39m, [32m'application/json'[39m ],
      origin: [ [32m'Origin'[39m, [32m'http://192.168.1.16:9000'[39m ],
      referer: [ [32m'Referer'[39m, [32m'http://192.168.1.16:9000/'[39m ],
      cookie: [ [32m'Cookie'[39m, [32m'Squeezebox-player=b8:27:eb:e4:b0:6e'[39m ],
      [32m'user-agent'[39m: [ [32m'User-Agent'[39m, [32m'axios/1.7.7'[39m ],
      [32m'content-length'[39m: [ [32m'Content-Length'[39m, [32m'125'[39m ],
      [32m'accept-encoding'[39m: [ [32m'Accept-Encoding'[39m, [32m'gzip, compress, deflate, br'[39m ],
      host: [ [32m'Host'[39m, [32m'192.168.1.16:9000'[39m ]
    },
    [[32mSymbol(kUniqueHeaders)[39m]: [1mnull[22m
  },
  data: {
    method: [32m'slim.request'[39m,
    id: [33m0[39m,
    params: [
      [32m'b8:27:eb:e4:b0:6e'[39m,
      [ [32m'playlist'[39m, [32m'play'[39m, [32m'youtube://www.youtube.com/v/E54yZuVf9AM'[39m ]
    ],
    result: {}
  }
}
Lecture lanc√©e : Dans la foreÃÇt un Ouistiti le clip ! Mon imagier des comptines de la maternelle - Gallimard Jeunesse
{
  status: [33m200[39m,
  statusText: [32m'OK'[39m,
  headers: Object [AxiosHeaders] {
    server: [32m'Lyrion Music Server (9.0.0 - 1732822968)'[39m,
    connection: [32m'close'[39m,
    [32m'content-length'[39m: [32m'137'[39m,
    [32m'content-type'[39m: [32m'application/json'[39m,
    [32m'x-time-to-serve'[39m: [32m'0.0398240089416504'[39m
  },
  config: {
    transitional: {
      silentJSONParsing: [33mtrue[39m,
      forcedJSONParsing: [33mtrue[39m,
      clarifyTimeoutError: [33mfalse[39m
    },
    adapter: [ [32m'xhr'[39m, [32m'http'[39m, [32m'fetch'[39m ],
    transformRequest: [ [36m[Function: transformRequest][39m ],
    transformResponse: [ [36m[Function: transformResponse][39m ],
    timeout: [33m0[39m,
    xsrfCookieName: [32m'XSRF-TOKEN'[39m,
    xsrfHeaderName: [32m'X-XSRF-TOKEN'[39m,
    maxContentLength: [33m-1[39m,
    maxBodyLength: [33m-1[39m,
    env: {
      FormData: [Function: FormData] {
        LINE_BREAK: [32m'\r\n'[39m,
        DEFAULT_CONTENT_TYPE: [32m'application/octet-stream'[39m
      },
      Blob: [1mnull[22m
    },
    validateStatus: [36m[Function: validateStatus][39m,
    headers: Object [AxiosHeaders] {
      Accept: [32m'application/json, text/plain, */*'[39m,
      [32m'Content-Type'[39m: [32m'application/json'[39m,
      Origin: [32m'http://192.168.1.16:9000'[39m,
      Referer: [32m'http://192.168.1.16:9000/'[39m,
      Cookie: [32m'Squeezebox-player=b8:27:eb:e4:b0:6e'[39m,
      [32m'User-Agent'[39m: [32m'axios/1.7.7'[39m,
      [32m'Content-Length'[39m: [32m'125'[39m,
      [32m'Accept-Encoding'[39m: [32m'gzip, compress, deflate, br'[39m
    },
    method: [32m'post'[39m,
    url: [32m'http://192.168.1.16:9000/jsonrpc.js'[39m,
    data: [32m'{"id":0,"method":"slim.request","params":["b8:27:eb:e4:b0:6e",["playlist","play","youtube://www.youtube.com/v/HxUAv3hdX_g"]]}'[39m
  },
  request: [36m<ref *1>[39m ClientRequest {
    _events: [Object: null prototype] {
      abort: [36m[Function (anonymous)][39m,
      aborted: [36m[Function (anonymous)][39m,
      connect: [36m[Function (anonymous)][39m,
      error: [36m[Function (anonymous)][39m,
      socket: [36m[Function (anonymous)][39m,
      timeout: [36m[Function (anonymous)][39m,
      finish: [36m[Function: requestOnFinish][39m
    },
    _eventsCount: [33m7[39m,
    _maxListeners: [90mundefined[39m,
    outputData: [],
    outputSize: [33m0[39m,
    writable: [33mtrue[39m,
    destroyed: [33mfalse[39m,
    _last: [33mtrue[39m,
    chunkedEncoding: [33mfalse[39m,
    shouldKeepAlive: [33mfalse[39m,
    maxRequestsOnConnectionReached: [33mfalse[39m,
    _defaultKeepAlive: [33mtrue[39m,
    useChunkedEncodingByDefault: [33mtrue[39m,
    sendDate: [33mfalse[39m,
    _removedConnection: [33mfalse[39m,
    _removedContLen: [33mfalse[39m,
    _removedTE: [33mfalse[39m,
    strictContentLength: [33mfalse[39m,
    _contentLength: [32m'125'[39m,
    _hasBody: [33mtrue[39m,
    _trailer: [32m''[39m,
    finished: [33mtrue[39m,
    _headerSent: [33mtrue[39m,
    _closed: [33mfalse[39m,
    socket: [36m<ref *2>[39m Socket {
      connecting: [33mfalse[39m,
      _hadError: [33mfalse[39m,
      _parent: [1mnull[22m,
      _host: [1mnull[22m,
      _closeAfterHandlingError: [33mfalse[39m,
      _readableState: ReadableState {
        objectMode: [33mfalse[39m,
        highWaterMark: [33m16384[39m,
        buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
        length: [33m0[39m,
        pipes: [],
        flowing: [33mtrue[39m,
        ended: [33mfalse[39m,
        endEmitted: [33mfalse[39m,
        reading: [33mtrue[39m,
        constructed: [33mtrue[39m,
        sync: [33mfalse[39m,
        needReadable: [33mtrue[39m,
        emittedReadable: [33mfalse[39m,
        readableListening: [33mfalse[39m,
        resumeScheduled: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        emitClose: [33mfalse[39m,
        autoDestroy: [33mtrue[39m,
        destroyed: [33mfalse[39m,
        errored: [1mnull[22m,
        closed: [33mfalse[39m,
        closeEmitted: [33mfalse[39m,
        defaultEncoding: [32m'utf8'[39m,
        awaitDrainWriters: [1mnull[22m,
        multiAwaitDrain: [33mfalse[39m,
        readingMore: [33mfalse[39m,
        dataEmitted: [33mtrue[39m,
        decoder: [1mnull[22m,
        encoding: [1mnull[22m,
        [[32mSymbol(kPaused)[39m]: [33mfalse[39m
      },
      _events: [Object: null prototype] {
        end: [36m[Function: onReadableStreamEnd][39m,
        free: [36m[Function: onFree][39m,
        close: [ [36m[Function: onClose][39m, [36m[Function: socketCloseListener][39m ],
        timeout: [36m[Function: onTimeout][39m,
        agentRemove: [36m[Function: onRemove][39m,
        error: [36m[Function: socketErrorListener][39m,
        finish: [Function: bound onceWrapper] { listener: [36m[Function: destroy][39m }
      },
      _eventsCount: [33m7[39m,
      _maxListeners: [90mundefined[39m,
      _writableState: WritableState {
        objectMode: [33mfalse[39m,
        highWaterMark: [33m16384[39m,
        finalCalled: [33mtrue[39m,
        needDrain: [33mfalse[39m,
        ending: [33mtrue[39m,
        ended: [33mtrue[39m,
        finished: [33mfalse[39m,
        destroyed: [33mfalse[39m,
        decodeStrings: [33mfalse[39m,
        defaultEncoding: [32m'utf8'[39m,
        length: [33m0[39m,
        writing: [33mfalse[39m,
        corked: [33m0[39m,
        sync: [33mfalse[39m,
        bufferProcessing: [33mfalse[39m,
        onwrite: [36m[Function: bound onwrite][39m,
        writecb: [1mnull[22m,
        writelen: [33m0[39m,
        afterWriteTickInfo: [1mnull[22m,
        buffered: [],
        bufferedIndex: [33m0[39m,
        allBuffers: [33mtrue[39m,
        allNoop: [33mtrue[39m,
        pendingcb: [33m1[39m,
        constructed: [33mtrue[39m,
        prefinished: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        emitClose: [33mfalse[39m,
        autoDestroy: [33mtrue[39m,
        errored: [1mnull[22m,
        closed: [33mfalse[39m,
        closeEmitted: [33mfalse[39m,
        [[32mSymbol(kOnFinished)[39m]: []
      },
      allowHalfOpen: [33mfalse[39m,
      _sockname: [1mnull[22m,
      _pendingData: [1mnull[22m,
      _pendingEncoding: [32m''[39m,
      server: [1mnull[22m,
      _server: [1mnull[22m,
      parser: [1mnull[22m,
      _httpMessage: [36m[Circular *1][39m,
      [[32mSymbol(async_id_symbol)[39m]: [33m510[39m,
      [[32mSymbol(kHandle)[39m]: TCP {
        reading: [33mtrue[39m,
        onconnection: [1mnull[22m,
        [[32mSymbol(owner_symbol)[39m]: [36m[Circular *2][39m
      },
      [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
      [[32mSymbol(timeout)[39m]: [1mnull[22m,
      [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
      [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
      [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
      [[32mSymbol(kSetNoDelay)[39m]: [33mfalse[39m,
      [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
      [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
      [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
      [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
      [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
    },
    _header: [32m'POST /jsonrpc.js HTTP/1.1\r\n'[39m +
      [32m'Accept: application/json, text/plain, */*\r\n'[39m +
      [32m'Content-Type: application/json\r\n'[39m +
      [32m'Origin: http://192.168.1.16:9000\r\n'[39m +
      [32m'Referer: http://192.168.1.16:9000/\r\n'[39m +
      [32m'Cookie: Squeezebox-player=b8:27:eb:e4:b0:6e\r\n'[39m +
      [32m'User-Agent: axios/1.7.7\r\n'[39m +
      [32m'Content-Length: 125\r\n'[39m +
      [32m'Accept-Encoding: gzip, compress, deflate, br\r\n'[39m +
      [32m'Host: 192.168.1.16:9000\r\n'[39m +
      [32m'Connection: close\r\n'[39m +
      [32m'\r\n'[39m,
    _keepAliveTimeout: [33m0[39m,
    _onPendingData: [36m[Function: nop][39m,
    agent: Agent {
      _events: [Object: null prototype] {
        free: [36m[Function (anonymous)][39m,
        newListener: [36m[Function: maybeEnableKeylog][39m
      },
      _eventsCount: [33m2[39m,
      _maxListeners: [90mundefined[39m,
      defaultPort: [33m80[39m,
      protocol: [32m'http:'[39m,
      options: [Object: null prototype] { path: [1mnull[22m },
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype] {
        [32m'192.168.1.16:9000:'[39m: [
          [36m<ref *2>[39m Socket {
            connecting: [33mfalse[39m,
            _hadError: [33mfalse[39m,
            _parent: [1mnull[22m,
            _host: [1mnull[22m,
            _closeAfterHandlingError: [33mfalse[39m,
            _readableState: ReadableState {
              objectMode: [33mfalse[39m,
              highWaterMark: [33m16384[39m,
              buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
              length: [33m0[39m,
              pipes: [],
              flowing: [33mtrue[39m,
              ended: [33mfalse[39m,
              endEmitted: [33mfalse[39m,
              reading: [33mtrue[39m,
              constructed: [33mtrue[39m,
              sync: [33mfalse[39m,
              needReadable: [33mtrue[39m,
              emittedReadable: [33mfalse[39m,
              readableListening: [33mfalse[39m,
              resumeScheduled: [33mfalse[39m,
              errorEmitted: [33mfalse[39m,
              emitClose: [33mfalse[39m,
              autoDestroy: [33mtrue[39m,
              destroyed: [33mfalse[39m,
              errored: [1mnull[22m,
              closed: [33mfalse[39m,
              closeEmitted: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              awaitDrainWriters: [1mnull[22m,
              multiAwaitDrain: [33mfalse[39m,
              readingMore: [33mfalse[39m,
              dataEmitted: [33mtrue[39m,
              decoder: [1mnull[22m,
              encoding: [1mnull[22m,
              [[32mSymbol(kPaused)[39m]: [33mfalse[39m
            },
            _events: [Object: null prototype] {
              end: [36m[Function: onReadableStreamEnd][39m,
              free: [36m[Function: onFree][39m,
              close: [ [36m[Function: onClose][39m, [36m[Function: socketCloseListener][39m ],
              timeout: [36m[Function: onTimeout][39m,
              agentRemove: [36m[Function: onRemove][39m,
              error: [36m[Function: socketErrorListener][39m,
              finish: [Function: bound onceWrapper] {
                listener: [36m[Function: destroy][39m
              }
            },
            _eventsCount: [33m7[39m,
            _maxListeners: [90mundefined[39m,
            _writableState: WritableState {
              objectMode: [33mfalse[39m,
              highWaterMark: [33m16384[39m,
              finalCalled: [33mtrue[39m,
              needDrain: [33mfalse[39m,
              ending: [33mtrue[39m,
              ended: [33mtrue[39m,
              finished: [33mfalse[39m,
              destroyed: [33mfalse[39m,
              decodeStrings: [33mfalse[39m,
              defaultEncoding: [32m'utf8'[39m,
              length: [33m0[39m,
              writing: [33mfalse[39m,
              corked: [33m0[39m,
              sync: [33mfalse[39m,
              bufferProcessing: [33mfalse[39m,
              onwrite: [36m[Function: bound onwrite][39m,
              writecb: [1mnull[22m,
              writelen: [33m0[39m,
              afterWriteTickInfo: [1mnull[22m,
              buffered: [],
              bufferedIndex: [33m0[39m,
              allBuffers: [33mtrue[39m,
              allNoop: [33mtrue[39m,
              pendingcb: [33m1[39m,
              constructed: [33mtrue[39m,
              prefinished: [33mfalse[39m,
              errorEmitted: [33mfalse[39m,
              emitClose: [33mfalse[39m,
              autoDestroy: [33mtrue[39m,
              errored: [1mnull[22m,
              closed: [33mfalse[39m,
              closeEmitted: [33mfalse[39m,
              [[32mSymbol(kOnFinished)[39m]: []
            },
            allowHalfOpen: [33mfalse[39m,
            _sockname: [1mnull[22m,
            _pendingData: [1mnull[22m,
            _pendingEncoding: [32m''[39m,
            server: [1mnull[22m,
            _server: [1mnull[22m,
            parser: [1mnull[22m,
            _httpMessage: [36m[Circular *1][39m,
            [[32mSymbol(async_id_symbol)[39m]: [33m510[39m,
            [[32mSymbol(kHandle)[39m]: TCP {
              reading: [33mtrue[39m,
              onconnection: [1mnull[22m,
              [[32mSymbol(owner_symbol)[39m]: [36m[Circular *2][39m
            },
            [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
            [[32mSymbol(timeout)[39m]: [1mnull[22m,
            [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
            [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
            [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
            [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
            [[32mSymbol(kSetNoDelay)[39m]: [33mfalse[39m,
            [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
            [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
            [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
            [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
            [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
          }
        ]
      },
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: [33m1000[39m,
      keepAlive: [33mfalse[39m,
      maxSockets: [33mInfinity[39m,
      maxFreeSockets: [33m256[39m,
      scheduling: [32m'lifo'[39m,
      maxTotalSockets: [33mInfinity[39m,
      totalSocketCount: [33m1[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m
    },
    socketPath: [90mundefined[39m,
    method: [32m'POST'[39m,
    maxHeaderSize: [90mundefined[39m,
    insecureHTTPParser: [90mundefined[39m,
    path: [32m'/jsonrpc.js'[39m,
    _ended: [33mtrue[39m,
    res: IncomingMessage {
      _readableState: ReadableState {
        objectMode: [33mfalse[39m,
        highWaterMark: [33m16384[39m,
        buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
        length: [33m0[39m,
        pipes: [],
        flowing: [33mtrue[39m,
        ended: [33mtrue[39m,
        endEmitted: [33mtrue[39m,
        reading: [33mfalse[39m,
        constructed: [33mtrue[39m,
        sync: [33mtrue[39m,
        needReadable: [33mfalse[39m,
        emittedReadable: [33mfalse[39m,
        readableListening: [33mfalse[39m,
        resumeScheduled: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        emitClose: [33mtrue[39m,
        autoDestroy: [33mtrue[39m,
        destroyed: [33mtrue[39m,
        errored: [1mnull[22m,
        closed: [33mtrue[39m,
        closeEmitted: [33mtrue[39m,
        defaultEncoding: [32m'utf8'[39m,
        awaitDrainWriters: [1mnull[22m,
        multiAwaitDrain: [33mfalse[39m,
        readingMore: [33mtrue[39m,
        dataEmitted: [33mtrue[39m,
        decoder: [1mnull[22m,
        encoding: [1mnull[22m,
        [[32mSymbol(kPaused)[39m]: [33mfalse[39m
      },
      _events: [Object: null prototype] {
        end: [ [36m[Function: responseOnEnd][39m, [36m[Function: handleStreamEnd][39m ],
        error: [36m[Function: handleStreamError][39m,
        data: [36m[Function: handleStreamData][39m,
        aborted: [36m[Function: handlerStreamAborted][39m
      },
      _eventsCount: [33m4[39m,
      _maxListeners: [90mundefined[39m,
      socket: [36m<ref *2>[39m Socket {
        connecting: [33mfalse[39m,
        _hadError: [33mfalse[39m,
        _parent: [1mnull[22m,
        _host: [1mnull[22m,
        _closeAfterHandlingError: [33mfalse[39m,
        _readableState: ReadableState {
          objectMode: [33mfalse[39m,
          highWaterMark: [33m16384[39m,
          buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
          length: [33m0[39m,
          pipes: [],
          flowing: [33mtrue[39m,
          ended: [33mfalse[39m,
          endEmitted: [33mfalse[39m,
          reading: [33mtrue[39m,
          constructed: [33mtrue[39m,
          sync: [33mfalse[39m,
          needReadable: [33mtrue[39m,
          emittedReadable: [33mfalse[39m,
          readableListening: [33mfalse[39m,
          resumeScheduled: [33mfalse[39m,
          errorEmitted: [33mfalse[39m,
          emitClose: [33mfalse[39m,
          autoDestroy: [33mtrue[39m,
          destroyed: [33mfalse[39m,
          errored: [1mnull[22m,
          closed: [33mfalse[39m,
          closeEmitted: [33mfalse[39m,
          defaultEncoding: [32m'utf8'[39m,
          awaitDrainWriters: [1mnull[22m,
          multiAwaitDrain: [33mfalse[39m,
          readingMore: [33mfalse[39m,
          dataEmitted: [33mtrue[39m,
          decoder: [1mnull[22m,
          encoding: [1mnull[22m,
          [[32mSymbol(kPaused)[39m]: [33mfalse[39m
        },
        _events: [Object: null prototype] {
          end: [36m[Function: onReadableStreamEnd][39m,
          free: [36m[Function: onFree][39m,
          close: [ [36m[Function: onClose][39m, [36m[Function: socketCloseListener][39m ],
          timeout: [36m[Function: onTimeout][39m,
          agentRemove: [36m[Function: onRemove][39m,
          error: [36m[Function: socketErrorListener][39m,
          finish: [Function: bound onceWrapper] {
            listener: [36m[Function: destroy][39m
          }
        },
        _eventsCount: [33m7[39m,
        _maxListeners: [90mundefined[39m,
        _writableState: WritableState {
          objectMode: [33mfalse[39m,
          highWaterMark: [33m16384[39m,
          finalCalled: [33mtrue[39m,
          needDrain: [33mfalse[39m,
          ending: [33mtrue[39m,
          ended: [33mtrue[39m,
          finished: [33mfalse[39m,
          destroyed: [33mfalse[39m,
          decodeStrings: [33mfalse[39m,
          defaultEncoding: [32m'utf8'[39m,
          length: [33m0[39m,
          writing: [33mfalse[39m,
          corked: [33m0[39m,
          sync: [33mfalse[39m,
          bufferProcessing: [33mfalse[39m,
          onwrite: [36m[Function: bound onwrite][39m,
          writecb: [1mnull[22m,
          writelen: [33m0[39m,
          afterWriteTickInfo: [1mnull[22m,
          buffered: [],
          bufferedIndex: [33m0[39m,
          allBuffers: [33mtrue[39m,
          allNoop: [33mtrue[39m,
          pendingcb: [33m1[39m,
          constructed: [33mtrue[39m,
          prefinished: [33mfalse[39m,
          errorEmitted: [33mfalse[39m,
          emitClose: [33mfalse[39m,
          autoDestroy: [33mtrue[39m,
          errored: [1mnull[22m,
          closed: [33mfalse[39m,
          closeEmitted: [33mfalse[39m,
          [[32mSymbol(kOnFinished)[39m]: []
        },
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [1mnull[22m,
        _server: [1mnull[22m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular *1][39m,
        [[32mSymbol(async_id_symbol)[39m]: [33m510[39m,
        [[32mSymbol(kHandle)[39m]: TCP {
          reading: [33mtrue[39m,
          onconnection: [1mnull[22m,
          [[32mSymbol(owner_symbol)[39m]: [36m[Circular *2][39m
        },
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetNoDelay)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
        [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
      },
      httpVersionMajor: [33m1[39m,
      httpVersionMinor: [33m1[39m,
      httpVersion: [32m'1.1'[39m,
      complete: [33mtrue[39m,
      rawHeaders: [
        [32m'Server'[39m,
        [32m'Lyrion Music Server (9.0.0 - 1732822968)'[39m,
        [32m'Connection'[39m,
        [32m'close'[39m,
        [32m'Content-Length'[39m,
        [32m'137'[39m,
        [32m'Content-Type'[39m,
        [32m'application/json'[39m,
        [32m'X-Time-To-Serve'[39m,
        [32m'0.0398240089416504'[39m
      ],
      rawTrailers: [],
      aborted: [33mfalse[39m,
      upgrade: [33mfalse[39m,
      url: [32m''[39m,
      method: [1mnull[22m,
      statusCode: [33m200[39m,
      statusMessage: [32m'OK'[39m,
      client: [36m<ref *2>[39m Socket {
        connecting: [33mfalse[39m,
        _hadError: [33mfalse[39m,
        _parent: [1mnull[22m,
        _host: [1mnull[22m,
        _closeAfterHandlingError: [33mfalse[39m,
        _readableState: ReadableState {
          objectMode: [33mfalse[39m,
          highWaterMark: [33m16384[39m,
          buffer: BufferList { head: [1mnull[22m, tail: [1mnull[22m, length: [33m0[39m },
          length: [33m0[39m,
          pipes: [],
          flowing: [33mtrue[39m,
          ended: [33mfalse[39m,
          endEmitted: [33mfalse[39m,
          reading: [33mtrue[39m,
          constructed: [33mtrue[39m,
          sync: [33mfalse[39m,
          needReadable: [33mtrue[39m,
          emittedReadable: [33mfalse[39m,
          readableListening: [33mfalse[39m,
          resumeScheduled: [33mfalse[39m,
          errorEmitted: [33mfalse[39m,
          emitClose: [33mfalse[39m,
          autoDestroy: [33mtrue[39m,
          destroyed: [33mfalse[39m,
          errored: [1mnull[22m,
          closed: [33mfalse[39m,
          closeEmitted: [33mfalse[39m,
          defaultEncoding: [32m'utf8'[39m,
          awaitDrainWriters: [1mnull[22m,
          multiAwaitDrain: [33mfalse[39m,
          readingMore: [33mfalse[39m,
          dataEmitted: [33mtrue[39m,
          decoder: [1mnull[22m,
          encoding: [1mnull[22m,
          [[32mSymbol(kPaused)[39m]: [33mfalse[39m
        },
        _events: [Object: null prototype] {
          end: [36m[Function: onReadableStreamEnd][39m,
          free: [36m[Function: onFree][39m,
          close: [ [36m[Function: onClose][39m, [36m[Function: socketCloseListener][39m ],
          timeout: [36m[Function: onTimeout][39m,
          agentRemove: [36m[Function: onRemove][39m,
          error: [36m[Function: socketErrorListener][39m,
          finish: [Function: bound onceWrapper] {
            listener: [36m[Function: destroy][39m
          }
        },
        _eventsCount: [33m7[39m,
        _maxListeners: [90mundefined[39m,
        _writableState: WritableState {
          objectMode: [33mfalse[39m,
          highWaterMark: [33m16384[39m,
          finalCalled: [33mtrue[39m,
          needDrain: [33mfalse[39m,
          ending: [33mtrue[39m,
          ended: [33mtrue[39m,
          finished: [33mfalse[39m,
          destroyed: [33mfalse[39m,
          decodeStrings: [33mfalse[39m,
          defaultEncoding: [32m'utf8'[39m,
          length: [33m0[39m,
          writing: [33mfalse[39m,
          corked: [33m0[39m,
          sync: [33mfalse[39m,
          bufferProcessing: [33mfalse[39m,
          onwrite: [36m[Function: bound onwrite][39m,
          writecb: [1mnull[22m,
          writelen: [33m0[39m,
          afterWriteTickInfo: [1mnull[22m,
          buffered: [],
          bufferedIndex: [33m0[39m,
          allBuffers: [33mtrue[39m,
          allNoop: [33mtrue[39m,
          pendingcb: [33m1[39m,
          constructed: [33mtrue[39m,
          prefinished: [33mfalse[39m,
          errorEmitted: [33mfalse[39m,
          emitClose: [33mfalse[39m,
          autoDestroy: [33mtrue[39m,
          errored: [1mnull[22m,
          closed: [33mfalse[39m,
          closeEmitted: [33mfalse[39m,
          [[32mSymbol(kOnFinished)[39m]: []
        },
        allowHalfOpen: [33mfalse[39m,
        _sockname: [1mnull[22m,
        _pendingData: [1mnull[22m,
        _pendingEncoding: [32m''[39m,
        server: [1mnull[22m,
        _server: [1mnull[22m,
        parser: [1mnull[22m,
        _httpMessage: [36m[Circular *1][39m,
        [[32mSymbol(async_id_symbol)[39m]: [33m510[39m,
        [[32mSymbol(kHandle)[39m]: TCP {
          reading: [33mtrue[39m,
          onconnection: [1mnull[22m,
          [[32mSymbol(owner_symbol)[39m]: [36m[Circular *2][39m
        },
        [[32mSymbol(lastWriteQueueSize)[39m]: [33m0[39m,
        [[32mSymbol(timeout)[39m]: [1mnull[22m,
        [[32mSymbol(kBuffer)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferCb)[39m]: [1mnull[22m,
        [[32mSymbol(kBufferGen)[39m]: [1mnull[22m,
        [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetNoDelay)[39m]: [33mfalse[39m,
        [[32mSymbol(kSetKeepAlive)[39m]: [33mtrue[39m,
        [[32mSymbol(kSetKeepAliveInitialDelay)[39m]: [33m60[39m,
        [[32mSymbol(kBytesRead)[39m]: [33m0[39m,
        [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
        [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
      },
      _consuming: [33mfalse[39m,
      _dumped: [33mfalse[39m,
      req: [36m[Circular *1][39m,
      responseUrl: [32m'http://192.168.1.16:9000/jsonrpc.js'[39m,
      redirects: [],
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
      [[32mSymbol(kHeaders)[39m]: {
        server: [32m'Lyrion Music Server (9.0.0 - 1732822968)'[39m,
        connection: [32m'close'[39m,
        [32m'content-length'[39m: [32m'137'[39m,
        [32m'content-type'[39m: [32m'application/json'[39m,
        [32m'x-time-to-serve'[39m: [32m'0.0398240089416504'[39m
      },
      [[32mSymbol(kHeadersCount)[39m]: [33m10[39m,
      [[32mSymbol(kTrailers)[39m]: [1mnull[22m,
      [[32mSymbol(kTrailersCount)[39m]: [33m0[39m,
      [[32mSymbol(RequestTimeout)[39m]: [90mundefined[39m
    },
    aborted: [33mfalse[39m,
    timeoutCb: [1mnull[22m,
    upgradeOrConnect: [33mfalse[39m,
    parser: [1mnull[22m,
    maxHeadersCount: [1mnull[22m,
    reusedSocket: [33mfalse[39m,
    host: [32m'192.168.1.16'[39m,
    protocol: [32m'http:'[39m,
    _redirectable: Writable {
      _writableState: WritableState {
        objectMode: [33mfalse[39m,
        highWaterMark: [33m16384[39m,
        finalCalled: [33mfalse[39m,
        needDrain: [33mfalse[39m,
        ending: [33mfalse[39m,
        ended: [33mfalse[39m,
        finished: [33mfalse[39m,
        destroyed: [33mfalse[39m,
        decodeStrings: [33mtrue[39m,
        defaultEncoding: [32m'utf8'[39m,
        length: [33m0[39m,
        writing: [33mfalse[39m,
        corked: [33m0[39m,
        sync: [33mtrue[39m,
        bufferProcessing: [33mfalse[39m,
        onwrite: [36m[Function: bound onwrite][39m,
        writecb: [1mnull[22m,
        writelen: [33m0[39m,
        afterWriteTickInfo: [1mnull[22m,
        buffered: [],
        bufferedIndex: [33m0[39m,
        allBuffers: [33mtrue[39m,
        allNoop: [33mtrue[39m,
        pendingcb: [33m0[39m,
        constructed: [33mtrue[39m,
        prefinished: [33mfalse[39m,
        errorEmitted: [33mfalse[39m,
        emitClose: [33mtrue[39m,
        autoDestroy: [33mtrue[39m,
        errored: [1mnull[22m,
        closed: [33mfalse[39m,
        closeEmitted: [33mfalse[39m,
        [[32mSymbol(kOnFinished)[39m]: []
      },
      _events: [Object: null prototype] {
        response: [36m[Function: handleResponse][39m,
        error: [36m[Function: handleRequestError][39m,
        socket: [36m[Function: handleRequestSocket][39m
      },
      _eventsCount: [33m3[39m,
      _maxListeners: [90mundefined[39m,
      _options: {
        maxRedirects: [33m21[39m,
        maxBodyLength: [33mInfinity[39m,
        protocol: [32m'http:'[39m,
        path: [32m'/jsonrpc.js'[39m,
        method: [32m'POST'[39m,
        headers: [Object: null prototype] {
          Accept: [32m'application/json, text/plain, */*'[39m,
          [32m'Content-Type'[39m: [32m'application/json'[39m,
          Origin: [32m'http://192.168.1.16:9000'[39m,
          Referer: [32m'http://192.168.1.16:9000/'[39m,
          Cookie: [32m'Squeezebox-player=b8:27:eb:e4:b0:6e'[39m,
          [32m'User-Agent'[39m: [32m'axios/1.7.7'[39m,
          [32m'Content-Length'[39m: [32m'125'[39m,
          [32m'Accept-Encoding'[39m: [32m'gzip, compress, deflate, br'[39m
        },
        agents: { http: [90mundefined[39m, https: [90mundefined[39m },
        auth: [90mundefined[39m,
        family: [90mundefined[39m,
        beforeRedirect: [36m[Function: dispatchBeforeRedirect][39m,
        beforeRedirects: { proxy: [36m[Function: beforeRedirect][39m },
        hostname: [32m'192.168.1.16'[39m,
        port: [32m'9000'[39m,
        agent: [90mundefined[39m,
        nativeProtocols: {
          [32m'http:'[39m: {
            _connectionListener: [36m[Function: connectionListener][39m,
            METHODS: [
              [32m'ACL'[39m,         [32m'BIND'[39m,       [32m'CHECKOUT'[39m,
              [32m'CONNECT'[39m,     [32m'COPY'[39m,       [32m'DELETE'[39m,
              [32m'GET'[39m,         [32m'HEAD'[39m,       [32m'LINK'[39m,
              [32m'LOCK'[39m,        [32m'M-SEARCH'[39m,   [32m'MERGE'[39m,
              [32m'MKACTIVITY'[39m,  [32m'MKCALENDAR'[39m, [32m'MKCOL'[39m,
              [32m'MOVE'[39m,        [32m'NOTIFY'[39m,     [32m'OPTIONS'[39m,
              [32m'PATCH'[39m,       [32m'POST'[39m,       [32m'PROPFIND'[39m,
              [32m'PROPPATCH'[39m,   [32m'PURGE'[39m,      [32m'PUT'[39m,
              [32m'REBIND'[39m,      [32m'REPORT'[39m,     [32m'SEARCH'[39m,
              [32m'SOURCE'[39m,      [32m'SUBSCRIBE'[39m,  [32m'TRACE'[39m,
              [32m'UNBIND'[39m,      [32m'UNLINK'[39m,     [32m'UNLOCK'[39m,
              [32m'UNSUBSCRIBE'[39m
            ],
            STATUS_CODES: {
              [32m'100'[39m: [32m'Continue'[39m,
              [32m'101'[39m: [32m'Switching Protocols'[39m,
              [32m'102'[39m: [32m'Processing'[39m,
              [32m'103'[39m: [32m'Early Hints'[39m,
              [32m'200'[39m: [32m'OK'[39m,
              [32m'201'[39m: [32m'Created'[39m,
              [32m'202'[39m: [32m'Accepted'[39m,
              [32m'203'[39m: [32m'Non-Authoritative Information'[39m,
              [32m'204'[39m: [32m'No Content'[39m,
              [32m'205'[39m: [32m'Reset Content'[39m,
              [32m'206'[39m: [32m'Partial Content'[39m,
              [32m'207'[39m: [32m'Multi-Status'[39m,
              [32m'208'[39m: [32m'Already Reported'[39m,
              [32m'226'[39m: [32m'IM Used'[39m,
              [32m'300'[39m: [32m'Multiple Choices'[39m,
              [32m'301'[39m: [32m'Moved Permanently'[39m,
              [32m'302'[39m: [32m'Found'[39m,
              [32m'303'[39m: [32m'See Other'[39m,
              [32m'304'[39m: [32m'Not Modified'[39m,
              [32m'305'[39m: [32m'Use Proxy'[39m,
              [32m'307'[39m: [32m'Temporary Redirect'[39m,
              [32m'308'[39m: [32m'Permanent Redirect'[39m,
              [32m'400'[39m: [32m'Bad Request'[39m,
              [32m'401'[39m: [32m'Unauthorized'[39m,
              [32m'402'[39m: [32m'Payment Required'[39m,
              [32m'403'[39m: [32m'Forbidden'[39m,
              [32m'404'[39m: [32m'Not Found'[39m,
              [32m'405'[39m: [32m'Method Not Allowed'[39m,
              [32m'406'[39m: [32m'Not Acceptable'[39m,
              [32m'407'[39m: [32m'Proxy Authentication Required'[39m,
              [32m'408'[39m: [32m'Request Timeout'[39m,
              [32m'409'[39m: [32m'Conflict'[39m,
              [32m'410'[39m: [32m'Gone'[39m,
              [32m'411'[39m: [32m'Length Required'[39m,
              [32m'412'[39m: [32m'Precondition Failed'[39m,
              [32m'413'[39m: [32m'Payload Too Large'[39m,
              [32m'414'[39m: [32m'URI Too Long'[39m,
              [32m'415'[39m: [32m'Unsupported Media Type'[39m,
              [32m'416'[39m: [32m'Range Not Satisfiable'[39m,
              [32m'417'[39m: [32m'Expectation Failed'[39m,
              [32m'418'[39m: [32m"I'm a Teapot"[39m,
              [32m'421'[39m: [32m'Misdirected Request'[39m,
              [32m'422'[39m: [32m'Unprocessable Entity'[39m,
              [32m'423'[39m: [32m'Locked'[39m,
              [32m'424'[39m: [32m'Failed Dependency'[39m,
              [32m'425'[39m: [32m'Too Early'[39m,
              [32m'426'[39m: [32m'Upgrade Required'[39m,
              [32m'428'[39m: [32m'Precondition Required'[39m,
              [32m'429'[39m: [32m'Too Many Requests'[39m,
              [32m'431'[39m: [32m'Request Header Fields Too Large'[39m,
              [32m'451'[39m: [32m'Unavailable For Legal Reasons'[39m,
              [32m'500'[39m: [32m'Internal Server Error'[39m,
              [32m'501'[39m: [32m'Not Implemented'[39m,
              [32m'502'[39m: [32m'Bad Gateway'[39m,
              [32m'503'[39m: [32m'Service Unavailable'[39m,
              [32m'504'[39m: [32m'Gateway Timeout'[39m,
              [32m'505'[39m: [32m'HTTP Version Not Supported'[39m,
              [32m'506'[39m: [32m'Variant Also Negotiates'[39m,
              [32m'507'[39m: [32m'Insufficient Storage'[39m,
              [32m'508'[39m: [32m'Loop Detected'[39m,
              [32m'509'[39m: [32m'Bandwidth Limit Exceeded'[39m,
              [32m'510'[39m: [32m'Not Extended'[39m,
              [32m'511'[39m: [32m'Network Authentication Required'[39m
            },
            Agent: [Function: Agent] { defaultMaxSockets: [33mInfinity[39m },
            ClientRequest: [36m[Function: ClientRequest][39m,
            IncomingMessage: [36m[Function: IncomingMessage][39m,
            OutgoingMessage: [36m[Function: OutgoingMessage][39m,
            Server: [36m[Function: Server][39m,
            ServerResponse: [36m[Function: ServerResponse][39m,
            createServer: [36m[Function: createServer][39m,
            validateHeaderName: [36m[Function: __node_internal_][39m,
            validateHeaderValue: [36m[Function: __node_internal_][39m,
            get: [36m[Function: get][39m,
            request: [36m[Function: request][39m,
            setMaxIdleHTTPParsers: [36m[Function: setMaxIdleHTTPParsers][39m,
            maxHeaderSize: [36m[Getter][39m,
            globalAgent: [36m[Getter/Setter][39m
          },
          [32m'https:'[39m: {
            Agent: [36m[Function: Agent][39m,
            globalAgent: Agent {
              _events: [Object: null prototype] {
                free: [36m[Function (anonymous)][39m,
                newListener: [36m[Function: maybeEnableKeylog][39m
              },
              _eventsCount: [33m2[39m,
              _maxListeners: [90mundefined[39m,
              defaultPort: [33m443[39m,
              protocol: [32m'https:'[39m,
              options: [Object: null prototype] { path: [1mnull[22m },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {},
              keepAliveMsecs: [33m1000[39m,
              keepAlive: [33mfalse[39m,
              maxSockets: [33mInfinity[39m,
              maxFreeSockets: [33m256[39m,
              scheduling: [32m'lifo'[39m,
              maxTotalSockets: [33mInfinity[39m,
              totalSocketCount: [33m0[39m,
              maxCachedSessions: [33m100[39m,
              _sessionCache: { map: {}, list: [] },
              [[32mSymbol(kCapture)[39m]: [33mfalse[39m
            },
            Server: [36m[Function: Server][39m,
            createServer: [36m[Function: createServer][39m,
            get: [36m[Function: get][39m,
            request: [36m[Function: request][39m
          }
        },
        pathname: [32m'/jsonrpc.js'[39m
      },
      _ended: [33mtrue[39m,
      _ending: [33mtrue[39m,
      _redirectCount: [33m0[39m,
      _redirects: [],
      _requestBodyLength: [33m125[39m,
      _requestBodyBuffers: [],
      _onNativeResponse: [36m[Function (anonymous)][39m,
      _currentRequest: [36m[Circular *1][39m,
      _currentUrl: [32m'http://192.168.1.16:9000/jsonrpc.js'[39m,
      [[32mSymbol(kCapture)[39m]: [33mfalse[39m
    },
    [[32mSymbol(kCapture)[39m]: [33mfalse[39m,
    [[32mSymbol(kBytesWritten)[39m]: [33m0[39m,
    [[32mSymbol(kEndCalled)[39m]: [33mtrue[39m,
    [[32mSymbol(kNeedDrain)[39m]: [33mfalse[39m,
    [[32mSymbol(corked)[39m]: [33m0[39m,
    [[32mSymbol(kOutHeaders)[39m]: [Object: null prototype] {
      accept: [ [32m'Accept'[39m, [32m'application/json, text/plain, */*'[39m ],
      [32m'content-type'[39m: [ [32m'Content-Type'[39m, [32m'application/json'[39m ],
      origin: [ [32m'Origin'[39m, [32m'http://192.168.1.16:9000'[39m ],
      referer: [ [32m'Referer'[39m, [32m'http://192.168.1.16:9000/'[39m ],
      cookie: [ [32m'Cookie'[39m, [32m'Squeezebox-player=b8:27:eb:e4:b0:6e'[39m ],
      [32m'user-agent'[39m: [ [32m'User-Agent'[39m, [32m'axios/1.7.7'[39m ],
      [32m'content-length'[39m: [ [32m'Content-Length'[39m, [32m'125'[39m ],
      [32m'accept-encoding'[39m: [ [32m'Accept-Encoding'[39m, [32m'gzip, compress, deflate, br'[39m ],
      host: [ [32m'Host'[39m, [32m'192.168.1.16:9000'[39m ]
    },
    [[32mSymbol(kUniqueHeaders)[39m]: [1mnull[22m
  },
  data: {
    result: {},
    params: [
      [32m'b8:27:eb:e4:b0:6e'[39m,
      [ [32m'playlist'[39m, [32m'play'[39m, [32m'youtube://www.youtube.com/v/HxUAv3hdX_g'[39m ]
    ],
    id: [33m0[39m,
    method: [32m'slim.request'[39m
  }
}
Lecture lanc√©e : Comptine pour enfants - Trois Petits Moutons
Starting frontend...
yarn run v1.22.19
$ react-scripts start
Something is already running on port 3002.
Done in 0.96s.
Starting backend...
Base de donn√©es SQLite situ√©e √† : /opt/nfc-ui/backend/database.sqlite
node:events:491
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE: address already in use :::3001
    at Server.setupListenHandle [as _listen2] (node:net:1463:16)
    at listenInCluster (node:net:1511:12)
    at Server.listen (node:net:1599:7)
    at Object.<anonymous> (/opt/nfc-ui/backend/server.js:379:8)
    at Module._compile (node:internal/modules/cjs/loader:1198:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1252:10)
    at Module.load (node:internal/modules/cjs/loader:1076:32)
    at Function.Module._load (node:internal/modules/cjs/loader:911:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)
    at node:internal/main/run_main_module:22:47
Emitted 'error' event on WebSocketServer instance at:
    at Server.emit (node:events:513:28)
    at emitErrorNT (node:net:1490:8)
    at processTicksAndRejections (node:internal/process/task_queues:83:21) {
  code: 'EADDRINUSE',
  errno: -98,
  syscall: 'listen',
  address: '::',
  port: 3001
}
Killed
./start-servers.sh: line 31: 1762883 Killed                  HTTPS=true yarn start  (wd: /opt/nfc-ui/frontend)
./start-servers.sh: line 32: 1762935 Killed                  node server.js  (wd: /opt/nfc-ui/backend)
Starting frontend...
yarn run v1.22.19
$ react-scripts start
(node:1767245) [DEP_WEBPACK_DEV_SERVER_HTTPS] DeprecationWarning: 'https' option is deprecated. Please use the 'server' option.
(Use `node --trace-deprecation ...` to show where the warning was created)
(node:1767245) [DEP_WEBPACK_DEV_SERVER_ON_AFTER_SETUP_MIDDLEWARE] DeprecationWarning: 'onAfterSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.
(node:1767245) [DEP_WEBPACK_DEV_SERVER_ON_BEFORE_SETUP_MIDDLEWARE] DeprecationWarning: 'onBeforeSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.
Starting the development server...

Compiled successfully!

You can now view nfc-assoc in the browser.

  Local:            https://localhost:3002
  On Your Network:  https://192.168.1.45:3002

Note that the development build is not optimized.
To create a production build, use yarn build.

webpack compiled successfully
Starting backend...
Base de donn√©es SQLite situ√©e √† : /opt/nfc-ui/backend/database.sqlite
Serveur en cours d'ex√©cution sur https://https://192.168.1.45:3001
Client connect√©
Client d√©connect√©
